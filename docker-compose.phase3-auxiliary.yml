networks:
  sutazai-network:
    external: true
services:
  awesome-code-ai:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-awesome-code-ai-phase3
    deploy: &id001
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    environment:
      AGENT_NAME: awesome-code-ai
      AGENT_ROLE: code-enhancement
      AGENT_TYPE: development
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: &id002
    - sutazai-network
    ports:
    - 11062:8080
    restart: unless-stopped
    volumes:
    - ./agents/awesome-code-ai:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  data-analysis-engineer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-data-analysis-engineer-phase3
    deploy: *id001
    environment:
      AGENT_NAME: data-analysis-engineer
      AGENT_ROLE: data-insights
      AGENT_TYPE: data-analysis
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11054:8080
    restart: unless-stopped
    volumes:
    - ./agents/data-analysis-engineer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  data-pipeline-engineer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-data-pipeline-engineer-phase3
    deploy: *id001
    environment:
      AGENT_NAME: data-pipeline-engineer
      AGENT_ROLE: pipeline-management
      AGENT_TYPE: data-engineering
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11055:8080
    restart: unless-stopped
    volumes:
    - ./agents/data-pipeline-engineer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  dify-automation-specialist:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-dify-automation-specialist-phase3
    deploy: *id001
    environment:
      AGENT_NAME: dify-automation-specialist
      AGENT_ROLE: workflow-automation
      AGENT_TYPE: automation
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11060:8080
    restart: unless-stopped
    volumes:
    - ./agents/dify-automation-specialist:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  distributed-computing-architect:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-distributed-computing-architect-phase3
    deploy: *id001
    environment:
      AGENT_NAME: distributed-computing-architect
      AGENT_ROLE: distributed-systems
      AGENT_TYPE: infrastructure
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11056:8080
    restart: unless-stopped
    volumes:
    - ./agents/distributed-computing-architect:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  distributed-tracing-analyzer-jaeger:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-distributed-tracing-analyzer-phase3
    deploy: *id001
    environment:
      AGENT_NAME: distributed-tracing-analyzer-jaeger
      AGENT_ROLE: distributed-tracing
      AGENT_TYPE: monitoring
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11048:8080
    restart: unless-stopped
    volumes:
    - ./agents/distributed-tracing-analyzer-jaeger:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  document-knowledge-manager:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-document-knowledge-manager-phase3
    deploy: *id001
    environment:
      AGENT_NAME: document-knowledge-manager
      AGENT_ROLE: document-processing
      AGENT_TYPE: knowledge-management
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11058:8080
    restart: unless-stopped
    volumes:
    - ./agents/document-knowledge-manager:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  edge-computing-optimizer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-edge-computing-optimizer-phase3
    deploy: *id001
    environment:
      AGENT_NAME: edge-computing-optimizer
      AGENT_ROLE: edge-optimization
      AGENT_TYPE: optimization
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11057:8080
    restart: unless-stopped
    volumes:
    - ./agents/edge-computing-optimizer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  episodic-memory-engineer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-episodic-memory-engineer-phase3
    deploy: *id001
    environment:
      AGENT_NAME: episodic-memory-engineer
      AGENT_ROLE: memory-systems
      AGENT_TYPE: memory-management
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11059:8080
    restart: unless-stopped
    volumes:
    - ./agents/episodic-memory-engineer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  evolution-strategy-trainer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-evolution-strategy-trainer-phase3
    deploy: *id001
    environment:
      AGENT_NAME: evolution-strategy-trainer
      AGENT_ROLE: strategy-optimization
      AGENT_TYPE: optimization
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11045:8080
    restart: unless-stopped
    volumes:
    - ./agents/evolution-strategy-trainer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  experiment-tracker:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-experiment-tracker-phase3
    deploy: *id001
    environment:
      AGENT_NAME: experiment-tracker
      AGENT_ROLE: experiment-management
      AGENT_TYPE: monitoring
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11046:8080
    restart: unless-stopped
    volumes:
    - ./agents/experiment-tracker:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  explainability-and-transparency-agent:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-explainability-transparency-phase3
    deploy: *id001
    environment:
      AGENT_NAME: explainability-and-transparency-agent
      AGENT_ROLE: model-explainability
      AGENT_TYPE: governance
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11047:8080
    restart: unless-stopped
    volumes:
    - ./agents/explainability-and-transparency-agent:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  explainable-ai-specialist:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-explainable-ai-specialist-phase3
    deploy: *id001
    environment:
      AGENT_NAME: explainable-ai-specialist
      AGENT_ROLE: ai-interpretation
      AGENT_TYPE: ai-ml
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11052:8080
    restart: unless-stopped
    volumes:
    - ./agents/explainable-ai-specialist:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  federated-learning-coordinator:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-federated-learning-coordinator-phase3
    deploy: *id001
    environment:
      AGENT_NAME: federated-learning-coordinator
      AGENT_ROLE: federated-learning
      AGENT_TYPE: ai-ml
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11053:8080
    restart: unless-stopped
    volumes:
    - ./agents/federated-learning-coordinator:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  finrobot:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-finrobot-phase3
    deploy: *id001
    environment:
      AGENT_NAME: finrobot
      AGENT_ROLE: financial-analysis
      AGENT_TYPE: financial
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11063:8080
    restart: unless-stopped
    volumes:
    - ./agents/finrobot:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  flowiseai-flow-manager:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-flowiseai-flow-manager-phase3
    deploy: *id001
    environment:
      AGENT_NAME: flowiseai-flow-manager
      AGENT_ROLE: flow-management
      AGENT_TYPE: workflow
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11061:8080
    restart: unless-stopped
    volumes:
    - ./agents/flowiseai-flow-manager:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  garbage-collector-coordinator:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-garbage-collector-coordinator-phase3
    deploy: *id001
    environment:
      AGENT_NAME: garbage-collector-coordinator
      AGENT_ROLE: memory-cleanup
      AGENT_TYPE: resource-management
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11064:8080
    restart: unless-stopped
    volumes:
    - ./agents/garbage-collector-coordinator:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  genetic-algorithm-tuner:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-genetic-algorithm-tuner-phase3
    deploy: *id001
    environment:
      AGENT_NAME: genetic-algorithm-tuner
      AGENT_ROLE: evolutionary-optimization
      AGENT_TYPE: optimization
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11067:8080
    restart: unless-stopped
    volumes:
    - ./agents/genetic-algorithm-tuner:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  goal-setting-and-planning-agent:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-goal-setting-planning-agent-phase3
    deploy: *id001
    environment:
      AGENT_NAME: goal-setting-and-planning-agent
      AGENT_ROLE: strategic-planning
      AGENT_TYPE: planning
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11068:8080
    restart: unless-stopped
    volumes:
    - ./agents/goal-setting-and-planning-agent:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  gpu-hardware-optimizer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-gpu-hardware-optimizer-phase3
    deploy: *id001
    environment:
      AGENT_NAME: gpu-hardware-optimizer
      AGENT_ROLE: gpu-optimization
      AGENT_TYPE: hardware-optimization
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11066:8080
    restart: unless-stopped
    volumes:
    - ./agents/gpu-hardware-optimizer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  gradient-compression-specialist:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-gradient-compression-specialist-phase3
    deploy: *id001
    environment:
      AGENT_NAME: gradient-compression-specialist
      AGENT_ROLE: gradient-optimization
      AGENT_TYPE: optimization
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11065:8080
    restart: unless-stopped
    volumes:
    - ./agents/gradient-compression-specialist:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  log-aggregator-loki:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-log-aggregator-loki-phase3
    deploy: *id001
    environment:
      AGENT_NAME: log-aggregator-loki
      AGENT_ROLE: log-management
      AGENT_TYPE: monitoring
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11049:8080
    restart: unless-stopped
    volumes:
    - ./agents/log-aggregator-loki:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  metrics-collector-prometheus:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-metrics-collector-prometheus-phase3
    deploy: *id001
    environment:
      AGENT_NAME: metrics-collector-prometheus
      AGENT_ROLE: metrics-collection
      AGENT_TYPE: monitoring
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11050:8080
    restart: unless-stopped
    volumes:
    - ./agents/metrics-collector-prometheus:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  observability-dashboard-manager-grafana:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-observability-dashboard-manager-phase3
    deploy: *id001
    environment:
      AGENT_NAME: observability-dashboard-manager-grafana
      AGENT_ROLE: dashboard-management
      AGENT_TYPE: monitoring
      PRIORITY: auxiliary
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11051:8080
    restart: unless-stopped
    volumes:
    - ./agents/observability-dashboard-manager-grafana:/app
    - agent_workspaces:/workspaces
    working_dir: /app
version: '3.8'
volumes:
  agent_workspaces:
    external: true
x-agent-base:
  command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
    \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
    \"\n"
  deploy: *id001
  environment:
    AGENT_POOL: python
    CONSUL_URL: http://consul:8500
    DEPLOYMENT_PHASE: '3'
    LOG_LEVEL: INFO
    OLLAMA_BASE_URL: http://ollama:11434
    PHASE_PRIORITY: auxiliary
    RABBITMQ_URL: amqp://sutazai:sutazai_rmq@rabbitmq:5672/sutazai
    REDIS_URL: redis://redis:6379/0
  image: python:3.11-slim
  networks: *id002
  restart: unless-stopped
  working_dir: /app
