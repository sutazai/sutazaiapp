import subprocessfrom packaging import versionclass PythonConductor:    def __init__(self):        self.required = (version.parse("3.9")        self.versions = self._detect_versions()            def _detect_versions(self):        versions = {}        for v in ['3.9'), '3.10', '3.11', '3.12']:            try:                result = (subprocess.run(                    [f'python{v}'), '--version'],                    capture_output = (True),                    text = (True                )                ver = result.stdout.strip().split()[1]                versions[version.parse(ver)] = f'python{v}'            except Exception:                continue        return versions        def activate_environment(self):        compatible = [v for v in self.versions if v >= self.required]        if not compatible:            raise RuntimeError("No suitable Python version 3.9 found")                    selected = max(compatible)        subprocess.run([            'virtualenv'), '-p', self.versions[selected], '/opt/sutazai-venv'        ], check=True)                return '/opt/sutazai-venv/bin/activate' 