name: Test Optional Features

on:
  push:
    branches: [main, develop, v*]
  pull_request:
    branches: [main, develop]

jobs:
  test-feature-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Test all combinations of feature flags
          - name: "All Disabled"
            enable_fsdp: false
            enable_tabby: false
            profile: ""
          
          - name: "FSDP Only"
            enable_fsdp: true
            enable_tabby: false
            profile: "fsdp"
          
          - name: "TabbyML Only"
            enable_fsdp: false
            enable_tabby: true
            profile: "tabby"
          
          - name: "All Enabled"
            enable_fsdp: true
            enable_tabby: true
            profile: "optional"
    
    name: Test - ${{ matrix.name }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install base dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install pytest pytest-asyncio
      
      - name: Install optional dependencies if needed
        if: matrix.enable_fsdp == true || matrix.enable_tabby == true
        run: |
          cd backend
          if [ "${{ matrix.enable_fsdp }}" = "true" ]; then
            pip install torch transformers accelerate || true
          fi
      
      - name: Set environment variables
        run: |
          echo "ENABLE_FSDP=${{ matrix.enable_fsdp }}" >> $GITHUB_ENV
          echo "ENABLE_TABBY=${{ matrix.enable_tabby }}" >> $GITHUB_ENV
          echo "TABBY_URL=http://localhost:8080" >> $GITHUB_ENV
      
      - name: Run unit tests
        run: |
          cd /opt/sutazaiapp
          python -m pytest tests/test_optional_features.py -v
      
      - name: Start Docker services
        run: |
          docker network create sutazai-network || true
          
          # Start core services
          docker-compose up -d postgres redis
          
          # Start optional services if profile specified
          if [ -n "${{ matrix.profile }}" ]; then
            docker-compose --profile ${{ matrix.profile }} up -d
          fi
          
          # Wait for services
          sleep 10
      
      - name: Test feature endpoints
        run: |
          # Start backend in background
          cd backend
          uvicorn app.main:app --host 0.0.0.0 --port 10010 &
          BACKEND_PID=$!
          
          # Wait for backend to start
          sleep 5
          
          # Test features endpoint
          curl -f http://localhost:10010/api/v1/features || exit 1
          
          # Verify feature states match expectations
          RESPONSE=$(curl -s http://localhost:10010/api/v1/features)
          
          # Check FSDP state
          FSDP_ENABLED=$(echo $RESPONSE | python -c "import sys, json; print(json.load(sys.stdin)['fsdp']['enabled'])")
          if [ "$FSDP_ENABLED" != "${{ matrix.enable_fsdp }}" ]; then
            echo "FSDP state mismatch: expected ${{ matrix.enable_fsdp }}, got $FSDP_ENABLED"
            exit 1
          fi
          
          # Check TabbyML state
          TABBY_ENABLED=$(echo $RESPONSE | python -c "import sys, json; print(json.load(sys.stdin)['tabby']['enabled'])")
          if [ "$TABBY_ENABLED" != "${{ matrix.enable_tabby }}" ]; then
            echo "TabbyML state mismatch: expected ${{ matrix.enable_tabby }}, got $TABBY_ENABLED"
            exit 1
          fi
          
          # Clean up
          kill $BACKEND_PID
      
      - name: Check service health
        if: matrix.profile != ''
        run: |
          # Check if optional services are running when enabled
          if [ "${{ matrix.enable_fsdp }}" = "true" ]; then
            docker-compose ps | grep fsdp || echo "FSDP service not found (may be expected)"
          fi
          
          if [ "${{ matrix.enable_tabby }}" = "true" ]; then
            docker-compose ps | grep tabbyml || echo "TabbyML service not found (may be expected)"
          fi
      
      - name: Clean up
        if: always()
        run: |
          docker-compose --profile optional down -v
          docker network rm sutazai-network || true

  integration-test:
    runs-on: ubuntu-latest
    needs: test-feature-matrix
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install all dependencies
        run: |
          cd backend
          pip install -e ".[all]"
          pip install pytest pytest-asyncio httpx
      
      - name: Integration test with all features
        env:
          ENABLE_FSDP: true
          ENABLE_TABBY: true
        run: |
          # Run integration tests
          python -m pytest tests/test_optional_features.py -v -k "not test_default"
      
      - name: Integration test with no features
        env:
          ENABLE_FSDP: false
          ENABLE_TABBY: false
        run: |
          # Run integration tests
          python -m pytest tests/test_optional_features.py -v