version: '3.8'

services:
  # System Validator Service
  system-validator:
    image: python:3.9-slim
    container_name: sutazai-system-validator
    command: tail -f /dev/null  # Keep container running for testing
    environment:
      - CONFIG_PATH=/opt/sutazaiapp/config
      - LOG_LEVEL=INFO
      - MAX_MEMORY_MB=4096
      - AGENT_NAME=system-validator
    volumes:
      - ./:/app
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config:/opt/sutazaiapp/config
      - ./logs:/app/logs
    working_dir: /app
    depends_on:
      - api
      - redis
      - postgres
      - prometheus
      - grafana
    networks:
      - sutazai-network

  # API Service Stub
  api:
    image: python:3.9-slim
    container_name: sutazai-api
    command: python -m http.server 8000
    working_dir: /app
    volumes:
      - ./stubs/api:/app
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sutazai-network

  # Frontend Service Stub
  frontend:
    image: nginx:alpine
    container_name: sutazai-frontend
    volumes:
      - ./stubs/frontend:/usr/share/nginx/html
    ports:
      - "3000:80"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sutazai-network

  # Worker Service Stub
  worker:
    image: python:3.9-slim
    container_name: sutazai-worker
    command: python -c "import time; print('Worker started'); time.sleep(3600)"
    environment:
      - QUEUE=tasks
    networks:
      - sutazai-network

  # Processor Service Stub
  processor:
    image: python:3.9-slim
    container_name: sutazai-processor
    command: python -c "import time; print('Processor started'); time.sleep(3600)"
    environment:
      - QUEUE=processing
    networks:
      - sutazai-network

  # Storage Service Stub
  storage:
    image: python:3.9-slim
    container_name: sutazai-storage
    command: python -m http.server 8003
    working_dir: /app
    volumes:
      - ./stubs/storage:/app
    ports:
      - "8003:8003"
    networks:
      - sutazai-network

  # Notifier Service Stub
  notifier:
    image: python:3.9-slim
    container_name: sutazai-notifier
    command: python -c "import time; print('Notifier started'); time.sleep(3600)"
    environment:
      - QUEUE=notifications
    networks:
      - sutazai-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: sutazai-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sutazai-network

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: sutazai-postgres
    environment:
      - POSTGRES_USER=sutazai
      - POSTGRES_PASSWORD=sutazai
      - POSTGRES_DB=sutazai
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sutazai"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sutazai-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: sutazai-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    volumes:
      - ./stubs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sutazai-network

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: sutazai-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_HTTP_PORT=3001
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sutazai-network

networks:
  sutazai-network:
    driver: bridge