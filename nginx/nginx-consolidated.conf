# ============================================================================
# SutazAI NGINX Configuration - Consolidated
# Generated: 2025-08-15
# ============================================================================
# This is the consolidated NGINX configuration for all SutazAI services
# Use environment variables and includes for environment-specific settings
# ============================================================================

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# ============================================================================
# Events Configuration
# ============================================================================
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

# ============================================================================
# HTTP Configuration
# ============================================================================
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ========================================
    # Logging
    # ========================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format json escape=json '{'
        '"timestamp":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"request":"$request",'
        '"status":$status,'
        '"bytes_sent":$body_bytes_sent,'
        '"request_time":$request_time,'
        '"upstream_response_time":"$upstream_response_time",'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
    '}';

    access_log /var/log/nginx/access.log json;

    # ========================================
    # Performance Optimization
    # ========================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 10;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 100m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    output_buffers 1 32k;
    postpone_output 1460;

    # ========================================
    # Compression
    # ========================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml 
               text/x-js text/x-cross-domain-policy application/x-font-ttf 
               application/x-font-opentype application/vnd.ms-fontobject 
               image/x-icon;
    gzip_disable "msie6";

    # ========================================
    # Security Headers
    # ========================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # ========================================
    # Rate Limiting
    # ========================================
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=200r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # ========================================
    # Upstream Definitions
    # ========================================
    
    # Backend API
    upstream backend {
        least_conn;
        server backend:10010 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Frontend Application
    upstream frontend {
        least_conn;
        server frontend:10011 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Ollama AI Service
    upstream ollama {
        least_conn;
        server ollama:10104 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    # Grafana Monitoring
    upstream grafana {
        server grafana:10201 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    # Prometheus Metrics
    upstream prometheus {
        server prometheus:10200 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    # ========================================
    # SSL Configuration (when enabled)
    # ========================================
    # Include SSL configuration when ENABLE_SSL is true
    # include /etc/nginx/conf.d/ssl.conf;

    # ========================================
    # Server Blocks
    # ========================================
    
    # Default server block - Backend API
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn addr 10;

        # API Backend
        location /api/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://backend/health;
            access_log off;
        }

        # Metrics endpoint (internal only)
        location /metrics {
            proxy_pass http://backend/metrics;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Frontend application
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Ollama AI Service
    server {
        listen 8080;
        server_name ollama.*;

        location / {
            proxy_pass http://ollama;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            # Ollama specific timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Large buffer for AI responses
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
    }

    # Monitoring Dashboard
    server {
        listen 8081;
        server_name monitoring.*;

        # Grafana
        location / {
            proxy_pass http://grafana;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
    }

    # SSL Server Block (when enabled)
    # include /etc/nginx/sites-enabled/ssl.conf;
}

# ============================================================================
# Stream Configuration (for non-HTTP services)
# ============================================================================
stream {
    # PostgreSQL
    upstream postgres {
        server postgres:5432;
    }
    
    server {
        listen 15432;
        proxy_pass postgres;
        proxy_connect_timeout 60s;
        proxy_timeout 60s;
    }

    # Redis
    upstream redis {
        server redis:6379;
    }
    
    server {
        listen 16379;
        proxy_pass redis;
        proxy_connect_timeout 60s;
        proxy_timeout 60s;
    }
}