{
  "test_execution_summary": {
    "timestamp": "2025-08-02T01:28:28.351280",
    "total_execution_time": 31.489408254623413,
    "total_tests": 22,
    "passed_tests": 14,
    "failed_tests": 7,
    "error_tests": 1,
    "ai_generated_tests": 0,
    "success_rate": 63.63636363636363,
    "status": "FAILED"
  },
  "test_categories": {
    "API Endpoints": {
      "total": 5,
      "passed": 3,
      "success_rate": 60.0,
      "status": "FAILED"
    },
    "AI Model Integration": {
      "total": 3,
      "passed": 2,
      "success_rate": 66.66666666666666,
      "status": "FAILED"
    },
    "Agent Communication": {
      "total": 3,
      "passed": 1,
      "success_rate": 33.33333333333333,
      "status": "FAILED"
    },
    "Database Operations": {
      "total": 1,
      "passed": 1,
      "success_rate": 100.0,
      "status": "PASSED"
    },
    "Redis Caching": {
      "total": 1,
      "passed": 1,
      "success_rate": 100.0,
      "status": "PASSED"
    },
    "Frontend Integration": {
      "total": 1,
      "passed": 1,
      "success_rate": 100.0,
      "status": "PASSED"
    },
    "Security Validation": {
      "total": 2,
      "passed": 2,
      "success_rate": 100.0,
      "status": "PASSED"
    },
    "Performance Benchmarks": {
      "total": 2,
      "passed": 2,
      "success_rate": 100.0,
      "status": "PASSED"
    },
    "Error Handling": {
      "total": 2,
      "passed": 1,
      "success_rate": 50.0,
      "status": "FAILED"
    },
    "Edge Cases": {
      "total": 2,
      "passed": 0,
      "success_rate": 0.0,
      "status": "FAILED"
    }
  },
  "detailed_results": {
    "API Endpoints": [
      "TestResult(test_name='endpoint_health', status='passed', duration=0.007166862487792969, details={'url': 'http://localhost:8000/health', 'method': 'GET', 'status_code': 200, 'expected_status': 200, 'response_time': 0.007166862487792969, 'json_valid': True, 'response_size': 106, 'headers': {'date': 'Fri, 01 Aug 2025 23:27:56 GMT', 'server': 'uvicorn', 'content-length': '99', 'content-type': 'application/json'}}, timestamp=datetime.datetime(2025, 8, 2, 1, 27, 56, 869133), error_message=None, ai_generated=False)",
      "TestResult(test_name='endpoint_api_root', status='failed', duration=0.0023353099822998047, details={'url': 'http://localhost:8000/api/v1', 'method': 'GET', 'status_code': 404, 'expected_status': 200, 'response_time': 0.0023353099822998047, 'json_valid': True, 'response_size': 23, 'headers': {'date': 'Fri, 01 Aug 2025 23:27:56 GMT', 'server': 'uvicorn', 'content-length': '22', 'content-type': 'application/json'}}, timestamp=datetime.datetime(2025, 8, 2, 1, 27, 56, 871691), error_message='Status: 404, Time: 0.00s', ai_generated=False)",
      "TestResult(test_name='endpoint_agents_list', status='passed', duration=0.0015521049499511719, details={'url': 'http://localhost:8000/api/v1/agents', 'method': 'GET', 'status_code': 200, 'expected_status': 200, 'response_time': 0.0015521049499511719, 'json_valid': True, 'response_size': 178, 'headers': {'date': 'Fri, 01 Aug 2025 23:27:56 GMT', 'server': 'uvicorn', 'content-length': '166', 'content-type': 'application/json'}}, timestamp=datetime.datetime(2025, 8, 2, 1, 27, 56, 873333), error_message=None, ai_generated=False)",
      "TestResult(test_name='endpoint_agents_status', status='failed', duration=0.0012869834899902344, details={'url': 'http://localhost:8000/api/v1/agents/status', 'method': 'GET', 'status_code': 404, 'expected_status': 200, 'response_time': 0.0012869834899902344, 'json_valid': True, 'response_size': 23, 'headers': {'date': 'Fri, 01 Aug 2025 23:27:56 GMT', 'server': 'uvicorn', 'content-length': '22', 'content-type': 'application/json'}}, timestamp=datetime.datetime(2025, 8, 2, 1, 27, 56, 874692), error_message='Status: 404, Time: 0.00s', ai_generated=False)",
      "TestResult(test_name='endpoint_ollama_health', status='passed', duration=0.04795694351196289, details={'url': 'http://localhost:10104/api/tags', 'method': 'GET', 'status_code': 200, 'expected_status': 200, 'response_time': 0.04795694351196289, 'json_valid': True, 'response_size': 364, 'headers': {'Content-Type': 'application/json; charset=utf-8', 'Date': 'Fri, 01 Aug 2025 23:27:56 GMT', 'Content-Length': '341'}}, timestamp=datetime.datetime(2025, 8, 2, 1, 27, 56, 922796), error_message=None, ai_generated=False)"
    ],
    "AI Model Integration": [
      "TestResult(test_name='ollama_connection', status='passed', duration=0.0028612613677978516, details={'models_available': 1, 'response_data': {'models': [{'name': 'tinyllama:latest', 'model': 'tinyllama:latest', 'modified_at': '2025-08-01T23:05:53.460345452Z', 'size': 637700138, 'digest': '2644915ede352ea7bdfaff0bfac0be74c719d5d5202acb63a6fb095b52f394a4', 'details': {'parent_model': '', 'format': 'gguf', 'family': 'llama', 'families': ['llama'], 'parameter_size': '1B', 'quantization_level': 'Q4_0'}}]}}, timestamp=datetime.datetime(2025, 8, 2, 1, 27, 56, 926060), error_message=None, ai_generated=False)",
      "TestResult(test_name='ollama_models', status='passed', duration=0.001886129379272461, details={'models_count': 1, 'models': ['tinyllama:latest'], 'total_size': 637700138}, timestamp=datetime.datetime(2025, 8, 2, 1, 27, 56, 928071), error_message=None, ai_generated=False)",
      "TestResult(test_name='model_inference', status='error', duration=31.371104955673218, details={}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 299275), error_message=\"HTTPConnectionPool(host='localhost', port=10104): Read timed out. (read timeout=30)\", ai_generated=False)"
    ],
    "Agent Communication": [
      "TestResult(test_name='agent_registry', status='passed', duration=0.004288673400878906, details={'agents_count': 3, 'agents': [{'name': 'senior-ai-engineer', 'status': 'ready'}, {'name': 'infrastructure-devops-manager', 'status': 'ready'}, {'name': 'testing-qa-validator', 'status': 'ready'}]}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 303867), error_message=None, ai_generated=False)",
      "TestResult(test_name='agent_status', status='failed', duration=0.001821756362915039, details={'status_code': 404}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 305825), error_message='Agent status error: 404', ai_generated=False)",
      "TestResult(test_name='agent_task_assignment', status='failed', duration=0.0028944015502929688, details={'status_code': 404, 'response': '{\"detail\":\"Not found\"}'}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 308801), error_message='Task assignment failed: 404', ai_generated=False)"
    ],
    "Database Operations": [
      "TestResult(test_name='database_connection', status='passed', duration=0.0014960765838623047, details={'health_data': {'status': 'healthy', 'timestamp': '2025-08-01T23:28:28.310066', 'model': 'tinyllama', 'version': '1.0.0'}, 'database_status': 'unknown'}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 310539), error_message=None, ai_generated=False)"
    ],
    "Redis Caching": [
      "TestResult(test_name='redis_connection', status='passed', duration=0.0016603469848632812, details={'health_data': {'status': 'healthy', 'timestamp': '2025-08-01T23:28:28.311688', 'model': 'tinyllama', 'version': '1.0.0'}, 'redis_status': 'unknown'}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 312356), error_message=None, ai_generated=False)"
    ],
    "Frontend Integration": [
      "TestResult(test_name='frontend_availability', status='passed', duration=0.003320455551147461, details={'status_code': 200, 'content_length': 1522, 'content_type': 'text/html'}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 315840), error_message=None, ai_generated=False)"
    ],
    "Security Validation": [
      "TestResult(test_name='cors_configuration', status='passed', duration=0.0017559528350830078, details={'cors_headers': {'access-control-allow-origin': None, 'access-control-allow-methods': None, 'access-control-allow-headers': None}, 'status_code': 404}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 317754), error_message=None, ai_generated=False)",
      "TestResult(test_name='authentication', status='passed', duration=0.0014874935150146484, details={'status_code': 404, 'expected_codes': [401, 403, 404], 'auth_headers': {'date': 'Fri, 01 Aug 2025 23:28:27 GMT', 'server': 'uvicorn', 'content-length': '22', 'content-type': 'application/json'}}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 319317), error_message=None, ai_generated=False)"
    ],
    "Performance Benchmarks": [
      "TestResult(test_name='response_time_benchmark', status='passed', duration=0.012001752853393555, details={'average_response_time': np.float64(0.0011996030807495117), 'max_response_time': np.float64(0.001428842544555664), 'min_response_time': np.float64(0.0011036396026611328), 'requests_tested': 10, 'performance_threshold': 1.0}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 333159), error_message=None, ai_generated=False)",
      "TestResult(test_name='concurrent_requests', status='passed', duration=0.006871223449707031, details={'successful_requests': 5, 'total_requests': 5, 'average_response_time': np.float64(0.0035024), 'max_response_time': 0.004633, 'results': [(200, 0.003113), (200, 0.004633), (200, 0.002872), (200, 0.002323), (200, 0.004571)]}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 340198), error_message=None, ai_generated=False)"
    ],
    "Error Handling": [
      "TestResult(test_name='404_error_handling', status='passed', duration=0.0013141632080078125, details={'status_code': 404, 'expected_status': 404, 'response_text': '{\"detail\":\"Not found\"}'}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 341662), error_message=None, ai_generated=False)",
      "TestResult(test_name='malformed_request_handling', status='failed', duration=0.0011496543884277344, details={'status_code': 404, 'expected_error_codes': [400, 422, 500], 'response_text': '{\"detail\":\"Not found\"}'}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 342874), error_message='Expected error code, got 404', ai_generated=False)"
    ],
    "Edge Cases": [
      "TestResult(test_name='large_payload_handling', status='failed', duration=0.004509687423706055, details={'status_code': 404, 'payload_size': 1048588, 'response_size': 22}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 349466), error_message='Large payload not handled properly: 404', ai_generated=False)",
      "TestResult(test_name='timeout_handling', status='failed', duration=0.001501321792602539, details={'timeout_raised': False, 'timeout_value': 0.001}, timestamp=datetime.datetime(2025, 8, 2, 1, 28, 28, 351128), error_message='Timeout exception not raised as expected', ai_generated=False)"
    ]
  },
  "recommendations": [
    "Address 2 issues in API Endpoints",
    "Address 1 issues in AI Model Integration",
    "Address 2 issues in Agent Communication",
    "Address 1 issues in Error Handling",
    "Address 2 issues in Edge Cases"
  ],
  "system_health_score": {
    "score": 73.33333333333333,
    "level": "FAIR",
    "weighted_categories": {
      "API Endpoints": 0.25,
      "AI Model Integration": 0.2,
      "Agent Communication": 0.15,
      "Database Operations": 0.15,
      "Security Validation": 0.1,
      "Performance Benchmarks": 0.1,
      "Frontend Integration": 0.05
    }
  }
}