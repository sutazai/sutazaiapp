# SutazAI Chaos Engineering Configuration
# This file defines the chaos engineering framework settings

# Global Configuration
global:
  name: "SutazAI Chaos Engineering"
  version: "1.0.0"
  environment: "production"
  safe_mode: true
  log_level: "INFO"
  
# Experiment Scheduling
scheduling:
  enabled: true
  timezone: "UTC"
  # Run experiments during low-traffic periods (2-4 AM)
  maintenance_windows:
    - start: "02:00"
      end: "04:00"
      days: ["monday", "wednesday", "friday"]
  
# Safety Settings
safety:
  max_experiment_duration: "30m"
  health_check_interval: "30s"
  emergency_stop_timeout: "60s"
  require_healthy_services: true
  backup_validation: true
  
# Target Services Configuration
targets:
  # Core Infrastructure (Critical - Limited Chaos)
  core_services:
    - name: "postgres"
      container: "sutazai-postgres"
      criticality: "high"
      chaos_allowed: false
      safe_mode_only: true
    
    - name: "redis"
      container: "sutazai-redis"
      criticality: "high"
      chaos_allowed: true
      max_downtime: "30s"
    
    - name: "ollama"
      container: "sutazai-ollama"
      criticality: "high"
      chaos_allowed: true
      max_downtime: "60s"
  
  # Vector Databases
  vector_services:
    - name: "chromadb"
      container: "sutazai-chromadb"
      criticality: "medium"
      chaos_allowed: true
      max_downtime: "120s"
    
    - name: "qdrant"
      container: "sutazai-qdrant"
      criticality: "medium"
      chaos_allowed: true
      max_downtime: "120s"
    
    - name: "neo4j"
      container: "sutazai-neo4j"
      criticality: "medium"
      chaos_allowed: true
      max_downtime: "180s"
  
  # Application Services
  app_services:
    - name: "backend"
      container: "sutazai-backend"
      criticality: "high"
      chaos_allowed: true
      max_downtime: "60s"
    
    - name: "frontend"
      container: "sutazai-frontend"
      criticality: "medium"
      chaos_allowed: true
      max_downtime: "120s"
  
  # AI Agents (Low Risk for Chaos)
  agent_services:
    - name: "autogpt"
      container: "sutazai-autogpt"
      criticality: "low"
      chaos_allowed: true
      max_downtime: "300s"
    
    - name: "crewai"
      container: "sutazai-crewai"
      criticality: "low"
      chaos_allowed: true
      max_downtime: "300s"
    
    - name: "letta"
      container: "sutazai-letta"
      criticality: "low"
      chaos_allowed: true
      max_downtime: "300s"
  
  # Monitoring Services (Protected)
  monitoring_services:
    - name: "prometheus"
      container: "sutazai-prometheus"
      criticality: "high"
      chaos_allowed: false
      reason: "required_for_chaos_monitoring"
    
    - name: "grafana"
      container: "sutazai-grafana"
      criticality: "high"
      chaos_allowed: false
      reason: "required_for_chaos_monitoring"

# Experiment Types
experiments:
  # Container Chaos
  container_chaos:
    enabled: true
    scenarios:
      - type: "kill_container"
        probability: 0.3
        max_targets: 2
        recovery_check: true
      
      - type: "restart_container"
        probability: 0.4
        max_targets: 3
        recovery_check: true
      
      - type: "pause_container"
        probability: 0.2
        duration: "60s"
        max_targets: 1
      
      - type: "stop_container"
        probability: 0.1
        duration: "30s"
        max_targets: 1
  
  # Network Chaos
  network_chaos:
    enabled: true
    scenarios:
      - type: "latency_injection"
        latency: "100ms"
        jitter: "10ms"
        probability: 0.3
        duration: "5m"
      
      - type: "packet_loss"
        loss_rate: "5%"
        probability: 0.2
        duration: "3m"
      
      - type: "bandwidth_limit"
        bandwidth: "1Mbps"
        probability: 0.1
        duration: "2m"
      
      - type: "network_partition"
        probability: 0.1
        duration: "60s"
        targets: 2
  
  # Resource Chaos
  resource_chaos:
    enabled: true
    scenarios:
      - type: "cpu_stress"
        cpu_percent: 80
        duration: "5m"
        probability: 0.3
      
      - type: "memory_stress"
        memory_percent: 75
        duration: "3m"
        probability: 0.2
      
      - type: "disk_io_stress"
        io_percent: 70
        duration: "2m"
        probability: 0.2
      
      - type: "disk_fill"
        fill_percent: 85
        duration: "60s"
        probability: 0.1
  
  # Service Dependency Chaos
  dependency_chaos:
    enabled: true
    scenarios:
      - type: "database_failure"
        target: "postgres"
        duration: "30s"
        probability: 0.1
      
      - type: "api_timeout"
        timeout: "10s"
        probability: 0.2
        duration: "2m"
      
      - type: "service_unavailable"
        probability: 0.1
        duration: "60s"

# Monitoring Configuration
monitoring:
  enabled: true
  metrics:
    prometheus_enabled: true
    prometheus_port: 9090
    custom_metrics: true
  
  logging:
    level: "INFO"
    format: "json"
    destination: "/opt/sutazaiapp/logs/chaos.log"
  
  alerting:
    enabled: true
    webhook_url: "${CHAOS_ALERT_WEBHOOK:-}"
    slack_channel: "${CHAOS_SLACK_CHANNEL:-#alerts}"
    
  health_checks:
    enabled: true
    interval: "30s"
    timeout: "10s"
    retries: 3

# Recovery Configuration
recovery:
  automatic_recovery: true
  recovery_timeout: "300s"
  health_validation: true
  
  strategies:
    - type: "container_restart"
      timeout: "60s"
    
    - type: "service_healing"
      timeout: "120s"
    
    - type: "network_recovery"
      timeout: "30s"
    
    - type: "resource_cleanup"
      timeout: "60s"

# Reporting Configuration
reporting:
  enabled: true
  output_dir: "/opt/sutazaiapp/chaos/reports"
  formats: ["json", "html", "markdown"]
  
  metrics:
    - "experiment_duration"
    - "recovery_time"
    - "service_health_impact"
    - "error_rates"
    - "performance_degradation"
  
  retention:
    days: 30
    max_files: 100

# Integration Settings
integrations:
  docker:
    socket_path: "/var/run/docker.sock"
    compose_file: "/opt/sutazaiapp/docker-compose.yml"
    
  prometheus:
    url: "http://prometheus:9090"
    scrape_interval: "15s"
    
  grafana:
    url: "http://grafana:3000"
    dashboard_enabled: true
    
  health_monitor:
    url: "http://health-monitor:8000"
    integration_enabled: true

# Chaos Monkey Configuration
chaos_monkey:
  enabled: true
  mode: "safe"  # safe, production, aggressive, disabled
  
  # Experiment scheduling
  schedules:
    - name: "daily-container-chaos"
      experiment_type: "basic-container-chaos"
      frequency: "daily"
      schedule_pattern: "02:30"  # 2:30 AM
      target_services: ["sutazai-autogpt", "sutazai-crewai", "sutazai-letta"]
      safe_mode: true
      enabled: true
      max_duration: 600  # 10 minutes
      probability: 0.3
      maintenance_window_only: true
    
    - name: "weekly-network-chaos"
      experiment_type: "network-chaos"
      frequency: "weekly"
      schedule_pattern: "wednesday 02:30"
      target_services: ["sutazai-chromadb", "sutazai-qdrant"]
      safe_mode: true
      enabled: true
      max_duration: 900  # 15 minutes
      probability: 0.2
      maintenance_window_only: true
    
    - name: "weekly-resource-stress"
      experiment_type: "resource-stress"
      frequency: "weekly"
      schedule_pattern: "friday 02:30"
      target_services: ["sutazai-flowise", "sutazai-langflow"]
      safe_mode: true
      enabled: true
      max_duration: 720  # 12 minutes
      probability: 0.25
      maintenance_window_only: true
  
  # Safety limits
  safety:
    min_healthy_services: 0.8
    max_cpu_usage: 85
    max_memory_usage: 90
    max_concurrent_experiments: 2
    protected_services:
      - "sutazai-postgres"
      - "sutazai-prometheus"
      - "sutazai-grafana"
      - "sutazai-health-monitor"
  
  # Reporting
  reporting:
    experiment_reports: true
    health_reports: true
    alert_on_failure: true
    slack_webhook: "${CHAOS_SLACK_WEBHOOK:-}"