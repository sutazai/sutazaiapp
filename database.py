"""DatabaseconfigurationandutilitiesfortheSutazAIapplication."""#Standardlibraryimportsimportloggingfromosimportgetenv#Third-partyimportsfromsqlalchemyimportcreate_engine,eventfromsqlalchemy.ext.declarativeimportdeclarative_basefromsqlalchemy.ormimportsessionmakerfromsqlalchemy.excimportSQLAlchemyErrorfromdotenvimportload_dotenvfromtenacityimportretry,stop_after_attempt,wait_exponential#Configurelogginglogging.basicConfig(level=logging.INFO,format='%(asctime)s-%(name)s-%(levelname)s-%(message)s')logger=logging.getLogger(__name__)#Loadenvironmentvariablesload_dotenv()#DatabaseconfigurationDB_CONFIG={'user':getenv('DB_USER'),'password':getenv('DB_PASS'),'host':getenv('DB_HOST'),'port':getenv('DB_PORT'),'database':getenv('DB_NAME')}SQLALCHEMY_DATABASE_URL=(f"postgresql://{DB_CONFIG['user']}:{DB_CONFIG['password']}@"f"{DB_CONFIG['host']}:{DB_CONFIG['port']}/{DB_CONFIG['database']}")#Engineconfigurationwithconnectionpoolingengine=create_engine(SQLALCHEMY_DATABASE_URL,pool_size=5,max_overflow=10,pool_timeout=30,pool_recycle=1800,pool_pre_ping=True,connect_args={"connect_timeout":10,"keepalives":1,"keepalives_idle":30,"keepalives_interval":10,"keepalives_count":5})#SessionconfigurationSessionLocal=sessionmaker(autocommit=False,autoflush=False,bind=engine)#BaseclassformodelsBase=declarative_base()#Eventlistenersforconnectiondebugging@event.listens_for(engine,"connect")defconnect(_dbapi_connection,_connection_record):"""Logwhenadatabaseconnectionisestablished."""logger.info("Databaseconnectionestablished")@event.listens_for(engine,"checkout")defcheckout(_dbapi_connection,_connection_record,_connection_proxy):"""Logwhenadatabaseconnectionischeckedout."""logger.debug("Databaseconnectioncheckedout")@event.listens_for(engine,"checkin")defcheckin(_dbapi_connection,_connection_record):"""Logwhenadatabaseconnectionischeckedin."""logger.debug("Databaseconnectioncheckedin")#Retrydecoratorfordatabaseoperations@retry(stop=stop_after_attempt(3),wait=wait_exponential(multiplier=1,min=4,max=10),reraise=True)defget_db_session():"""Getadatabasesessionwithretrymechanism."""try:db=SessionLocal()returndbexceptSQLAlchemyErrorase:logger.error("Failedtogetdatabasesession:%s",str(e))raisedefinit_db():"""Initializedatabasewithpropererrorhandling."""try:Base.metadata.create_all(bind=engine)logger.info("Databaseinitializedsuccessfully")exceptSQLAlchemyErrorase:logger.error("Failedtoinitializedatabase:%s",str(e))raise#Healthcheckfunctiondefcheck_db_connection():"""Checkdatabaseconnectionhealth."""try:db=get_db_session()db.execute("SELECT1")db.close()returnTrueexceptSQLAlchemyErrorase:logger.error("Databasehealthcheckfailed:%s",str(e))returnFalse