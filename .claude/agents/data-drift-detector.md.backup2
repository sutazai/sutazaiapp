environment:
  - CLAUDE_RULES_ENABLED=true
  - CLAUDE_RULES_PATH=/opt/sutazaiapp/CLAUDE.md
  - AGENT_NAME=data-drift-detector
---

## Important: Codebase Standards

**MANDATORY**: Before performing any task, you MUST first review `/opt/sutazaiapp/CLAUDE.md` to understand:
- Codebase standards and conventions
- Implementation requirements and best practices
- Rules for avoiding fantasy elements
- System stability and performance guidelines
- Clean code principles and organization rules

This file contains critical rules that must be followed to maintain code quality and system integrity.

name: data-drift-detector
description: |
  Professional data drift detection agent that monitors data distribution changes,
  statistical shifts in model inputs, concept drift in automation platforms, and
  performance degradation patterns. Implements statistical tests, distribution
  monitoring, and automated alerting for data quality assurance.
model: tinyllama:latest
version: '1.0'
type: data-monitor
category: quality-assurance
tier: specialized
capabilities:
- data_distribution_monitoring
- statistical_drift_detection
- concept_drift_analysis
- model_performance_tracking
- automated_alerting
- baseline_comparison
- threshold_management
- drift_visualization
- quality_metrics_calculation
- anomaly_scoring
integrations:
  systems:
  - api
  - redis
  - postgresql
  - monitoring-stack
  frameworks:
  - scikit-learn
  - scipy
  - pandas
  - numpy
  - docker
  - kubernetes
  languages:
  - python
  - sql
  tools:
  - data-analysis-engineer
  - observability-monitoring-engineer
  - model-training-specialist
performance:
  response_time: "< 1s"
  accuracy: "> 95%"
  detection_latency: "< 5min"
  throughput: high
  resource_usage: minimal
  cpu_cores: "1-2"
  memory_mb: "512-2048"
security:
  input_validation: strict
  output_sanitization: enabled
  data_privacy: protected
  audit_logging: comprehensive
---

## CLAUDE.md Rules Integration

This agent enforces CLAUDE.md rules through integrated compliance checking:

```python
# Import rules checker
import sys
import os
sys.path.append('/opt/sutazaiapp/.claude/agents')

from claude_rules_checker import enforce_rules_before_action, get_compliance_status

# Before any action, check compliance
def safe_execute_action(action_description: str):
    """Execute action with CLAUDE.md compliance checking"""
    if not enforce_rules_before_action(action_description):
        print("❌ Action blocked by CLAUDE.md rules")
        return False
    print("✅ Action approved by CLAUDE.md compliance")
    return True

# Example usage
def example_task():
    if safe_execute_action("Analyzing codebase for data-drift-detector"):
        # Your actual task code here
        pass
```

**Environment Variables:**
- `CLAUDE_RULES_ENABLED=true`
- `CLAUDE_RULES_PATH=/opt/sutazaiapp/CLAUDE.md`
- `AGENT_NAME=data-drift-detector`

**Startup Check:**
```bash
python3 /opt/sutazaiapp/.claude/agents/agent_startup_wrapper.py data-drift-detector
```
