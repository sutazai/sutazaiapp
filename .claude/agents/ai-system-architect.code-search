# Query: ai-system-architect
# ContextLines: 1

132 results - 50 files

.claude/agents/agentgpt-autonomous-executor.md:
  2860  │   ├── senior-software-architect.md (Claude with senior-level architecture expertise)
  2861: │   ├── system-architect.md (Claude specialized in AI system architecture, ML infrastructure)
  2862  │   └── cognitive-architecture-designer.md (Claude expert in cognitive systems design)

.claude/agents/ai-qa-team-lead.md:
  193  - Integrate with data-engineer.md for AI data quality testing and validation pipeline design
  194: - Collaborate with ai-system-architect.md for AI testing architecture design and integration patterns
  195  - Coordinate with observability-monitoring-engineer.md for AI testing metrics collection and alerting setup

.claude/agents/ai-senior-automated-tester.md:
  443  ### Specialist Agent Routing (Rule 14, ultra-*)
  444: - ultrathink, ultralogic, ultrasmart → ai-system-architect, complex-problem-solver
  445  - ultradeepcodebasesearch, ultrainvestigate → complex-problem-solver, ai-senior-engineer

.claude/agents/ai-system-architect.md:
  1  ---
  2: name: ai-system-architect
  3  description: Designs specialized agents: roles, prompts, tools, policies, and evaluation; use proactively for new agent creation and best‑practice alignment.

.claude/agents/code-review-specialist.md:
  2859  │   ├── senior-software-architect.md (Claude with senior-level architecture expertise)
  2860: │   ├── ai-system-architect.md (Claude specialized in AI system architecture, ML infrastructure)
  2861  │   └── cognitive-architecture-designer.md (Claude expert in cognitive systems design)

  5946  ### Specialist Agent Routing (Rule 14, ultra-*)
  5947: - ultrathink, ultralogic, ultrasmart → ai-system-architect, complex-problem-solver
  5948  - ultradeepcodebasesearch, ultrainvestigate → complex-problem-solver, ai-senior-engineer

.claude/agents/cognitive-architecture-designer.md:
  190  **Rule 14: Specialized Claude Sub-Agent Usage - Cognitive Orchestration**
  191: - Coordinate with ai-system-architect.md for cognitive system design strategy and integration patterns
  192  - Integrate with performance-engineer.md for cognitive performance optimization and resource assessment

  468  **MANDATORY**: Trigger validation from:
  469: - **ai-system-architect**: Cognitive architecture integration and system design verification
  470  - **performance-engineer**: Cognitive performance optimization and resource efficiency validation

.claude/agents/comprehensive-researcher.md:
  2859  │   ├── senior-software-architect.md (Claude with senior-level architecture expertise)
  2860: │   ├── ai-system-architect.md (Claude specialized in AI system architecture, ML infrastructure)
  2861  │   └── cognitive-architecture-designer.md (Claude expert in cognitive systems design)

  5934  ### Specialist Agent Routing (Rule 14, ultra-*)
  5935: - ultrathink, ultralogic, ultrasmart → ai-system-architect, complex-problem-solver
  5936  - ultradeepcodebasesearch, ultrainvestigate → complex-problem-solver, ai-senior-engineer

.claude/agents/ethical-governor.md:
  191  - Integrate with compliance-validator.md for regulatory compliance verification and validation
  192: - Collaborate with ai-system-architect.md for ethical architecture design and integration patterns
  193  - Coordinate with data-engineer.md for ethical data handling and privacy implementation

  512  - **compliance-validator**: Regulatory compliance verification and legal requirement validation
  513: - **ai-system-architect**: Ethical architecture integration and technical feasibility assessment
  514  - **data-engineer**: Ethical data handling and privacy-preserving implementation validation

.claude/agents/explainable-ai-specialist.md:
  188  **Rule 14: Specialized Claude Sub-Agent Usage - AI Interpretability Orchestration**
  189: - Coordinate with ai-system-architect.md for interpretability system design and AI governance integration
  190  - Integrate with expert-code-reviewer.md for explanation code review and implementation validation

  501  **MANDATORY**: Trigger validation from:
  502: - **ai-system-architect**: Interpretability system architecture alignment and AI governance integration
  503  - **expert-code-reviewer**: Explanation implementation code review and quality verification

.claude/agents/rules-enforcer.md:
   103  5. Specialist routing (Rule 14):
   104:    - Architecture/scalability → ai-system-architect, cloud-architect (ultrathink/ultrascalablesolution)
   105     - Deep codebase search/investigation/logs → complex-problem-solver, error-detective, log-aggregator-loki, distributed-tracing-analyzer-jaeger (ultradeepcodebasesearch/ultradeeplogscheck)

   152  1) ultrathink • ultralogic • ultrasmart
   153: - Invoke: ai-system-architect, complex-problem-solver
   154  - Output: clarified objectives, constraints, risks, success criteria, rollback plan

  3029  │   ├── senior-software-architect.md (Claude with senior-level architecture expertise)
  3030: │   ├── ai-system-architect.md (Claude specialized in AI system architecture, ML infrastructure)
  3031  │   └── cognitive-architecture-designer.md (Claude expert in cognitive systems design)

  6013  ### Specialist Agent Routing (Rule 14, ultra-*)
  6014: - ultrathink, ultralogic, ultrasmart → ai-system-architect, complex-problem-solver
  6015  - ultradeepcodebasesearch, ultrainvestigate → complex-problem-solver, ai-senior-engineer

.claude/agents/sql-pro.md:
  635  ### Specialist Agent Routing (Rule 14, ultra-*)
  636: - ultrathink, ultralogic, ultrasmart → ai-system-architect, complex-problem-solver
  637  - ultradeepcodebasesearch, ultrainvestigate → complex-problem-solver, ai-senior-engineer  

agents/agent_registry.json:
  113      },
  114:     "ai-system-architect": {
  115:       "name": "ai-system-architect",
  116        "description": "Use this agent when you need to:\\n\\n- Design comprehensive AI system architectures\\n- Create scalable and modular system designs\\n- Implement AI architectures for advanced automation\\n- Design multi-modal AI integration patterns\\n- Create self-improving system architectures\\n- Implement meta-learning frameworks\\n- Design distributed AI systems\\n- Create neural-symbolic hybrid architectures\\n- Implement advanced processing approaches\\n- Build iterative improvement mechanisms\\n- Design intelligent behavior patterns\\n- Create knowledge representation systems\\n- Implement reasoning and inference engines\\n- Build memory architecture for AI systems\\n- Design attention and focus mechanisms\\n- Create goal-oriented architecture patterns\\n- Implement ethical AI frameworks\\n- Build explainable AI architectures\\n- Design robustness and safety measures\\n- Create AI evaluation frameworks\\n- Implement transfer learning architectures\\n- Build continual learning systems\\n- Design AI communication protocols\\n- Create AI-human interaction patterns\\n- Implement AI resource optimization\\n- Build AI monitoring and control systems\\n- Design AI evolution strategies\\n- Create AI alignment mechanisms\\n- Implement AI security architectures\\n- Build AI testing and validation frameworks\\n\\nDo NOT use this agent for:\\n- Specific code implementation (use code-generation agents)\\n- Deployment tasks (use deployment-automation-master)\\n- Infrastructure management (use infrastructure-devops-manager)\\n- Testing implementation (use testing-qa-validator)\\n\\nThis agent specializes in designing and evolving the fundamental architecture of AI systems for maximum intelligence and capability.",

  534      },
  535:     "ai-system-architect": {
  536:       "name": "ai-system-architect",
  537        "description": "Agent for system operations",

  542        ],
  543:       "config_path": "configs/ai-system-architect_universal.json"
  544      },

agents/configs/ai-system-architect_universal.json:
  1  {
  2:   "name": "ai-system-architect",
  3    "description": "Agent for system operations",

agents/configs/system-architect_universal.json:
  2    "name": "sutazai_system-architect",
  3: ⟪ 1062 characters skipped ⟫mization\n- Security considerations\n- Scalability planning\n- Integration capabilities\n\n## Technical Implementation\n\n### Docker Configuration:\n```yaml\nsystem-architect:\n  container_name: sutazai-system-architect\n  build: ./agents/system-architect\n  environment:\n    - AGENT_TYPE=system-architect\n    - LOG_LEVEL=INFO\n    - API_ENDPOINT=http://api:8000\n  volumes:\n    - ./data:/app/data\n    - ./configs:/app/configs\n  depends_on:\n    - api\n    - redis\n```\n\n### Agent Configuration:\n```json\n{\n  \"agent_config\": {\n    \"capabilities\": [\"analysis\", \"implementation\", \"optimization\"],\n    \"priority\": \"high\",\n    \"max_concurrent_tasks\": 5,\n    \"timeout\": 3600,\n    \"retry_policy\": {\n      \"max_retries\": 3,\n      \"backoff\": \"exponential\"\n    }\n  }\n}\n```\n\n## Integration Points\n- Backend API for communication\n- Redis for task queuing\n- PostgreSQL for state storage\n- Monitoring systems for metrics\n- Other agents for collaboration\n\n## Use this agent for:\n- Specialized tasks within its domain\n- Complex problem-solving in its area\n- Optimization and improvement tasks\n- Quality assurance in its field\n- Documentation and knowledge
  4    "config": {

agents/configs/ultra-system-architect_universal.json:
  122      "existing_agents": {
  123:       "ai-system-architect": {
  124          "integration_level": "full",

agents/core/ollama_integration.py:
  192          "ai-senior-full-stack-developer": OPUS_MODEL,
  193:         "ai-system-architect": OPUS_MODEL,
  194          "bias-and-fairness-auditor": OPUS_MODEL,

agents/core/README_ENHANCED_AGENTS.md:
  139  # Get model for specific agent
  140: model = OllamaConfig.get_model_for_agent("ai-system-architect")
  141  # Returns: "tinyllama" (Opus model for complex reasoning)

agents/hardware-resource-optimizer/shared/agents/core/ollama_integration.py:
  192          "ai-senior-full-stack-developer": OPUS_MODEL,
  193:         "ai-system-architect": OPUS_MODEL,
  194          "bias-and-fairness-auditor": OPUS_MODEL,

agents/hardware-resource-optimizer/shared/agents/core/README_ENHANCED_AGENTS.md:
  139  # Get model for specific agent
  140: model = OllamaConfig.get_model_for_agent("ai-system-architect")
  141  # Returns: "tinyllama" (Opus model for complex reasoning)

backend/tests/agent_hygiene_compliance_report.json:
   824      },
   825:     "ai-system-architect": {
   826        "passed": false,

  8825      {
  8826:       "agent": "ai-system-architect",
  8827        "severity": "HIGH",

backups/deploy_20250813_103632/config/agent_pooling.json:
  5        "agent-orchestrator",
  6:       "ai-system-architect",
  7        "ai-system-validator"

backups/deploy_20250813_103632/config/agent-resource-allocation.yml:
  74    # High-resource agents that need more than pool defaults
  75:   "ai-system-architect":
  76      cpu: "3.0"

backups/deploy_20250813_103632/config/ollama_performance_optimization.yaml:
  129    complex_reasoning_agents:
  130:     - "ai-system-architect"
  131      - "ai-senior-full-stack-developer"

backups/deploy_20250813_103632/config/port-registry.yaml:
  415    11002:
  416:     service: ai-system-architect
  417:     container: sutazai-ai-system-architect
  418      description: "System architecture design agent"

config/agent_pooling.json:
  5        "agent-orchestrator",
  6:       "ai-system-architect",
  7        "ai-system-validator"

config/agent-resource-allocation.yml:
  74    # High-resource agents that need more than pool defaults
  75:   "ai-system-architect":
  76      cpu: "3.0"

config/ollama_performance_optimization.yaml:
  129    complex_reasoning_agents:
  130:     - "ai-system-architect"
  131      - "ai-senior-full-stack-developer"

config/port-registry.yaml:
  415    11002:
  416:     service: ai-system-architect
  417:     container: sutazai-ai-system-architect
  418      description: "System architecture design agent"

IMPORTANT/Enforcement_Rules:
  2831  │   ├── senior-software-architect.md (Claude with senior-level architecture expertise)
  2832: │   ├── ai-system-architect.md (Claude specialized in AI system architecture, ML infrastructure)
  2833  │   └── cognitive-architecture-designer.md (Claude expert in cognitive systems design)

memory-bank/activeContext.md:
    7575  - agents/configs/ai-senior-full-stack-developer_universal.json
    7576: - agents/configs/ai-system-architect_universal.json
    7577  - agents/configs/ai-system-validator_universal.json

   19438  - agents/configs/ai-senior-full-stack-developer_universal.json
   19439: - agents/configs/ai-system-architect_universal.json
   19440  - agents/configs/ai-system-validator_universal.json

   31280  - agents/configs/ai-senior-full-stack-developer_universal.json
   31281: - agents/configs/ai-system-architect_universal.json
   31282  - agents/configs/ai-system-validator_universal.json

   43117  - agents/configs/ai-senior-full-stack-developer_universal.json
   43118: - agents/configs/ai-system-architect_universal.json
   43119  - agents/configs/ai-system-validator_universal.json

   54953  - agents/configs/ai-senior-full-stack-developer_universal.json
   54954: - agents/configs/ai-system-architect_universal.json
   54955  - agents/configs/ai-system-validator_universal.json

   66789  - agents/configs/ai-senior-full-stack-developer_universal.json
   66790: - agents/configs/ai-system-architect_universal.json
   66791  - agents/configs/ai-system-validator_universal.json

   78625  - agents/configs/ai-senior-full-stack-developer_universal.json
   78626: - agents/configs/ai-system-architect_universal.json
   78627  - agents/configs/ai-system-validator_universal.json

   90461  - agents/configs/ai-senior-full-stack-developer_universal.json
   90462: - agents/configs/ai-system-architect_universal.json
   90463  - agents/configs/ai-system-validator_universal.json

  102297  - agents/configs/ai-senior-full-stack-developer_universal.json
  102298: - agents/configs/ai-system-architect_universal.json
  102299  - agents/configs/ai-system-validator_universal.json

  112872  - agents/configs/ai-senior-full-stack-developer_universal.json
  112873: - agents/configs/ai-system-architect_universal.json
  112874  - agents/configs/ai-system-validator_universal.json

  123444  - agents/configs/ai-senior-full-stack-developer_universal.json
  123445: - agents/configs/ai-system-architect_universal.json
  123446  - agents/configs/ai-system-validator_universal.json

  134013  - agents/configs/ai-senior-full-stack-developer_universal.json
  134014: - agents/configs/ai-system-architect_universal.json
  134015  - agents/configs/ai-system-validator_universal.json

  144582  - agents/configs/ai-senior-full-stack-developer_universal.json
  144583: - agents/configs/ai-system-architect_universal.json
  144584  - agents/configs/ai-system-validator_universal.json

  155151  - agents/configs/ai-senior-full-stack-developer_universal.json
  155152: - agents/configs/ai-system-architect_universal.json
  155153  - agents/configs/ai-system-validator_universal.json

  165720  - agents/configs/ai-senior-full-stack-developer_universal.json
  165721: - agents/configs/ai-system-architect_universal.json
  165722  - agents/configs/ai-system-validator_universal.json

  176289  - agents/configs/ai-senior-full-stack-developer_universal.json
  176290: - agents/configs/ai-system-architect_universal.json
  176291  - agents/configs/ai-system-validator_universal.json

  186858  - agents/configs/ai-senior-full-stack-developer_universal.json
  186859: - agents/configs/ai-system-architect_universal.json
  186860  - agents/configs/ai-system-validator_universal.json

  197427  - agents/configs/ai-senior-full-stack-developer_universal.json
  197428: - agents/configs/ai-system-architect_universal.json
  197429  - agents/configs/ai-system-validator_universal.json

  207996  - agents/configs/ai-senior-full-stack-developer_universal.json
  207997: - agents/configs/ai-system-architect_universal.json
  207998  - agents/configs/ai-system-validator_universal.json

  218565  - agents/configs/ai-senior-full-stack-developer_universal.json
  218566: - agents/configs/ai-system-architect_universal.json
  218567  - agents/configs/ai-system-validator_universal.json

  229133  - agents/configs/ai-senior-full-stack-developer_universal.json
  229134: - agents/configs/ai-system-architect_universal.json
  229135  - agents/configs/ai-system-validator_universal.json

  239701  - agents/configs/ai-senior-full-stack-developer_universal.json
  239702: - agents/configs/ai-system-architect_universal.json
  239703  - agents/configs/ai-system-validator_universal.json

  250269  - agents/configs/ai-senior-full-stack-developer_universal.json
  250270: - agents/configs/ai-system-architect_universal.json
  250271  - agents/configs/ai-system-validator_universal.json

  260837  - agents/configs/ai-senior-full-stack-developer_universal.json
  260838: - agents/configs/ai-system-architect_universal.json
  260839  - agents/configs/ai-system-validator_universal.json

  271406  - agents/configs/ai-senior-full-stack-developer_universal.json
  271407: - agents/configs/ai-system-architect_universal.json
  271408  - agents/configs/ai-system-validator_universal.json

  281975  - agents/configs/ai-senior-full-stack-developer_universal.json
  281976: - agents/configs/ai-system-architect_universal.json
  281977  - agents/configs/ai-system-validator_universal.json

  292544  - agents/configs/ai-senior-full-stack-developer_universal.json
  292545: - agents/configs/ai-system-architect_universal.json
  292546  - agents/configs/ai-system-validator_universal.json

  303113  - agents/configs/ai-senior-full-stack-developer_universal.json
  303114: - agents/configs/ai-system-architect_universal.json
  303115  - agents/configs/ai-system-validator_universal.json

  313682  - agents/configs/ai-senior-full-stack-developer_universal.json
  313683: - agents/configs/ai-system-architect_universal.json
  313684  - agents/configs/ai-system-validator_universal.json

  324251  - agents/configs/ai-senior-full-stack-developer_universal.json
  324252: - agents/configs/ai-system-architect_universal.json
  324253  - agents/configs/ai-system-validator_universal.json

  334823  - agents/configs/ai-senior-full-stack-developer_universal.json
  334824: - agents/configs/ai-system-architect_universal.json
  334825  - agents/configs/ai-system-validator_universal.json

  345394  - agents/configs/ai-senior-full-stack-developer_universal.json
  345395: - agents/configs/ai-system-architect_universal.json
  345396  - agents/configs/ai-system-validator_universal.json

  355965  - agents/configs/ai-senior-full-stack-developer_universal.json
  355966: - agents/configs/ai-system-architect_universal.json
  355967  - agents/configs/ai-system-validator_universal.json

  366536  - agents/configs/ai-senior-full-stack-developer_universal.json
  366537: - agents/configs/ai-system-architect_universal.json
  366538  - agents/configs/ai-system-validator_universal.json

  377107  - agents/configs/ai-senior-full-stack-developer_universal.json
  377108: - agents/configs/ai-system-architect_universal.json
  377109  - agents/configs/ai-system-validator_universal.json

  387678  - agents/configs/ai-senior-full-stack-developer_universal.json
  387679: - agents/configs/ai-system-architect_universal.json
  387680  - agents/configs/ai-system-validator_universal.json

  398249  - agents/configs/ai-senior-full-stack-developer_universal.json
  398250: - agents/configs/ai-system-architect_universal.json
  398251  - agents/configs/ai-system-validator_universal.json

  408820  - agents/configs/ai-senior-full-stack-developer_universal.json
  408821: - agents/configs/ai-system-architect_universal.json
  408822  - agents/configs/ai-system-validator_universal.json

  419395  - agents/configs/ai-senior-full-stack-developer_universal.json
  419396: - agents/configs/ai-system-architect_universal.json
  419397  - agents/configs/ai-system-validator_universal.json

  429970  - agents/configs/ai-senior-full-stack-developer_universal.json
  429971: - agents/configs/ai-system-architect_universal.json
  429972  - agents/configs/ai-system-validator_universal.json

  440544  - agents/configs/ai-senior-full-stack-developer_universal.json
  440545: - agents/configs/ai-system-architect_universal.json
  440546  - agents/configs/ai-system-validator_universal.json

  451064  - agents/configs/ai-senior-full-stack-developer_universal.json
  451065: - agents/configs/ai-system-architect_universal.json
  451066  - agents/configs/ai-system-validator_universal.json

  461582  - agents/configs/ai-senior-full-stack-developer_universal.json
  461583: - agents/configs/ai-system-architect_universal.json
  461584  - agents/configs/ai-system-validator_universal.json

  472100  - agents/configs/ai-senior-full-stack-developer_universal.json
  472101: - agents/configs/ai-system-architect_universal.json
  472102  - agents/configs/ai-system-validator_universal.json

  482618  - agents/configs/ai-senior-full-stack-developer_universal.json
  482619: - agents/configs/ai-system-architect_universal.json
  482620  - agents/configs/ai-system-validator_universal.json

  493134  - agents/configs/ai-senior-full-stack-developer_universal.json
  493135: - agents/configs/ai-system-architect_universal.json
  493136  - agents/configs/ai-system-validator_universal.json

  503643  - agents/configs/ai-senior-full-stack-developer_universal.json
  503644: - agents/configs/ai-system-architect_universal.json
  503645  - agents/configs/ai-system-validator_universal.json

  514152  - agents/configs/ai-senior-full-stack-developer_universal.json
  514153: - agents/configs/ai-system-architect_universal.json
  514154  - agents/configs/ai-system-validator_universal.json

  524659  - agents/configs/ai-senior-full-stack-developer_universal.json
  524660: - agents/configs/ai-system-architect_universal.json
  524661  - agents/configs/ai-system-validator_universal.json

  535166  - agents/configs/ai-senior-full-stack-developer_universal.json
  535167: - agents/configs/ai-system-architect_universal.json
  535168  - agents/configs/ai-system-validator_universal.json

  545673  - agents/configs/ai-senior-full-stack-developer_universal.json
  545674: - agents/configs/ai-system-architect_universal.json
  545675  - agents/configs/ai-system-validator_universal.json

  556180  - agents/configs/ai-senior-full-stack-developer_universal.json
  556181: - agents/configs/ai-system-architect_universal.json
  556182  - agents/configs/ai-system-validator_universal.json

  566696  - agents/configs/ai-senior-full-stack-developer_universal.json
  566697: - agents/configs/ai-system-architect_universal.json
  566698  - agents/configs/ai-system-validator_universal.json

monitoring/dashboard_data.json:
  161      {
  162:       "name": "ai-system-architect",
  163        "status": "restarting",

monitoring/grafana/dashboards/sutazai-agent-performance.json:
  311          {
  312:           "expr": "up{job=\"ai-system-architect\"}",
  313:           "legendFormat": "ai-system-architect",
  314            "refId": "M"

scripts/automation/agent-restart-monitor.sh:
  26      "sutazai-agent-orchestrator:8004"
  27:     "sutazai-ai-system-architect:8005"
  28  )

scripts/automation/performance-report-generator.sh:
  225          "sutazai-agent-orchestrator:8004"
  226:         "sutazai-ai-system-architect:8005"
  227      )

scripts/deployment/optimization_orchestrator.py:
  80                  'deep-learning-brain-architect',
  81:                 'ai-system-architect',
  82                  'infrastructure-devops-manager',

scripts/monitoring/test_monitoring_system_comprehensive.py:
   89                  },
   90:                 "ai-system-architect": {
   91:                     "id": "ai-system-architect", 
   92                      "name": "AI System Architect",

   94                      "enabled": True,
   95:                     "container_name": "sutazai-ai-system-architect",
   96                      "port": 8082,

  148              "sutazai-ai-testing-qa-validator\tUp 2 hours\t0.0.0.0:8081->8080/tcp\n"
  149:             "sutazai-ai-system-architect\tUp 1 hour (healthy)\t0.0.0.0:8082->8080/tcp\n"
  150              "sutazai-observability-monitoring-engineer\tRestarting (1) 5 minutes ago\t\n"

  428              "sutazai-ai-testing-qa-validator\tUp 2 hours (healthy)\t0.0.0.0:8081->8080/tcp\n"
  429:             "sutazai-ai-system-architect\tUp 1 hour (healthy)\t0.0.0.0:8082->8080/tcp\n"
  430          )

scripts/utils/generate-agent-tests.py:
   86  const AGENT_TEST_SCENARIOS = {{
   87:   "ai-system-architect": {{
   88      prompts: [

  356    const highLoadAgents = [
  357:     'ai-system-architect',
  358      'ai-senior-backend-developer',

  422      'critical agents available': () => {{
  423:       const criticalAgents = ['ai-system-architect', 'ai-qa-team-lead', 'deployment-automation-master'];
  424        return criticalAgents.every(agent => results[agent] === true);

  489          agents = {
  490:             "ai-system-architect": {"capabilities": ["system_design"]},
  491              "ai-qa-team-lead": {"capabilities": ["testing", "quality_assurance"]},

scripts/utils/production-load-test.py:
  97          self.agents = {
  98:             'ai-system-architect': f'{base_url}:11010',
  99              'ai-qa-team-lead': f'{base_url}:11082',

src/agents/agents/agent_registry.json:
  113      },
  114:     "ai-system-architect": {
  115:       "name": "ai-system-architect",
  116        "description": "Use this agent when you need to:\\n\\n- Design comprehensive AI system architectures\\n- Create scalable and modular system designs\\n- Implement AI architectures for advanced automation\\n- Design multi-modal AI integration patterns\\n- Create self-improving system architectures\\n- Implement meta-learning frameworks\\n- Design distributed AI systems\\n- Create neural-symbolic hybrid architectures\\n- Implement advanced processing approaches\\n- Build iterative improvement mechanisms\\n- Design intelligent behavior patterns\\n- Create knowledge representation systems\\n- Implement reasoning and inference engines\\n- Build memory architecture for AI systems\\n- Design attention and focus mechanisms\\n- Create goal-oriented architecture patterns\\n- Implement ethical AI frameworks\\n- Build explainable AI architectures\\n- Design robustness and safety measures\\n- Create AI evaluation frameworks\\n- Implement transfer learning architectures\\n- Build continual learning systems\\n- Design AI communication protocols\\n- Create AI-human interaction patterns\\n- Implement AI resource optimization\\n- Build AI monitoring and control systems\\n- Design AI evolution strategies\\n- Create AI alignment mechanisms\\n- Implement AI security architectures\\n- Build AI testing and validation frameworks\\n\\nDo NOT use this agent for:\\n- Specific code implementation (use code-generation agents)\\n- Deployment tasks (use deployment-automation-master)\\n- Infrastructure management (use infrastructure-devops-manager)\\n- Testing implementation (use testing-qa-validator)\\n\\nThis agent specializes in designing and evolving the fundamental architecture of AI systems for maximum intelligence and capability.",

  534      },
  535:     "ai-system-architect": {
  536:       "name": "ai-system-architect",
  537        "description": "Agent for system operations",

  542        ],
  543:       "config_path": "configs/ai-system-architect_universal.json"
  544      },

src/agents/agents/configs/ai-system-architect_universal.json:
  1  {
  2:   "name": "ai-system-architect",
  3    "description": "Agent for system operations",

src/agents/agents/configs/system-architect_universal.json:
  2    "name": "sutazai_system-architect",
  3: ⟪ 1062 characters skipped ⟫mization\n- Security considerations\n- Scalability planning\n- Integration capabilities\n\n## Technical Implementation\n\n### Docker Configuration:\n```yaml\nsystem-architect:\n  container_name: sutazai-system-architect\n  build: ./agents/system-architect\n  environment:\n    - AGENT_TYPE=system-architect\n    - LOG_LEVEL=INFO\n    - API_ENDPOINT=http://api:8000\n  volumes:\n    - ./data:/app/data\n    - ./configs:/app/configs\n  depends_on:\n    - api\n    - redis\n```\n\n### Agent Configuration:\n```json\n{\n  \"agent_config\": {\n    \"capabilities\": [\"analysis\", \"implementation\", \"optimization\"],\n    \"priority\": \"high\",\n    \"max_concurrent_tasks\": 5,\n    \"timeout\": 3600,\n    \"retry_policy\": {\n      \"max_retries\": 3,\n      \"backoff\": \"exponential\"\n    }\n  }\n}\n```\n\n## Integration Points\n- Backend API for communication\n- Redis for task queuing\n- PostgreSQL for state storage\n- Monitoring systems for metrics\n- Other agents for collaboration\n\n## Use this agent for:\n- Specialized tasks within its domain\n- Complex problem-solving in its area\n- Optimization and improvement tasks\n- Quality assurance in its field\n- Documentation and knowledge
  4    "config": {

src/agents/agents/configs/ultra-system-architect_universal.json:
  122      "existing_agents": {
  123:       "ai-system-architect": {
  124          "integration_level": "full",

src/agents/agents/core/ollama_integration.py:
  192          "ai-senior-full-stack-developer": OPUS_MODEL,
  193:         "ai-system-architect": OPUS_MODEL,
  194          "bias-and-fairness-auditor": OPUS_MODEL,

src/agents/agents/core/README_ENHANCED_AGENTS.md:
  139  # Get model for specific agent
  140: model = OllamaConfig.get_model_for_agent("ai-system-architect")
  141  # Returns: "tinyllama" (Opus model for complex reasoning)

src/agents/agents/hardware-resource-optimizer/shared/agents/core/ollama_integration.py:
  192          "ai-senior-full-stack-developer": OPUS_MODEL,
  193:         "ai-system-architect": OPUS_MODEL,
  194          "bias-and-fairness-auditor": OPUS_MODEL,

src/agents/agents/hardware-resource-optimizer/shared/agents/core/README_ENHANCED_AGENTS.md:
  139  # Get model for specific agent
  140: model = OllamaConfig.get_model_for_agent("ai-system-architect")
  141  # Returns: "tinyllama" (Opus model for complex reasoning)

src/backend/backend/tests/agent_hygiene_compliance_report.json:
   824      },
   825:     "ai-system-architect": {
   826        "passed": false,

  8825      {
  8826:       "agent": "ai-system-architect",
  8827        "severity": "HIGH",

tests/regression/test_regression.py:
  182          stable_assignments = {
  183:             "ai-system-architect": "tinyllama",
  184              "ai-product-manager": "tinyllama2.5-coder:7b",

  197          # Test that default model configs haven't broken existing behavior
  198:         test_agents = ["ai-system-architect", "ai-product-manager", "garbage-collector"]
  199          

  235          """Test agents that use Opus model"""
  236:         opus_agents = ["ai-system-architect", "complex-problem-solver", "ethical-governor"]
  237          

tests/unit/services/test_integration.py:
  583          test_cases = [
  584:             ("ai-system-architect", "tinyllama"),
  585              ("ai-product-manager", "tinyllama"),

tests/unit/services/test_ollama_integration.py:
  47              "ai-senior-frontend-developer", "ai-senior-full-stack-developer",
  48:             "ai-system-architect", "ai-system-validator", "ai-testing-qa-validator",
  49              "automated-incident-responder", "autonomous-task-executor", "bias-and-fairness-auditor",
