{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(DOCKER_BUILDKIT=0 docker build -t sutazai-brain:latest .)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(chmod:*)",
      "Bash(python:*)",
      "Bash(cat:*)",
      "Bash(/opt/sutazaiapp/scripts/deploy_essential_ai.sh:*)",
      "Bash(groups)",
      "Bash(npx:*)",
      "Bash(getent:*)",
      "Bash(./scripts/quick_fix_docker_permissions.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/deploy_essential_ai.sh:*)",
      "Bash(# Fix the docker-compose file by removing the ollama dependency\nsed -i ''/depends_on:/,/- ollama/d'' /opt/sutazaiapp/docker-compose-fixed-agents.yml\n\n# Also use the correct network name\nsed -i ''s/name: ${NETWORK_NAME}/name: sutazaiapp_default/'' /opt/sutazaiapp/docker-compose-fixed-agents.yml\n\n# Now redeploy\ncd /opt/sutazaiapp\ndocker-compose -f docker-compose-fixed-agents.yml up -d --build)",
      "Bash(docker logs:*)",
      "Bash(# First, let''s create the personal agents directory if it doesn''t exist\nmkdir -p /root/.claude/agents/\n\n# Copy all agents from project to personal directory\ncp /opt/sutazaiapp/.claude/agents/*.md /root/.claude/agents/\n\n# List the results\necho \"\"=== Personal agents directory ===\"\"\nls -1 /root/.claude/agents/ | grep \"\"\\.md$\"\" | wc -l\necho \"\"agents copied\"\"\n\necho -e \"\"\\n=== Verify both directories have all agents ===\"\"\necho \"\"Project agents: $(ls -1 /opt/sutazaiapp/.claude/agents/*.md | wc -l)\"\"\necho \"\"Personal agents: $(ls -1 /root/.claude/agents/*.md | wc -l)\"\")",
      "Bash(# Compare the format of a working agent with others\necho \"\"=== Working agent (infrastructure-devops-manager) ===\"\"\nhead -10 /opt/sutazaiapp/.claude/agents/infrastructure-devops-manager.md\n\necho -e \"\"\\n=== Another agent (ai-agent-orchestrator) ===\"\"\nhead -10 /opt/sutazaiapp/.claude/agents/ai-agent-orchestrator.md\n\necho -e \"\"\\n=== List all agent names and models ===\"\"\nfor f in /opt/sutazaiapp/.claude/agents/*.md; do\n    if [[ -f \"\"$f\"\" ]]; then\n        name=$(grep \"\"^name:\"\" \"\"$f\"\" | cut -d: -f2 | xargs)\n        model=$(grep \"\"^model:\"\" \"\"$f\"\" | cut -d: -f2 | xargs)\n        echo \"\"$name - $model\"\"\n    fi\ndone | sort)",
      "Bash(bash:*)",
      "Bash(grep:*)",
      "Bash(for f in *.md)",
      "Bash(do echo \"$f%.md\")",
      "Bash(done)",
      "Bash(./scripts/deploy_complete_system.sh:*)",
      "Bash(./scripts/deploy_all_agents_unified.sh:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose:*)",
      "Bash(top:*)",
      "Bash(docker stats:*)",
      "Bash(vmstat:*)",
      "Bash(docker system:*)",
      "Bash(docker system:*)",
      "Bash(iostat:*)",
      "Bash(docker inspect:*)",
      "Bash(nvidia-smi:*)",
      "Bash(./scripts/live_logs.sh:*)",
      "Bash(docker:*)",
      "Bash(curl:*)",
      "Bash(killall:*)",
      "Bash(true)",
      "Bash(pkill:*)",
      "Bash(DOCKER_BUILDKIT=0 docker build -t sutazai-brain .)",
      "Bash(DOCKER_BUILDKIT=0 docker build -t sutazaiapp-ollama-integration-specialist ./agents/ollama-integration)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(mkdir:*)",
      "Bash(mkdir:*)",
      "Bash(echo:*)",
      "Bash(./scripts/verify_small_models.sh:*)",
      "Bash(./scripts/deploy_complete_agent_infrastructure.sh:*)",
      "Bash(docker-compose:*)",
      "Bash(timeout:*)",
      "Bash(nproc)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git clean:*)",
      "Bash(rm:*)",
      "Bash(/opt/sutazaiapp/scripts/reorganize_docs.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/consolidate_scripts.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/deep_cleanup.sh:*)",
      "Bash(systemctl list-units:*)",
      "Bash(sed:*)",
      "Bash(rm:*)",
      "Bash(# Move deployment scripts\nmkdir -p organized/deployment\nmv -f deploy_*.py setup*.py test_installation.py test_final_lightweight_setup.py organized/deployment/ 2>/dev/null || true\n\n# Move monitoring scripts  \nmkdir -p organized/monitoring\nmv -f *monitor*.py *_dashboard.py live_logs.sh status.sh organized/monitoring/ 2>/dev/null || true\n\n# Move agent scripts\nmkdir -p organized/agents\nmv -f *agent*.py *crewai*.py organized/agents/ 2>/dev/null || true\n\n# Move utility scripts\nmkdir -p organized/utilities\nmv -f cleanup*.sh manage.sh organized/utilities/ 2>/dev/null || true\n\nls organized/*/)",
      "Bash(touch:*)",
      "Bash(tree:*)",
      "Bash(sudo systemctl stop:*)",
      "Bash(sudo kill:*)",
      "Bash(/opt/sutazaiapp/health_check.sh:*)"
    ],
    "deny": []
  },
  "enabledMcpjsonServers": [],
  "disabledMcpjsonServers": []
}