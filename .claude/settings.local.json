{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(ss:*)",
      "Bash(chmod:*)",
      "Bash(python3:*)",
      "Bash(pip3 install:*)",
      "Bash(apt:*)",
      "Bash(apt install:*)",
      "Bash(find:*)",
      "Bash(source:*)",
      "Bash(python:*)",
      "Bash(rm:*)",
      "Bash(pip install:*)",
      "Bash(curl:*)",
      "Bash(ls:*)",
      "Bash(pkill:*)",
      "Bash(kill:*)",
      "Bash(docker:*)",
      "Bash(sh:*)",
      "Bash(service docker:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(echo)",
      "Bash(cat:*)",
      "Bash(touch:*)",
      "Bash(./diagnose_docker_issues.sh:*)",
      "Bash(cp:*)",
      "Bash(touch:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(--name sutazai-backend-fixed )",
      "Bash(--network sutazai-network )",
      "Bash(-p 8000:8000 )",
      "Bash(-e DATABASE_URL=postgresql://postgres:postgres@sutazai-postgres:5432/sutazai )",
      "Bash(-e REDIS_URL=redis://sutazai-redis:6379 )",
      "Bash(-e CHROMADB_HOST=sutazai-chromadb )",
      "Bash(-e CHROMADB_PORT=8000 )",
      "Bash(-e QDRANT_HOST=sutazai-qdrant )",
      "Bash(-e QDRANT_PORT=6333 )",
      "Bash(-e OLLAMA_HOST=sutazai-ollama )",
      "Bash(-e OLLAMA_PORT=11434 )",
      "Bash(-v /opt/sutazaiapp/backend:/app )",
      "Bash(-w /app )",
      "Bash(bash:*)",
      "Bash(/opt/sutazaiapp/fix_and_start.sh:*)",
      "Bash(git push:*)",
      "Bash(git branch:*)",
      "Bash(git remote:*)",
      "Bash(--name sutazai-frontend )",
      "Bash(--network host )",
      "Bash(-e BACKEND_HOST=172.31.77.193 )",
      "Bash(-e BACKEND_PORT=8000 )",
      "Bash(-v /opt/sutazaiapp/frontend/fixed_app.py:/app/app.py:ro )",
      "Bash(sutazai-frontend-simple)",
      "Bash(git config:*)",
      "Bash(git commit:*)",
      "Bash(systemctl:*)",
      "Bash(echo:*)",
      "Bash(sudo curl:*)",
      "Bash(sudo chmod:*)",
      "Bash(./fix_yaml_issues.sh:*)",
      "Bash(./scripts/deploy_all_agents.sh:*)",
      "Bash(sudo:*)",
      "Bash(./deploy_complete_ai_agents.sh:*)",
      "Bash(./deploy_agents_fixed.sh:*)",
      "Bash(./scripts/deploy_complete_system.sh:*)",
      "Bash(./scripts/optimize_ollama.sh:*)",
      "Bash(/opt/sutazaiapp/test_repo_structure.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/download_models.sh:*)",
      "Bash(./deploy_complete_sutazai_system_improved.sh:*)",
      "Bash(mv:*)",
      "Bash(true)",
      "Bash(mv:*)",
      "Bash(./scripts/live_logs.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/live_logs.sh:*)",
      "Bash(timeout:*)",
      "Bash(/opt/sutazaiapp/scripts/live_logs.sh:*)",
      "Bash(./scripts/system_test.sh:*)",
      "Bash(scripts/live_logs.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/live_logs.sh:*)",
      "WebFetch(domain:github.com)",
      "Bash(journalctl:*)",
      "Bash(./test_simple_fix.sh:*)",
      "Bash(./test_deployment.sh)",
      "Bash(check_docker_service_health:*)",
      "Bash(/dev/null)",
      "Bash(./test_brain_functions.sh:*)",
      "Bash(/opt/sutazaiapp/fix_docker_daemon_management.sh:*)",
      "Bash(awk:*)",
      "Bash(git pull:*)",
      "Bash(stty:*)",
      "Bash(DEBUG=true SKIP_MODEL_DOWNLOADS=true ./scripts/deploy_complete_system.sh deploy)",
      "Bash(export DEBUG=true)",
      "Bash(export SKIP_MODEL_DOWNLOADS=true)",
      "Bash(DOCKER_BUILDKIT=1 docker build --help)",
      "Bash(export DOCKER_BUILDKIT=1)",
      "Bash(export SKIP_DOCKER_CHECK=true)",
      "Bash(intelligent_docker_startup)",
      "Bash(# Manual Docker cleanup and startup\npkill -f dockerd 2>/dev/null || true\nrm -f /var/run/docker.sock /var/run/docker.pid 2>/dev/null || true\n\n# WSL2 + Ubuntu 24.04 fixes\nsysctl -w kernel.apparmor_restrict_unprivileged_userns=0 >/dev/null 2>&1 || true\necho \"\"kernel.apparmor_restrict_unprivileged_userns=0\"\" > /etc/sysctl.d/60-apparmor-namespace.conf 2>/dev/null || true\n\n# Switch to iptables-legacy for Docker compatibility\nupdate-alternatives --set iptables /usr/sbin/iptables-legacy >/dev/null 2>&1 || true\nupdate-alternatives --set ip6tables /usr/sbin/ip6tables-legacy >/dev/null 2>&1 || true\n\n# Clean iptables chains\nfor chain in DOCKER DOCKER-ISOLATION-STAGE-1 DOCKER-ISOLATION-STAGE-2 DOCKER-USER; do\n    iptables -F $chain >/dev/null 2>&1 || true\n    iptables -X $chain >/dev/null 2>&1 || true\ndone\n\n# Start containerd first\nsystemctl unmask containerd.service >/dev/null 2>&1 || true\nsystemctl enable containerd.service >/dev/null 2>&1 || true\nsystemctl start containerd.service >/dev/null 2>&1 || true\n\n# Start Docker with systemctl\nsystemctl reset-failed docker >/dev/null 2>&1 || true\nsystemctl unmask docker.service >/dev/null 2>&1 || true\nsystemctl enable docker.service >/dev/null 2>&1 || true\nsystemctl start docker.service >/dev/null 2>&1 || true\n\nsleep 5\ndocker info >/dev/null 2>&1 && echo \"\"✅ Docker started successfully\"\" || echo \"\"❌ Docker failed to start\"\")",
      "Bash(DOCKER_BUILDKIT=0 docker build ./docker/browser-use -t sutazaiapp-browser-use)",
      "Bash(DOCKER_BUILDKIT=0 docker build ./docker/browser-use -t sutazaiapp-browser-use --no-cache)",
      "Bash(dpkg:*)",
      "Bash(# Remove all the junk Docker functions by line ranges\n# First, get line numbers\nstart_lines=($(grep -n \"\"^perform_ultimate_docker_recovery\\|^display_docker_troubleshooting_guide\\|^install_docker_compose_v2\\|^analyze_docker_state\\|^smart_docker\"\" /opt/sutazaiapp/scripts/deploy_complete_system.sh | cut -d: -f1))\necho \"\"Found junk functions at lines: ${start_lines[*]}\"\")",
      "Bash(# Find where this broken function ends\ngrep -n \"\"^[a-zA-Z_].*(\"\" /opt/sutazaiapp/scripts/deploy_complete_system.sh | head -20)",
      "Bash(export COMPOSE_DOCKER_CLI_BUILD=1)",
      "Bash(env)",
      "Bash(test:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "task-master-ai"
  ]
}