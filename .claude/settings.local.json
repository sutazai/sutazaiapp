{
  "permissions": {
    "allow": [
      "mcp__ruv-swarm",
      "mcp__claude-flow",
      "Bash(ruby:*)",
      "Bash(docker exec:*)",
      "Bash(curl:*)",
      "Bash(docker logs:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:github.com)",
      "Bash(/opt/sutazaiapp/scripts/monitoring/live_logs.sh:*)",
      "mcp__sequentialthinking__sequentialthinking",
      "Bash(/opt/sutazaiapp/scripts/mcp/selfcheck_all.sh:*)",
      "Bash(wget:*)",
      "Bash(sudo dpkg:*)",
      "Bash(cd:*)",
      "Bash(uv venv:*)",
      "Bash(source:*)",
      "Bash(uv pip install:*)",
      "Bash(chmod:*)",
      "Bash(./install.sh)",
      "Bash(npx claude-flow@alpha mcp:*)",
      "Bash(npx ruv-swarm@latest mcp status:*)",
      "Bash(docker service:*)",
      "Bash(docker ps:*)",
      "Bash(timeout 10 npx claude-flow@alpha --help)",
      "Bash(timeout 10 npx ruv-swarm@latest --help)",
      "Bash(/opt/sutazaiapp/scripts/mcp/wrappers/claude-flow.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/mcp/wrappers/ruv-swarm.sh:*)",
      "Bash(pkill:*)",
      "Bash(/opt/sutazaiapp/scripts/monitoring/live_logs.sh:*)",
      "Bash(docker stats:*)",
      "Bash(docker:*)",
      "Bash(docker volume:*)",
      "Bash(cat:*)",
      "mcp__sequentialthinking__sequentialthinking",
      "Bash(python:*)",
      "Bash(ss:*)",
      "Bash(./scripts/monitoring/live_logs.sh:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(for:*)",
      "Bash(wc:*)",
      "Bash(done)",
      "Bash(mv:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"=== $file ===\")",
      "Bash(fi)",
      "Bash(git clone:*)",
      "Bash(./scripts/mcp/selfcheck_all.sh:*)",
      "Bash(rm:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(pip install:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(do if ! docker-compose -f \"$file\" config)",
      "Bash(/dev/null)",
      "Bash(then echo \"- $file\")",
      "Bash(./venv/bin/pip install --quiet --upgrade pip)",
      "Bash(./venv/bin/pip install --quiet mcp fastmcp loguru litellm json-repair python-dotenv)",
      "Bash(/opt/sutazaiapp/scripts/mcp/wrappers/claude-task-runner.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/mcp/wrappers/language-server.sh:*)",
      "Bash(echo:*)",
      "Bash(then echo \"Moving $file\")",
      "Bash(grep:*)",
      "Bash(/opt/sutazaiapp/.mcp/UltimateCoderMCP/.venv/bin/pip list)",
      "Bash(grep:*)",
      "Bash(.venv/bin/pip install:*)",
      "Bash(npm test:*)",
      "mcp__extended-memory__load_contexts",
      "Bash(supervisorctl restart:*)",
      "Bash(kill:*)",
      "Bash(journalctl:*)",
      "Bash(/opt/sutazaiapp/backend/tests/validate_mcp_fix.sh:*)",
      "Bash(./scripts/mcp/selfcheck_all.sh:*)",
      "Bash(timeout:*)",
      "Bash(systemctl:*)",
      "Bash(bash:*)",
      "Bash(npm ls:*)",
      "Bash(readlink:*)",
      "Bash(lsof:*)",
      "Bash(pstree:*)",
      "Bash(/opt/sutazaiapp/tests/mcp_conflict_monitoring.sh:*)",
      "Bash(dmesg:*)",
      "Bash(true)",
      "Bash(/opt/sutazaiapp/tests/mcp_sequence_conflict_test.sh:*)",
      "Bash(./scripts/network/deploy-mcp-network.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/deployment/infrastructure/deploy-dind-mcp.sh:*)",
      "Bash(pip3 install:*)",
      "Bash(cd:*)",
      "Bash(apt-get:*)",
      "Bash(apt-get install:*)",
      "Bash(/opt/sutazaiapp/docker/dind/orchestrator/scripts/setup-dind.sh start:*)",
      "Bash(export POSTGRES_PASSWORD=sutazai_secure_password_2025)",
      "Bash(/opt/sutazaiapp/scripts/deployment/infrastructure/deploy-mcp-containers.sh:*)",
      "Bash(do echo \"Connecting $container\")",
      "Bash(containers=\"mcp-claude-flow mcp-ruv-swarm mcp-files mcp-context7 mcp-http_fetch mcp-ddg\")",
      "Bash(do echo \"Adding labels to $container\")",
      "Bash(containers=\"mcp-claude-flow mcp-ruv-swarm mcp-files mcp-context7 mcp-postgres\")",
      "Bash(do echo \"Adding mcp.service=true label to $container\")",
      "Bash(/opt/sutazaiapp/scripts/deployment/infrastructure/deploy-real-mcp-services.sh:*)",
      "Bash(time curl:*)",
      "mcp__context7__resolve-library-id",
      "WebSearch",
      "WebSearch",
      "mcp__context7__get-library-docs",
      "Bash(sed:*)",
      "mcp__extended-memory__save_context",
      "mcp__extended-memory__get_popular_tags",
      "Bash(/opt/sutazaiapp/scripts/mcp/wrappers/unified-memory.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/deployment/infrastructure/deploy-unified-dev-service.sh:*)",
      "Bash(npm install:*)",
      "Bash(NODE_ENV=test npm test -- --grep \"Health Endpoint\" --timeout 5000)",
      "Bash(NODE_ENV=test npm test --timeout 5000)",
      "Bash(NODE_ENV=test npm test)",
      "Bash(NODE_ENV=test npm test -- --grep \"should handle code generation requests\" --timeout 5000)",
      "Bash(NODE_ENV=test npm test -- --grep \"should handle code generation requests\")",
      "Bash(mcp-unified-dev:latest)",
      "Bash(export NODE_ENV=test)",
      "Bash(git tag:*)",
      "Bash(ls:*)",
      "Bash(do if [ -d \"$dir\" ])",
      "Bash(BACKUP_DIR=\"/tmp/cleanup_backup_20250818_012816\")",
      "Bash(/opt/sutazaiapp/scripts/mesh/deploy_real_mcp_services.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/mesh/quick_deploy_mcp.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/mesh/test_mesh_communication.sh:*)",
      "Bash(./scripts/mcp/wrappers/compass-mcp.sh:*)",
      "Bash(env)",
      "Bash(pgrep:*)",
      "Bash(npx playwright test:*)",
      "Bash(export RABBITMQ_PASSWORD=sutazai_password)",
      "Bash(export POSTGRES_PASSWORD=sutazai_password)",
      "Bash(export NEO4J_PASSWORD=sutazai_password)",
      "Bash(export GRAFANA_PASSWORD=admin)",
      "Bash(/opt/sutazaiapp/scripts/enforcement/docker_consolidation_phase1.sh:*)",
      "Bash(faiss/Dockerfile.optimized )",
      "Bash(faiss/Dockerfile.simple )",
      "Bash(faiss/Dockerfile.standalone )",
      "Bash(frontend/Dockerfile.secure )",
      "Bash(backend/Dockerfile.production )",
      "Bash(base/Dockerfile.simple-base )",
      "Bash(base/Dockerfile.python-agent-master )",
      "Bash(dind/mcp-containers/Dockerfile.specialized-mcp )",
      "Bash(dind/mcp-containers/Dockerfile.nodejs-mcp )",
      "Bash(dind/mcp-containers/Dockerfile.python-mcp )",
      "Bash(base/Dockerfile.*-secure)",
      "Bash(monitoring-secure/*/Dockerfile)",
      "Bash(mcp-services/base/Dockerfile )",
      "Bash(mcp-services/files/Dockerfile )",
      "Bash(mcp-services/postgres/Dockerfile )",
      "Bash(mcp-services/unified-memory/Dockerfile )",
      "Bash(mcp/UltimateCoderMCP/Dockerfile )",
      "Bash(dind/mcp-real/Dockerfile)",
      "Bash(/opt/sutazaiapp/scripts/enforcement/deploy_real_mcp_phase2.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/enforcement/fix_backend_mocks.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/enforcement/create_changelogs.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/deployment/deploy_real_mcp_servers.sh:*)",
      "Bash(rabbitmq:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(tree:*)",
      "Bash(claude doctor)",
      "Bash(nc:*)",
      "Bash(mitmdump:*)",
      "Bash(/opt/sutazaiapp/scripts/test-temperature.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/verify-accuracy-setup.sh:*)",
      "Bash(ln:*)",
      "Bash(/opt/sutazaiapp/scripts/test-accuracy-live.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/mcp/wrappers/files.sh:*)",
      "Bash(tar:*)",
      "Bash(do if grep -q \"^$essential$\" /tmp/changelogs_to_delete.txt)",
      "Bash(exit 1)",
      "Bash(else echo \"✅ SAFE: $essential not in deletion list\")",
      "Bash(/opt/sutazaiapp/scripts/test_live_logs_detailed.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/run_live_logs_10.sh:*)",
      "Bash(do)",
      "Bash(if [ -f \"/opt/sutazaiapp/.claude/agents/$file.md\" ])",
      "Bash(then)",
      "Bash(./scripts/mesh/test_mesh_communication.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/analysis/test_live_logs_options.sh:*)",
      "Bash(if diff:*)",
      "Bash(then echo \"FILES ARE IDENTICAL\")",
      "Bash(else echo \"FILES ARE DIFFERENT\")",
      "Bash(/opt/sutazaiapp/scripts/analysis/test_live_logs_detailed.sh:*)",
      "Bash(psql:*)",
      "Bash(/opt/sutazaiapp/deploy.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/mesh/fix_dind_docker.sh:*)",
      "Bash(top:*)",
      "Bash(/opt/sutazaiapp/scripts/mesh/deploy_complete_mesh.sh:*)",
      "Bash(export PYTHONPATH=/opt/sutazaiapp/backend)",
      "Bash(/opt/sutazaiapp/backend/venv/bin/python -c \"from app.api.v1.endpoints import models; print(''Import successful'')\")",
      "Bash(do echo -n \"Port $port: \")",
      "Bash(npx:*)",
      "Bash(do echo \"=== $container ===\")",
      "Bash(do docker cp /opt/sutazaiapp/scripts/mcp/servers/$server/. sutazai-mcp-orchestrator:/mcp-servers/$server/)",
      "Bash(do echo \"=== Testing port $port ===\")",
      "Bash(/opt/sutazaiapp/scripts/mcp/verify-real-servers.sh:*)",
      "Bash(DOCKER_HOST=tcp://localhost:12375 docker ps --format \"table {{.Names}}\\t{{.Image}}\\t{{.Status}}\\t{{.Ports}}\")",
      "Bash(__NEW_LINE__ echo -e \"\\n=== Docker files in docker/mcp-services ===\")",
      "Bash(__NEW_LINE__ echo -e \"\\n=== Check unified MCP containers ===\")",
      "Bash(touch:*)",
      "Bash(do echo \"Checking: $dir\")",
      "Bash(test:*)",
      "Bash(export SUTAZAI_ENV=test)",
      "Bash(md5sum:*)",
      "Bash(PYTHONPATH=/opt/sutazaiapp/backend python3 -m pytest tests/unit/test_mesh_redis_bus.py::TestRedisConnection::test_redis_url_from_env -v)",
      "Bash(PYTHONPATH=/opt/sutazaiapp/backend python3 -m pytest tests/unit/test_mesh_redis_bus.py -v)",
      "Bash(export DOCKER_HOST=\"tcp://localhost:12375\")",
      "Bash(unset DOCKER_HOST)",
      "Bash(/opt/sutazaiapp/scripts/monitoring/diagnose_resource_usage.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/monitoring/fix_resource_issues.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/monitoring/aggressive_cleanup.sh:*)",
      "Bash(sqlite3:*)",
      "Bash(./run_migration.sh:*)",
      "Bash(rg:*)",
      "mcp__http_fetch__fetch",
      "mcp__ddg__search",
      "Read(/C:\\Users\\root\\.vscode/**)",
      "Read(/C:\\Users\\root\\AppData\\Roaming\\Claude/**)",
      "Bash(SuperClaude install:*)",
      "Bash(node:*)",
      "Read(/C:\\Users\\root\\.claude/**)",
      "Read(/C:\\Users\\root\\.claude/**)",
      "Bash(SuperClaude --version)",
      "Bash(SuperClaude update:*)",
      "Read(/C:\\Users\\root\\.claude\\commands\\sc/**)",
      "Read(/C:\\Users\\root\\.claude\\Agents/**)",
      "Read(/C:\\Users\\root\\.claude\\Modes/**)",
      "Bash(npm --version)",
      "Bash(npm view:*)",
      "Read(/C:\\Users\\root\\.claude/**)",
      "Read(/C:\\Users\\root\\.claude/**)",
      "Bash(mcp__ruv-swarm__swarm_status:*)",
      "Read(/C:\\Users\\root\\AppData\\Roaming\\Claude/**)",
      "Bash(powershell:*)",
      "Bash(npm search:*)",
      "Read(/C:\\Users\\root\\AppData\\Roaming\\Code\\User/**)",
      "Bash(do echo -n \"$tool: \")",
      "Bash(then echo \"✅ Available\")",
      "Bash(else echo \"❌ Not connected\")",
      "Read(/C:\\Users\\root\\.claude/**)",
      "Bash(git push:*)",
      "Bash(wsl:*)",
      "Bash(cmd.exe:*)",
      "Bash(wsl.exe:*)",
      "Read(/C:\\Users\\root\\.claude/**)",
      "Read(/C:\\Users\\root\\.claude/**)",
      "Bash(claude mcp:*)",
      "Read(/C:\\Users\\root/**)",
      "Read(/C:\\Users\\root/**)",
      "WebFetch(domain:gitmcp.io)"
    ],
    "deny": [],
    "additionalDirectories": [
      "/tmp"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "claude-flow",
    "ruv-swarm",
    "files",
    "context7",
    "http_fetch",
    "ddg",
    "sequentialthinking",
    "nx-mcp",
    "extended-memory",
    "mcp_ssh",
    "ultimatecoder",
    "playwright-mcp",
    "memory-bank-mcp",
    "knowledge-graph-mcp",
    "compass-mcp",
    "github",
    "http",
    "language-server",
    "claude-task-runner"
  ]
}