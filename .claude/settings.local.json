{
  "permissions": {
    "allow": [
      "Bash(npm audit:*)",
      "Bash(./scripts/security_remediation.sh:*)",
      "Bash(test:*)",
      "Bash(echo $-)",
      "Bash(set -o)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(docker ps:*)",
      "Bash(/opt/sutazaiapp/scripts/monitoring/live_logs.sh:*)",
      "Bash(docker-compose:*)",
      "Bash(docker logs:*)",
      "Bash(find:*)",
      "Bash(curl:*)",
      "Bash(docker inspect:*)",
      "Bash(grep:*)",
      "Bash(docker stop:*)",
      "Bash(docker exec:*)",
      "Bash(python3:*)",
      "Bash(docker stats:*)",
      "Bash(docker network inspect:*)",
      "Bash(docker volume rm:*)",
      "Bash(docker container prune:*)",
      "Bash(docker restart:*)",
      "Bash(docker volume prune:*)",
      "Bash(docker compose ps:*)",
      "Bash(chmod:*)",
      "Bash(dmesg:*)",
      "Bash(mount)",
      "Bash(/opt/sutazaiapp/scripts/deploy-tier.sh:*)",
      "Bash(chmod:*)",
      "Bash(^C)",
      "Bash(/opt/sutazaiapp/agents/ollama_integration/test_integration.sh:*)",
      "Bash(docker:*)",
      "Bash(python -m pytest tests/test_smoke.py --collect-only -q)",
      "Bash(python -m pytest tests/test_smoke.py -v --tb=short)",
      "Bash(python -m pytest tests/test_ollama_integration.py --collect-only -q)",
      "Bash(/opt/sutazaiapp/scripts/add-metrics-to-agents.sh:*)",
      "Bash(true)",
      "Bash(pkill:*)",
      "Bash(python -m pytest tests/test_base_agent_v2.py --collect-only -q)",
      "Bash(mkdir:*)",
      "Bash(python -m pytest tests/test_ollama_integration.py -x --tb=short)",
      "Bash(echo:*)",
      "Bash(python -m pytest tests/unit/test_security.py -x --tb=short)",
      "Bash(python scripts/cleanup-old-requirements.py:*)",
      "Bash(python -m pytest tests/hygiene/test_performance.py -x --tb=short)",
      "Bash(time curl:*)",
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(docker ps:*)",
      "Bash(docker logs:*)",
      "Bash(curl:*)",
      "Bash(find:*)",
      "Bash(docker ps:*)",
      "Bash(docker system:*)",
      "Bash(grep:*)",
      "Bash(docker compose:*)",
      "Bash(npm test)",
      "Bash(docker ps:*)",
      "Bash(mkdir:*)",
      "Bash(node:*)",
      "Bash(npm install)",
      "Bash(docker inspect:*)",
      "Bash(docker builder prune:*)",
      "Bash(docker-compose:*)",
      "Bash(chmod:*)",
      "Bash(npm install:*)",
      "Bash(npm init:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(docker-compose:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(curl:*)",
      "Bash(python3:*)",
      "Bash(/opt/sutazaiapp/scripts/configure_kong.sh:*)",
      "Bash(curl:*)",
      "Bash(echo:*)",
      "Bash(timeout:*)",
      "Bash(/opt/sutazaiapp/scripts/test_neo4j_config.sh:*)",
      "Bash(docker logs:*)",
      "Bash(python:*)",
      "Bash(DOCKER_BUILDKIT=1 docker build --progress=plain -t sutazaiapp-backend:latest ./backend)",
      "Bash(DOCKER_BUILDKIT=1 docker build --progress=plain --build-arg BUILDKIT_INLINE_CACHE=1 -t sutazaiapp-backend:latest backend/)",
      "Bash(DOCKER_BUILDKIT=1 docker build --progress=plain -f backend/Dockerfile.  -t sutazaiapp-backend:latest backend/)",
      "Bash(git stash:*)",
      "Bash(touch:*)",
      "Bash(apt list:*)",
      "Bash(mv:*)",
      "Bash(apt install:*)",
      "Bash(systemctl start:*)",
      "Bash(systemctl:*)",
      "Bash(pip3 freeze:*)",
      "Bash(cat:*)",
      "Bash(npm --version)",
      "Bash(npx:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "Bash(md5sum:*)",
      "Bash(./deploy.sh:*)",
      "Bash(SUTAZAI_SKIP_UPDATE=true ./deploy.sh --help)",
      "Bash(tar:*)",
      "Bash(openssl rsa:*)",
      "Bash(sed:*)",
      "Bash(pip install:*)",
      "Bash(sed:*)",
      "Bash(for i in {1..3})",
      "Bash(do echo \"Test $i:\")",
      "Bash(done)",
      "Bash(/opt/sutazaiapp/scripts/security/migrate_containers_to_nonroot.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/security/validate_container_security.sh:*)",
      "Bash(./hardware_api_test_comprehensive.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/maintenance/test-backup-system.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/maintenance/backup-redis.sh:*)",
      "Bash(/dev/null)",
      "Bash(./scripts/monitoring/live_logs.sh:*)",
      "Bash(for i in {1..5})",
      "Bash(do)",
      "WebFetch(domain:localhost)",
      "Bash(ss:*)",
      "Bash(pip3 install:*)",
      "Bash(./scripts/security/harden-root-containers.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/security/final-security-validation.sh:*)",
      "Bash(bash:*)",
      "Bash(DOCKER_BUILDKIT=1 docker build -t sutazai-python-agent-master:latest -f Dockerfile.python-agent-master .)",
      "Bash(ARCHIVE_DIR=\"/opt/sutazaiapp/archive/dockerfile-backups/phase1_20250810_112133\")",
      "Bash(./ULTRA_FIX_VERIFICATION.sh:*)",
      "Bash(for endpoint in health models)",
      "Bash(do echo \"Testing /api/v1/$endpoint\")",
      "Bash(/opt/sutazaiapp/scripts/security/critical-security-fix-validation.sh:*)",
      "Bash(scripts/security/check_jwt_vulnerability.sh:*)",
      "Bash(nc:*)",
      "Bash(redis-cli:*)",
      "Bash(/opt/sutazaiapp/scripts/maintenance/ultra_backup.sh:*)",
      "Bash(for service in agent-message-bus self-healing data-analysis-engineer observability-monitoring-engineer agentzero hygiene-backend)",
      "Bash(do cp /opt/sutazaiapp/docker/base/base-requirements.txt \"/opt/sutazaiapp/docker/$service/requirements.txt\")",
      "Bash(-print)",
      "Bash(make test-unit:*)",
      "Bash(./ULTRA_EMERGENCY_SCRIPT_DEPS_FIX.sh:*)",
      "Bash(make:*)",
      "Bash(./scripts/script-discovery-bootstrap.sh:*)",
      "Bash(source:*)",
      "Bash(exec_script:*)",
      "Bash(./health_check.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/master/health-master.py --format console)",
      "Bash(/opt/sutazaiapp/scripts/master/build-master.sh:*)",
      "Bash(ln:*)",
      "Bash(pip3 list:*)",
      "Bash(sudo ls:*)",
      "Bash(./scripts/emergency-backup.sh:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $script ===\")",
      "Bash(head:*)",
      "Bash(/opt/sutazaiapp/scripts/consolidated/master.sh:*)",
      "Bash(/opt/sutazaiapp/tests/ultra_cleanup_test_suite.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/consolidated/security/master-security.sh validate:*)",
      "Bash(/opt/sutazaiapp/tests/performance_benchmarks.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/consolidated/cleanup/archive-old-scripts.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/master/deploy.sh:*)",
      "Bash(SKIP_UPDATE=1 /opt/sutazaiapp/scripts/master/deploy.sh help)",
      "Bash(SKIP_UPDATE=1 /opt/sutazaiapp/scripts/master/deploy.sh status)",
      "Bash(env SKIP_UPDATE=1 /opt/sutazaiapp/scripts/master/deploy.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/docker/migrate-stragglers.sh:*)",
      "Bash(redis-cli:*)",
      "Bash(wget:*)",
      "Bash(./scripts/security/validate_xss_fixes.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/security/validate_enterprise_security.sh:*)",
      "Bash(scripts/master/validate.sh:*)",
      "Bash(scripts/master/deploy.sh:*)",
      "Bash(/opt/sutazaiapp/ULTRAFIX_IMMEDIATE_ACTION.sh:*)",
      "Bash(apt-get:*)",
      "Bash(apt-get install:*)",
      "Bash(./ULTRACLEANUP_IMMEDIATE_ACTION_SCRIPT.sh:*)",
      "Bash(./scripts/security/secure-monitoring-migration.sh:*)",
      "Bash(./load_test_health.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/security/validate-container-security-final.sh:*)",
      "Bash(./scripts/maintenance/ultra-organization-cleanup.sh:*)",
      "Bash(./scripts/maintenance/database-connectivity-test.sh:*)",
      "Bash(./scripts/maintenance/validate-ultra-organization.sh:*)",
      "Bash(./scripts/maintenance/backup/master-backup.sh:*)",
      "Bash(./scripts/validate-100-percent-connectivity.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/ultra_cleanup_todos.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/ultra_dockerfile_consolidation.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/ultra_fantasy_cleanup.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/ultra_script_organization.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/maintenance/cleanup/ultra_backup_removal.sh:*)",
      "Bash(./scripts/ultra_final_validation.sh:*)",
      "Bash(apt:*)",
      "Bash(./scripts/ultra_final_perfection.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/ultra_final_perfection.sh:*)",
      "mcp__sequentialthinking__sequentialthinking",
      "Bash(snap install:*)",
      "Bash(semgrep:*)",
      "mcp__extended-memory__load_contexts",
      "mcp__extended-memory__save_context",
      "mcp__files__directory_tree",
      "mcp__files__read_multiple_files",
      "mcp__files__directory_tree",
      "mcp__files__read_multiple_files",
      "mcp__files__read_text_file",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:cookbook.openai.com)",
      "WebFetch(domain:arxiv.org)",
      "Bash(do wc:*)",
      "Bash(do grep \"^model:\" \"$f\")",
      "mcp__files__list_directory",
      "mcp__ddg__search",
      "mcp__http__fetch",
      "mcp__mcp_ssh__execute_command",
      "mcp__github__get_file_contents",
      "mcp__github__search_repositories",
      "mcp__github__get_file_contents",
      "mcp__http__fetch",
      "mcp__files__search_files",
      "mcp__postgres__list_objects",
      "mcp__postgres__get_object_details",
      "mcp__postgres__execute_sql",
      "mcp__postgres__analyze_db_health",
      "mcp__postgres__get_top_queries",
      "mcp__ultimatecoder__tool_search_files",
      "WebFetch(domain:www.marktechpost.com)",
      "Bash(do time curl -s http://localhost:10010/health)",
      "mcp__ddg__fetch_content",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(./scripts/mcp/wrappers/playwright-mcp.sh:*)",
      "Bash(./scripts/mcp/wrappers/compass-mcp.sh:*)",
      "Bash(npm search:*)",
      "Bash(scripts/mcp/selfcheck_all.sh:*)",
      "mcp__ultimatecoder__tool_run_command",
      "Bash(iostat:*)",
      "Bash(vmstat:*)",
      "Bash(lsof:*)",
      "Bash(top:*)",
      "Bash(journalctl:*)",
      "Bash(git rm:*)",
      "Bash(scripts/remediation/01_emergency_recovery.sh:*)",
      "Bash(swapon:*)",
      "Bash(/opt/sutazaiapp/scripts/mcp/wrappers/postgres.sh:*)",
      "Bash(do echo -n \"  $service: \")",
      "Bash(then echo \"✅ RUNNING\")",
      "Bash(else echo \"❌ FAILED\")",
      "Bash(DATABASE_URI=\"postgresql://sutazai:sutazai123@sutazai-postgres:5432/sutazai\" DOCKER_NETWORK=\"sutazai-network\" POSTGRES_CONTAINER=\"sutazai-postgres\" ./scripts/mcp/wrappers/postgres.sh --selfcheck)",
      "Bash(./scripts/mcp/selfcheck_all.sh:*)",
      "Bash(unset:*)",
      "Bash(./scripts/mcp/wrappers/postgres.sh:*)",
      "Bash(./scripts/enforcement/validate_all.sh:*)",
      "Bash(DATABASE_URI=\"postgresql://sutazai:sutazai123@sutazai-postgres:5432/sutazai\" ./scripts/mcp/wrappers/postgres.sh --selfcheck)",
      "Bash(DATABASE_URL=\"postgresql://sutazai:sutazai123@sutazai-postgres:5432/sutazai\" ./scripts/mcp/wrappers/postgres.sh --selfcheck)",
      "Bash(sutazaiapp-backend:latest)",
      "Bash(PYTHONPATH=/opt/sutazaiapp/backend:/opt/sutazaiapp/agents:/opt/sutazaiapp python3 -m pytest tests/unit/core/test_caching_logic.py::test_caching_system -v)",
      "Bash(do if [ -d \"/opt/sutazaiapp/$dir\" ])",
      "Bash([ ! -f \"/opt/sutazaiapp/$dir/CHANGELOG.md\" ])",
      "Bash(then echo \"MISSING: $dir/CHANGELOG.md\")",
      "Bash(fi)",
      "Bash(/opt/sutazaiapp/scripts/enforcement_validator.sh:*)",
      "Bash(do if [ -f \"$dir/CHANGELOG.md\" ])",
      "Bash(do if [ ! -f \"$dir/CHANGELOG.md\" ])",
      "Bash(then echo \"Missing: $dir\")",
      "Bash(sha256sum:*)",
      "Bash(/opt/sutazaiapp/scripts/mcp/selfcheck_all.sh:*)",
      "Bash(./scripts/enforcement_validator.sh:*)",
      "Bash(sutazaiapp-backend:latest)",
      "Bash(sutazaiapp-frontend:latest)",
      "Bash(PGPASSWORD=sutazai psql:*)",
      "Bash(/opt/sutazaiapp/scripts/mcp/wrappers/files.sh:*)",
      "Bash(then echo \"MISSING: $dir\")",
      "Bash(else echo \"EXISTS: $dir\")",
      "Bash(MONITORING_PORT=10250 timeout 10s python monitoring_server.py)",
      "WebSearch",
      "Bash(MONITORING_PORT=10250 timeout 5s python monitoring_server.py)",
      "Bash(/opt/sutazaiapp/deploy.sh:*)",
      "Bash(coverage run:*)",
      "Bash(./selfcheck_all.sh)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(ls:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(if [ -d /opt/sutazaiapp/scripts/devops ])",
      "Bash(then mv /opt/sutazaiapp/scripts/devops/* /opt/sutazaiapp/scripts/automation/deployment/)",
      "Bash(if [ -d /opt/sutazaiapp/scripts/sync ])",
      "Bash(then mv /opt/sutazaiapp/scripts/sync/* /opt/sutazaiapp/scripts/automation/sync/)",
      "Bash(/opt/sutazaiapp/scripts/mcp/debug_cleanup.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/mcp/cleanup_containers.sh:*)",
      "Bash(do [ -f \"/opt/sutazaiapp/$dir/CHANGELOG.md\" ])",
      "Bash(do echo \"=== $file ===\")",
      "Bash(/tmp/find_dirs.sh:*)",
      "Bash(then echo \"✓ $dir/CHANGELOG.md exists\")",
      "Bash(else echo \"✗ $dir/CHANGELOG.md missing\")",
      "Bash(if [ -d \"$dir\" ])",
      "Bash([ ! -f \"$dir/CHANGELOG.md\" ])",
      "Bash(then)",
      "Bash(do [ -f \"$file\" ])",
      "Bash(then echo \"=== $file ===\")",
      "Bash(awk:*)",
      "Bash(openssl rand:*)",
      "Bash(env)",
      "Bash(sutazaiapp-backend:v1.0.0 )",
      "Bash(uvicorn:*)",
      "Bash(BACKUP_DIR=\"/opt/sutazaiapp/backup_waste_elimination_20250816_002410\")",
      "Bash(PGPASSWORD=change_me_secure psql -h localhost -p 10000 -U sutazai -d sutazai -c \"SELECT 1\")",
      "Bash(scripts/monitoring/live_logs.sh:*)",
      "Bash(PGPASSWORD=change_me_secure docker exec -it sutazai-postgres psql -U sutazai -d sutazai -c \"SELECT 1\")",
      "Bash(PGPASSWORD=change_me_secure docker exec sutazai-postgres psql -U sutazai -d sutazai -c \"SELECT 1\")",
      "Bash(/opt/sutazaiapp/scripts/mcp/selfcheck_all.sh:*)",
      "Bash(/opt/sutazaiapp/scripts/mcp/wrappers/language-server.sh:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "/root/.claude/todos"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "sequentialthinking",
    "context7",
    "mcp_ssh",
    "nx-mcp",
    "language-server",
    "files",
    "postgres",
    "extended-memory",
    "http",
    "github",
    "chromadb",
    "leettools",
    "web-search",
    "chroma",
    "ddg"
  ],
  "autoCompact": false
}