#!/usr/bin/env python3
"""
Unified Monitoring Master Controller
Auto-generated by Ultra Script Consolidator
Purpose: Single entry point for all monitoring
"""

import logging

# Configure logger for exception handling
logger = logging.getLogger(__name__)

import requests
from datetime import datetime

class MonitoringMaster:
    def __init__(self):
        self.services = {
            "backend": "http://localhost:10010/health",
            "frontend": "http://localhost:10011/",
            "ollama": "http://localhost:10104/api/tags",
            "hardware-optimizer": "http://localhost:11110/health"
        }
    
    def check_all_services(self):
        """Check health of all services"""
        results = {}
        for name, url in self.services.items():
            try:
                resp = requests.get(url, timeout=5)
                results[name] = "healthy" if resp.status_code == 200 else "unhealthy"
            except Exception as e:
                # TODO: Review this exception handling
                logger.error(f"Unexpected exception: {e}", exc_info=True)
                results[name] = "unreachable"
        return results
    
    def generate_report(self):
        """Generate monitoring report"""
        results = self.check_all_services()
        print(f"=== System Health Report - {datetime.now()} ===")
        for service, status in results.items():
            print(f"{service}: {status}")

if __name__ == "__main__":
    master = MonitoringMaster()
    master.generate_report()
