[tool.poetry]
name = "sutazai"
version = "0.1.0"
description = "SutazAI Core System"
authors = ["SutazAI Team"]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.6.4"
pydantic-settings = "^2.1.0"
fastapi = "^0.109.0"
uvicorn = "^0.27.0"
python-multipart = "^0.0.9"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
mypy = "^1.3.0"
black = "^24.1.1"
pylint = "^3.0.3"
flake8 = "^7.0.0"
semgrep = "^1.59.0"
bandit = "^1.7.6"
safety = "^3.0.1"
pyright = "^1.1.346"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.cspell]
# Whitelisting common technical terms that are unique to our project
words = ["pytest"]

[tool.black]
line-length = 79
target-version = ['py311']

[tool.flake8]
max-line-length = 79
extend-ignore = ["E203", "W503"]
per-file-ignores = [
    "__init__.py:F401",
]

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
strict = true

[tool.pylint.master]
py-version = "3.11"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]

[tool.bandit]
exclude_dirs = ["tests", "venv"]
skips = ["B101"]  # Skip assert used as statements

[tool.coverage.run]
source = ["core_system", "backend"]
omit = ["tests/*", "venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
] 