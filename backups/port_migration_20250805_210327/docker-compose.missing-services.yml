
# SutazAI Missing Services Deployment
# Completes the Master System Blueprint v2.2 implementation
# Resource optimized for 12 CPU cores, 29.38GB RAM

# Shared configuration anchors
x-common-variables: &common-env
  TZ: ${TZ:-UTC}
  SUTAZAI_ENV: ${SUTAZAI_ENV:-production}

x-resource-limits-small: &resource-limits-small
  deploy:
    resources:
      limits:
        cpus: '1'
        memory: 1G
      reservations:
        cpus: '0.25'
        memory: 256M

x-resource-limits-medium: &resource-limits-medium
  deploy:
    resources:
      limits:
        cpus: '2'
        memory: 2G
      reservations:
        cpus: '0.5'
        memory: 512M

x-resource-limits-large: &resource-limits-large
  deploy:
    resources:
      limits:
        cpus: '4'
        memory: 4G
      reservations:
        cpus: '1'
        memory: 1G

networks:
  sutazai-network:
    external: true

volumes:
  neo4j_data:
  neo4j_logs:
  kong_data:
  consul_data:
  rabbitmq_data:
  loki_data:
  alertmanager_data:
  faiss_data:
  resource_manager_data:
  shared_runtime_data:
    external: true

services:
  # Core Infrastructure - Neo4j Graph Database
  neo4j:
    image: neo4j:5-community
    container_name: sutazai-neo4j
    restart: unless-stopped
    <<: *resource-limits-medium
    environment:
      <<: *common-env
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD}
      NEO4J_dbms_default__database: sutazai
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_memory_pagecache_size: 512m
      NEO4J_dbms_connector_bolt_listen__address: 0.0.0.0:7687
      NEO4J_dbms_connector_http_listen__address: 0.0.0.0:7474
      NEO4J_dbms_security_procedures_unrestricted: gds.*,apoc.*
      NEO4J_dbms_security_procedures_allowlist: gds.*,apoc.*
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    ports:
      - "10002:7474"  # HTTP interface
      - "10003:7687"  # Bolt protocol
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p ${NEO4J_PASSWORD} 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Service Mesh - Kong API Gateway
  kong:
    image: kong:3.5
    container_name: sutazai-kong-gateway
    restart: unless-stopped
    <<: *resource-limits-medium
    environment:
      <<: *common-env
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_STATUS_LISTEN: 0.0.0.0:8100
      KONG_LOG_LEVEL: info
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PLUGINS: bundled,prometheus
    volumes:
      - kong_data:/usr/local/kong/declarative
      - ./configs/kong/kong.yml:/kong/declarative/kong.yml:ro
      - ./configs/kong/plugins:/usr/local/share/lua/5.1/kong/plugins/custom:ro
    ports:
      - "10005:8000"  # API Gateway proxy port
      - "10044:8001"  # Admin API
      - "10045:8100"  # Status/health
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service Mesh - Consul Service Discovery
  consul:
    image: hashicorp/consul:1.17
    container_name: sutazai-consul-discovery
    restart: unless-stopped
    <<: *resource-limits-small
    environment:
      <<: *common-env
      CONSUL_BIND_INTERFACE: eth0
      CONSUL_CLIENT_INTERFACE: eth0
      CONSUL_DATACENTER: sutazai-dc
      CONSUL_ENCRYPT: ${CONSUL_ENCRYPT_KEY:-}
    volumes:
      - consul_data:/consul/data
      - ./configs/consul/consul.hcl:/consul/config/consul.hcl:ro
    ports:
      - "10006:8500"  # HTTP API and Web UI
      - "10041:8600/udp"  # DNS
      - "10042:8300"  # Server RPC
    command: agent -server -ui -bootstrap-expect=1 -client=0.0.0.0 -config-file=/consul/config/consul.hcl
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Message Queue - RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: sutazai-rabbitmq-queue
    restart: unless-stopped
    <<: *resource-limits-medium
    environment:
      <<: *common-env
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-sutazai}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-sutazai_rmq}
      RABBITMQ_DEFAULT_VHOST: sutazai
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "10007:5672"   # AMQP port
      - "10008:15672"  # Management UI
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Resource Manager Service
  resource-manager:
    image: python:3.11-slim
    container_name: sutazai-resource-manager
    restart: unless-stopped
    <<: *resource-limits-medium
    environment:
      <<: *common-env
      PYTHONUNBUFFERED: 1
      REDIS_URL: redis://redis:6379/2
      POSTGRES_URL: postgresql://${POSTGRES_USER:-sutazai}:${POSTGRES_PASSWORD}@postgres:5432/sutazai
      CONSUL_URL: http://consul:8500
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-sutazai}:${RABBITMQ_PASSWORD:-sutazai_rmq}@rabbitmq:5672/sutazai
      CPU_CORES: 12
      TOTAL_MEMORY_GB: 29
    volumes:
      - resource_manager_data:/app/data
      - ./services/resource-manager:/app:ro
      - ./configs/resource-manager:/app/config:ro
    ports:
      - "10009:8000"
    command: >
      sh -c "
        pip install --no-cache-dir fastapi uvicorn redis psycopg2-binary pika python-consul &&
        pip install --no-cache-dir prometheus-client asyncio aioredis &&
        cd /app && python -m uvicorn main:app --host 0.0.0.0 --port 8000 --workers 2
      "
    networks:
      - sutazai-network
    depends_on:
      - consul
      - rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Service
  backend-api:
    image: python:3.11-slim
    container_name: sutazai-backend-api
    restart: unless-stopped
    <<: *resource-limits-large
    environment:
      <<: *common-env
      PYTHONUNBUFFERED: 1
      DATABASE_URL: postgresql://${POSTGRES_USER:-sutazai}:${POSTGRES_PASSWORD}@postgres:5432/sutazai
      REDIS_URL: redis://redis:6379/0
      NEO4J_URL: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      CHROMADB_URL: http://chromadb:8000
      QDRANT_URL: http://qdrant:6333
      OLLAMA_URL: http://ollama:11434
      KONG_ADMIN_URL: http://kong:8001
      CONSUL_URL: http://consul:8500
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-sutazai}:${RABBITMQ_PASSWORD:-sutazai_rmq}@rabbitmq:5672/sutazai
      CORS_ORIGINS: "http://localhost:10011,http://frontend:3000"
    volumes:
      - ./backend:/app:ro
      - ./configs/backend:/app/config:ro
      - shared_runtime_data:/app/shared
    ports:
      - "10010:8000"
    command: >
      sh -c "
        pip install --no-cache-dir fastapi uvicorn sqlalchemy psycopg2-binary &&
        pip install --no-cache-dir redis neo4j chromadb-client qdrant-client &&
        pip install --no-cache-dir pika python-consul prometheus-client &&
        pip install --no-cache-dir python-multipart aiofiles &&
        cd /app && python -m uvicorn main:app --host 0.0.0.0 --port 8000 --workers 4
      "
    networks:
      - sutazai-network
    depends_on:
      - neo4j
      - consul
      - rabbitmq
      - resource-manager
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend UI Service
  frontend-ui:
    image: node:18-alpine
    container_name: sutazai-frontend-ui
    restart: unless-stopped
    <<: *resource-limits-medium
    environment:
      <<: *common-env
      NODE_ENV: production
      REACT_APP_API_URL: http://localhost:10010
      REACT_APP_WEBSOCKET_URL: ws://localhost:10010/ws
      REACT_APP_OLLAMA_URL: http://localhost:10104
      GENERATE_SOURCEMAP: false
      PORT: 3000
    volumes:
      - ./frontend:/app:ro
      - ./configs/frontend:/app/config:ro
    ports:
      - "10011:3000"
    working_dir: /app
    command: >
      sh -c "
        npm ci --production &&
        npm run build &&
        npm install -g serve &&
        serve -s build -l 3000
      "
    networks:
      - sutazai-network
    depends_on:
      - backend-api
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FAISS Vector Index Service
  faiss-vector:
    image: python:3.11-slim
    container_name: sutazai-faiss-vector
    restart: unless-stopped
    <<: *resource-limits-medium
    environment:
      <<: *common-env
      PYTHONUNBUFFERED: 1
      FAISS_INDEX_PATH: /app/data/indexes
      REDIS_URL: redis://redis:6379/3
      MAX_VECTORS: 1000000
      DIMENSION: 1536
    volumes:
      - faiss_data:/app/data
      - ./services/faiss-vector:/app/src:ro
    ports:
      - "10103:8000"
    working_dir: /app
    command: >
      sh -c "
        mkdir -p /app/data/indexes &&
        pip install --no-cache-dir faiss-cpu fastapi uvicorn redis &&
        pip install --no-cache-dir numpy scikit-learn prometheus-client &&
        cp /app/src/main.py /app/ &&
        python -m uvicorn main:app --host 0.0.0.0 --port 8000 --workers 2
      "
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:8000/health')\" || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring - Loki Log Aggregation
  loki:
    image: grafana/loki:3.0.0
    container_name: sutazai-loki
    restart: unless-stopped
    <<: *resource-limits-medium
    environment:
      <<: *common-env
    volumes:
      - loki_data:/loki
      - ./configs/loki/loki.yml:/etc/loki/local-config.yaml:ro
    ports:
      - "10202:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring - Alertmanager
  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: sutazai-alertmanager
    restart: unless-stopped
    <<: *resource-limits-small
    environment:
      <<: *common-env
    volumes:
      - alertmanager_data:/alertmanager
      - ./configs/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - "10203:9093"
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:10203'
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9093/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring - AI Metrics Exporter
  ai-metrics-exporter:
    image: python:3.11-slim
    container_name: sutazai-ai-metrics
    restart: unless-stopped
    <<: *resource-limits-small
    environment:
      <<: *common-env
      PYTHONUNBUFFERED: 1
      OLLAMA_URL: http://ollama:11434
      CHROMADB_URL: http://chromadb:8000
      QDRANT_URL: http://qdrant:6333
      NEO4J_URL: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      METRICS_PORT: 9200
    volumes:
      - ./services/ai-metrics:/app:ro
    ports:
      - "10204:9200"
    command: >
      sh -c "
        pip install --no-cache-dir prometheus-client requests neo4j &&
        pip install --no-cache-dir chromadb-client qdrant-client asyncio &&
        cd /app && python main.py
      "
    networks:
      - sutazai-network
    depends_on:
      - neo4j
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/metrics || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3