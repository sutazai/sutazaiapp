# AI Agent Resource Allocation Configuration
# Defines resource pools and limits for phased agent activation

system_constraints:
  # Overall system limits to prevent resource exhaustion
  max_total_cpu: "16.0"      # Maximum total CPU cores for all agents
  max_total_memory: "32Gi"   # Maximum total memory for all agents
  safety_margin_cpu: 0.2    # Reserve 20% CPU for system processes
  safety_margin_memory: 0.15 # Reserve 15% memory for system processes
  
  # Health thresholds for activation control
  activation_thresholds:
    cpu_warning: 75          # Warn when CPU usage exceeds 75%
    cpu_critical: 85         # Stop activation when CPU exceeds 85%
    memory_warning: 80       # Warn when memory usage exceeds 80%
    memory_critical: 90      # Stop activation when memory exceeds 90%
    disk_warning: 80         # Warn when disk usage exceeds 80%
    disk_critical: 95        # Critical when disk exceeds 95%

resource_pools:
  # Phase 1: Critical Core Agents
  critical_pool:
    phase: 1
    priority: "high"
    max_agents: 15
    agent_limits:
      cpu: "2.0"             # 2 CPU cores per agent
      memory: "4Gi"          # 4GB RAM per agent
      storage: "10Gi"        # 10GB storage per agent
    agent_reservations:
      cpu: "0.4"             # Reserve 0.4 CPU cores
      memory: "1Gi"          # Reserve 1GB RAM
      storage: "2Gi"         # Reserve 2GB storage
    pool_limits:
      total_cpu: "8.0"       # Max 8 CPU cores for this pool
      total_memory: "16Gi"   # Max 16GB for this pool
    
  # Phase 2: Performance Enhancement Agents  
  performance_pool:
    phase: 2
    priority: "medium"
    max_agents: 25
    agent_limits:
      cpu: "1.0"             # 1 CPU core per agent
      memory: "2Gi"          # 2GB RAM per agent
      storage: "5Gi"         # 5GB storage per agent
    agent_reservations:
      cpu: "0.2"             # Reserve 0.2 CPU cores
      memory: "512Mi"        # Reserve 512MB RAM
      storage: "1Gi"         # Reserve 1GB storage
    pool_limits:
      total_cpu: "6.0"       # Max 6 CPU cores for this pool
      total_memory: "12Gi"   # Max 12GB for this pool
      
  # Phase 3: Specialized Function Agents
  specialized_pool:
    phase: 3
    priority: "low"
    max_agents: 70
    agent_limits:
      cpu: "0.5"             # 0.5 CPU cores per agent
      memory: "1Gi"          # 1GB RAM per agent
      storage: "2Gi"         # 2GB storage per agent
    agent_reservations:
      cpu: "0.1"             # Reserve 0.1 CPU cores
      memory: "256Mi"        # Reserve 256MB RAM
      storage: "512Mi"       # Reserve 512MB storage
    pool_limits:
      total_cpu: "4.0"       # Max 4 CPU cores for this pool
      total_memory: "8Gi"    # Max 8GB for this pool

# Agent-specific resource overrides
agent_overrides:
  # High-resource agents that need more than pool defaults
  "ai-system-architect":
    cpu: "3.0"
    memory: "6Gi"
    storage: "15Gi"
    
  "deep-learning-brain-architect":
    cpu: "2.5"
    memory: "8Gi"
    storage: "20Gi"
    
  "hardware-resource-optimizer":
    cpu: "1.5"
    memory: "3Gi"
    storage: "5Gi"
    
  "ollama-integration-specialist":
    cpu: "2.0"
    memory: "4Gi"
    storage: "10Gi"
    
  "distributed-computing-architect":
    cpu: "2.0"
    memory: "4Gi"
    storage: "8Gi"
    
  # Lightweight agents that need less resources
  "document-knowledge-manager":
    cpu: "0.3"
    memory: "512Mi"
    storage: "2Gi"
    
  "garbage-collector-coordinator":
    cpu: "0.2"
    memory: "256Mi"
    storage: "1Gi"
    
  "attention-optimizer":
    cpu: "0.4"
    memory: "768Mi"
    storage: "1Gi"

# Scaling and auto-management policies
scaling_policies:
  # Auto-scaling based on resource usage
  auto_scale:
    enabled: true
    scale_up_threshold: 0.7    # Scale up when pool usage > 70%
    scale_down_threshold: 0.3  # Scale down when pool usage < 30%
    min_agents: 1              # Minimum agents per pool
    max_scale_step: 2          # Maximum agents to add/remove at once
    cooldown_period: 300       # Wait 5 minutes between scaling actions
    
  # Resource-based hibernation
  hibernation:
    enabled: true
    idle_threshold: 300        # Hibernate after 5 minutes idle
    resource_threshold: 0.9    # Hibernate low-priority agents when resources > 90%
    wake_up_delay: 30          # Wait 30 seconds before waking agents
    
  # Health-based management
  health_management:
    enabled: true
    health_check_interval: 30  # Check health every 30 seconds
    unhealthy_restart_delay: 60 # Wait 60 seconds before restarting unhealthy agents
    max_restart_attempts: 3    # Maximum restart attempts before disabling
    failure_cooldown: 600      # Wait 10 minutes after max failures

# Monitoring and alerting
monitoring:
  # Metrics collection
  metrics:
    enabled: true
    collection_interval: 15    # Collect metrics every 15 seconds
    retention_period: "7d"     # Keep metrics for 7 days
    
  # Resource alerts
  alerts:
    enabled: true
    webhook_url: "http://localhost:3002/api/alerts"
    
    # Alert conditions
    conditions:
      high_cpu_usage:
        threshold: 80
        duration: 300          # Alert if high for 5 minutes
        severity: "warning"
        
      critical_cpu_usage:
        threshold: 90
        duration: 60           # Alert if critical for 1 minute
        severity: "critical"
        
      high_memory_usage:
        threshold: 85
        duration: 300
        severity: "warning"
        
      critical_memory_usage:
        threshold: 95
        duration: 60
        severity: "critical"
        
      agent_failure_rate:
        threshold: 0.1         # Alert if >10% agents failing
        duration: 300
        severity: "warning"
        
      pool_saturation:
        threshold: 0.95        # Alert when pool >95% utilized
        duration: 180
        severity: "warning"

# Environment-specific configurations
environments:
  development:
    resource_multiplier: 0.5   # Use 50% of resources in dev
    max_concurrent_activations: 2
    health_check_timeout: 60
    
  staging:
    resource_multiplier: 0.8   # Use 80% of resources in staging
    max_concurrent_activations: 3
    health_check_timeout: 45
    
  production:
    resource_multiplier: 1.0   # Use full resources in production
    max_concurrent_activations: 5
    health_check_timeout: 30

# Network and storage configurations
network:
  # Agent communication limits
  bandwidth_limits:
    inter_agent: "100Mbps"     # Max bandwidth between agents
    external_api: "50Mbps"     # Max bandwidth for external APIs
    
  # Connection pools
  connection_pools:
    redis_pool_size: 20        # Redis connection pool size
    postgres_pool_size: 15     # Postgres connection pool size
    ollama_pool_size: 10       # Ollama connection pool size

storage:
  # Persistent storage configuration
  volumes:
    agent_workspaces:
      size: "100Gi"
      storage_class: "fast-ssd"
      
    shared_models:
      size: "200Gi"
      storage_class: "standard"
      
    logs_and_metrics:
      size: "50Gi"
      storage_class: "standard"
      retention: "30d"
      
  # Cleanup policies
  cleanup:
    enabled: true
    temp_files_ttl: "1h"       # Clean temp files after 1 hour
    log_files_ttl: "7d"        # Clean old logs after 7 days
    model_cache_ttl: "24h"     # Clean model cache after 24 hours