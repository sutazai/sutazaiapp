# ============================================================================
# Secrets Template for Perfect Jarvis Blue/Green Deployment
# ============================================================================
#
# This template file shows the required secret environment variables.
# Copy this file to secrets.env and fill in the actual values.
# 
# NEVER commit the actual secrets.env file to version control!
#
# Following CLAUDE.md Rule 2: Don't break existing functionality
# ============================================================================

# Database passwords
POSTGRES_PASSWORD=your_secure_postgres_password_here
REDIS_PASSWORD=your_secure_redis_password_here
NEO4J_PASSWORD=your_secure_neo4j_password_here

# Application secrets
JWT_SECRET=your_secure_jwt_secret_here_minimum_32_characters
SECRET_KEY=your_secure_app_secret_key_here_minimum_32_characters

# Third-party API keys
PORCUPINE_ACCESS_KEY=your_porcupine_access_key_here
CHROMADB_API_KEY=your_chromadb_api_key_here

# Monitoring credentials
GRAFANA_PASSWORD=your_secure_grafana_password_here

# External service credentials
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_AI_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/AI/WEBHOOK
SLACK_SECURITY_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SECURITY/WEBHOOK

# PagerDuty integration
PAGERDUTY_SERVICE_KEY=your_pagerduty_service_key_here

# Email configuration
SMTP_HOST=your_smtp_host_here
SMTP_PORT=587
SMTP_USER=your_smtp_user_here
SMTP_PASSWORD=your_smtp_password_here
SMTP_FROM_EMAIL=noreply@yourcompany.com

# Certificate configuration
SSL_CERT_PATH=/etc/ssl/certs/sutazai.pem
SSL_KEY_PATH=/etc/ssl/private/sutazai.key

# Backup storage credentials (if using cloud storage)
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
S3_BACKUP_BUCKET=your-backup-bucket-name

# Vault configuration (if using HashiCorp Vault)
VAULT_ADDR=https://vault.yourcompany.com
VAULT_TOKEN=your_vault_token_here
VAULT_NAMESPACE=your_vault_namespace

# OAuth/SSO configuration
OAUTH_CLIENT_ID=your_oauth_client_id_here
OAUTH_CLIENT_SECRET=your_oauth_client_secret_here
OAUTH_REDIRECT_URI=https://yourapp.com/auth/callback

# Encryption keys
ENCRYPTION_KEY=your_32_character_encryption_key_here
SIGNING_KEY=your_signing_key_here

# License keys (if applicable)
LICENSE_KEY=your_license_key_here

# External API endpoints
EXTERNAL_API_BASE_URL=https://api.external-service.com
EXTERNAL_API_KEY=your_external_api_key_here

# Security scanning keys
SECURITY_SCAN_API_KEY=your_security_scan_api_key_here

# Deployment specific secrets
DEPLOYMENT_USER=deployment_user
DEPLOYMENT_SSH_KEY=/path/to/deployment/ssh/key

# Container registry credentials
DOCKER_REGISTRY_USER=your_registry_user
DOCKER_REGISTRY_PASSWORD=your_registry_password
DOCKER_REGISTRY_URL=registry.yourcompany.com

# ============================================================================
# SECURITY NOTES
# ============================================================================
#
# 1. Use strong passwords (minimum 16 characters, mix of letters, numbers, symbols)
# 2. Rotate secrets regularly (at least every 90 days)
# 3. Use different passwords for each service
# 4. Store this file securely and restrict access (chmod 600)
# 5. Consider using a secrets management system like:
#    - HashiCorp Vault
#    - AWS Secrets Manager
#    - Azure Key Vault
#    - Kubernetes Secrets
#
# 6. Never log or expose these values in application logs
# 7. Use environment-specific secrets for each deployment stage
# 8. Implement secret rotation procedures
# 9. Monitor for secret leaks in code repositories
# 10. Use encrypted communication for all secret exchanges
#
# ============================================================================
# USAGE INSTRUCTIONS
# ============================================================================
#
# 1. Copy this file:
#    cp secrets.env.template secrets.env
#
# 2. Generate secure passwords:
#    openssl rand -base64 32    # For 32-character secrets
#    openssl rand -hex 16       # For 16-character hex secrets
#
# 3. Set proper file permissions:
#    chmod 600 secrets.env
#
# 4. Source the secrets before deployment:
#    source config/deploy/secrets.env
#
# 5. Verify secrets are loaded:
#    echo $POSTGRES_PASSWORD    # Should show your password
#
# ============================================================================