version: '3.8'

services:
  mcp-bridge:
    container_name: sutazai-mcp-bridge
    build:
      context: .
      dockerfile: Dockerfile
    image: sutazai-mcp-bridge:latest
    ports:
      - "11100:11100"
    networks:
      - sutazai-network
    environment:
      - LOG_LEVEL=INFO
      - MCP_BRIDGE_PORT=11100
      - POSTGRES_HOST=sutazai-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=jarvis
      - POSTGRES_PASSWORD=sutazai_secure_2024
      - POSTGRES_DB=jarvis_ai
      - REDIS_HOST=sutazai-redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=sutazai-rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=sutazai
      - RABBITMQ_PASSWORD=sutazai_secure_2024
      - NEO4J_HOST=sutazai-neo4j
      - NEO4J_PORT=7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=sutazai_secure_2024
      - CONSUL_HOST=sutazai-consul
      - CONSUL_PORT=8500
      - KONG_ADMIN_URL=http://sutazai-kong:8001
      - CHROMADB_HOST=sutazai-chromadb
      - CHROMADB_PORT=8000
      - QDRANT_HOST=sutazai-qdrant
      - QDRANT_PORT=6333
      - FAISS_HOST=sutazai-faiss
      - FAISS_PORT=8000
      - BACKEND_HOST=sutazai-backend
      - BACKEND_PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11100/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mcp-bridge.rule=Host(`mcp.sutazai.local`)"
      - "traefik.http.services.mcp-bridge.loadbalancer.server.port=11100"


networks:
  sutazai-network:
    external: true
    name: sutazaiapp_sutazai-network

volumes:
  mcp-bridge-data:
    driver: local