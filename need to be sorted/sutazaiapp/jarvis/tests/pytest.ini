[tool:pytest]
# pytest configuration for Ollama integration tests

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Output and formatting
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --durations-min=1.0

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests between components
    performance: Performance and load testing
    regression: Regression tests for backward compatibility
    failure: Failure scenario and resilience tests
    slow: Slow-running tests (>5 seconds)
    network: Tests requiring network access
    ollama: Tests requiring Ollama service
    ci: Tests suitable for CI/CD pipelines
    
# Timeout settings
timeout = 300
timeout_method = thread

# Coverage settings
coverage_report = term-missing
coverage_html = test-reports/coverage/html
coverage_xml = test-reports/coverage/coverage.xml

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning:aiohttp.*
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Test output
junit_family = xunit2
junit_suite_name = ollama_integration_tests

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = test-reports/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Minimum Python version
minversion = 3.8

# Test environment
env =
    PYTHONPATH = agents:.:$PYTHONPATH
    LOG_LEVEL = WARNING
    TESTING = true
    PYTEST_CURRENT_TEST = true