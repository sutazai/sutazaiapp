openapi: 3.0.3
info:
  title: SutazAI Agent-Specific APIs
  description: |
    Individual API specifications for specialized SutazAI agents.
    
    This document covers the unique endpoints and capabilities of each agent type,
    including their specialized parameters, response formats, and use cases.
    
  version: 1.0.0

servers:
  - url: http://localhost:10010/api/v1
    description: Local Development Server
  - url: https://api.sutazai.com/api/v1
    description: Production Server

paths:
  # AI Senior Backend Developer Agent (Port: 8551)
  /agents/ai-senior-backend-developer/execute:
    post:
      tags:
        - Development Agents
      summary: Execute Backend Development Task
      description: Execute backend development tasks using AI Senior Backend Developer
      operationId: executeBackendDevelopmentTask  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseTaskRequest'
                - type: object
                  properties:
                    task_type:
                      type: string
                      enum: [api_design, database_schema, performance_optimization, code_review, bug_fix, architecture_design]
                    language:
                      type: string
                      enum: [python, java, javascript, go, rust, php, ruby]
                      default: python
                    framework:
                      type: string
                      description: Backend framework (FastAPI, Django, Spring Boot, Express, etc.)
                    code_context:
                      type: string
                      description: Existing code context or repository information
                    requirements:
                      type: array
                      items:
                        type: string
                      description: Specific requirements or constraints
                    output_format:
                      type: string
                      enum: [code, documentation, architecture_diagram, api_spec]
                      default: code
      responses:
        '200':
          description: Backend development task completed
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseTaskResponse'
                  - type: object
                    properties:
                      generated_code:
                        type: string
                        description: Generated code or implementation
                      documentation:
                        type: string
                        description: Generated documentation
                      recommendations:
                        type: array
                        items:
                          type: string
                        description: Development recommendations
                      performance_metrics:
                        type: object
                        description: Performance analysis results
                      test_cases:
                        type: array
                        items:
                          type: string
                        description: Generated test cases
                        
  # AI Senior Frontend Developer Agent (Port: 8552)
  /agents/ai-senior-frontend-developer/execute:
    post:
      tags:
        - Development Agents
      summary: Execute Frontend Development Task
      description: Execute frontend development tasks using AI Senior Frontend Developer
      operationId: executeFrontendDevelopmentTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseTaskRequest'
                - type: object
                  properties:
                    task_type:
                      type: string
                      enum: [ui_component, page_layout, responsive_design, performance_optimization, accessibility_audit, state_management]
                    framework:
                      type: string
                      enum: [react, vue, angular, svelte, vanilla]
                      default: react
                    styling:
                      type: string
                      enum: [css, scss, tailwind, styled-components, emotion]
                      default: tailwind
                    design_system:
                      type: string
                      description: Design system or component library to use
                    browser_support:
                      type: array
                      items:
                        type: string
                      description: Target browser versions
                    accessibility_level:
                      type: string
                      enum: [aa, aaa]
                      default: aa
      responses:
        '200':
          description: Frontend development task completed
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseTaskResponse'
                  - type: object
                    properties:
                      component_code:
                        type: string
                        description: Generated component code
                      styles:
                        type: string
                        description: Generated CSS/SCSS styles
                      html_structure:
                        type: string
                        description: Generated HTML structure
                      accessibility_report:
                        type: object
                        description: Accessibility compliance report
                      performance_suggestions:
                        type: array
                        items:
                          type: string

  # Jarvis Voice Interface Agent (Port: 8582)
  /agents/jarvis-voice-interface/speech-to-text:
    post:
      tags:
        - Voice Interface Agents
      summary: Convert Speech to Text via Jarvis
      description: Convert speech to text using Jarvis voice recognition capabilities
      operationId: jarvisSpeechToText
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                audio:
                  type: string
                  format: binary
                  description: Audio file (WAV, MP3, WebM, M4A)
                language:
                  type: string
                  description: Language code (en-US, es-ES, fr-FR, etc.)
                  default: en-US
                model:
                  type: string
                  enum: [whisper-small, whisper-base, whisper-large]
                  default: whisper-base
                enhanced_processing:
                  type: boolean
                  description: Enable enhanced speech processing
                  default: true
                noise_reduction:
                  type: boolean
                  description: Enable noise reduction
                  default: true
      responses:
        '200':
          description: Speech converted to text successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    description: Transcribed text
                  confidence:
                    type: number
                    format: float
                    description: Confidence score (0-1)
                  language_detected:
                    type: string
                    description: Detected language
                  processing_time:
                    type: number
                    format: float
                    description: Processing time in seconds
                  word_timestamps:
                    type: array
                    items:
                      type: object
                      properties:
                        word:
                          type: string
                        start_time:
                          type: number
                          format: float
                        end_time:
                          type: number
                          format: float
                        confidence:
                          type: number
                          format: float

  /agents/jarvis-voice-interface/text-to-speech:
    post:
      tags:
        - Voice Interface Agents
      summary: Convert Text to Speech via Jarvis
      description: Convert text to speech using Jarvis voice synthesis
      operationId: jarvisTextToSpeech
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Text to convert to speech
                  maxLength: 5000
                voice_profile:
                  type: string
                  enum: [jarvis, assistant, narrator, conversational]
                  default: jarvis
                language:
                  type: string
                  default: en-US
                speed:
                  type: number
                  format: float
                  minimum: 0.5
                  maximum: 2.0
                  default: 1.0
                pitch:
                  type: number
                  format: float
                  minimum: 0.5
                  maximum: 2.0
                  default: 1.0
                emotion:
                  type: string
                  enum: [neutral, happy, excited, calm, serious]
                  default: neutral
                output_format:
                  type: string
                  enum: [wav, mp3, ogg]
                  default: wav
      responses:
        '200':
          description: Text converted to speech successfully
          content:
            audio/wav:
              schema:
                type: string
                format: binary
            audio/mp3:
              schema:
                type: string
                format: binary
            audio/ogg:
              schema:
                type: string
                format: binary
                
  # AI QA Team Lead Agent (Port: 8554)
  /agents/ai-qa-team-lead/execute:
    post:
      tags:
        - QA and Testing Agents
      summary: Execute QA Testing Task
      description: Execute quality assurance and testing tasks
      operationId: executeQATask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseTaskRequest'
                - type: object
                  properties:
                    test_type:
                      type: string
                      enum: [unit_test, integration_test, e2e_test, performance_test, security_test, accessibility_test]
                    application_type:
                      type: string
                      enum: [web, mobile, api, desktop]
                    testing_framework:
                      type: string
                      description: Preferred testing framework (Jest, Pytest, Cypress, etc.)
                    coverage_target:
                      type: number
                      format: float
                      minimum: 0
                      maximum: 100
                      description: Target code coverage percentage
                    test_data:
                      type: object
                      description: Test data and fixtures
                    environment:
                      type: string
                      enum: [development, staging, production]
                      default: development
      responses:
        '200':
          description: QA task completed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseTaskResponse'
                  - type: object
                    properties:
                      test_cases:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            description:
                              type: string
                            steps:
                              type: array
                              items:
                                type: string
                            expected_result:
                              type: string
                            priority:
                              type: string
                              enum: [low, medium, high, critical]
                      test_code:
                        type: string
                        description: Generated test code
                      coverage_report:
                        type: object
                        description: Code coverage analysis
                      bug_reports:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            severity:
                              type: string  
                              enum: [low, medium, high, critical]
                            description:
                              type: string
                            steps_to_reproduce:
                              type: array
                              items:
                                type: string
                      performance_metrics:
                        type: object
                        description: Performance test results

  # Agent Orchestrator (Port: 8500)
  /agents/agent-orchestrator/execute:
    post:
      tags:
        - Orchestration Agents
      summary: Execute Multi-Agent Orchestration
      description: Coordinate and execute tasks across multiple agents
      operationId: executeOrchestration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseTaskRequest'
                - type: object
                  properties:
                    workflow:
                      type: array
                      items:
                        type: object
                        properties:
                          agent_id:
                            type: string
                          task:
                            type: string
                          dependencies:
                            type: array
                            items:
                              type: string
                          parameters:
                            type: object
                      description: Workflow definition with agent tasks and dependencies
                    execution_mode:
                      type: string
                      enum: [sequential, parallel, mixed]
                      default: mixed
                    failure_strategy:
                      type: string
                      enum: [fail_fast, continue_on_failure, retry]
                      default: fail_fast
                    max_retries:
                      type: integer
                      minimum: 0
                      maximum: 5
                      default: 3
                    timeout:
                      type: integer
                      description: Overall workflow timeout in seconds
                      default: 3600
      responses:
        '200':
          description: Orchestration completed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseTaskResponse'
                  - type: object
                    properties:
                      workflow_results:
                        type: array
                        items:
                          type: object
                          properties:
                            agent_id:
                              type: string
                            task_id:
                              type: string
                            status:
                              type: string
                              enum: [completed, failed, skipped]
                            result:
                              type: object
                            execution_time:
                              type: number
                              format: float
                            error:
                              type: string
                      execution_summary:
                        type: object
                        properties:
                          total_tasks:
                            type: integer
                          successful_tasks:
                            type: integer
                          failed_tasks:
                            type: integer
                          total_execution_time:
                            type: number
                            format: float
                          
  # Security Specialist Agent
  /agents/kali-security-specialist/execute:
    post:
      tags:
        - Security Agents
      summary: Execute Security Assessment
      description: Perform security assessments and penetration testing
      operationId: executeSecurityAssessment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseTaskRequest'
                - type: object
                  properties:
                    assessment_type:
                      type: string
                      enum: [vulnerability_scan, penetration_test, security_audit, code_analysis, network_scan]
                    target:
                      type: string
                      description: Target system or application
                    scope:
                      type: array
                      items:
                        type: string
                      description: Assessment scope and boundaries
                    methodology:
                      type: string
                      enum: [owasp, nist, ptes, custom]
                      default: owasp
                    severity_threshold:
                      type: string
                      enum: [info, low, medium, high, critical]
                      default: medium
                    include_exploits:
                      type: boolean
                      description: Include exploit demonstrations
                      default: false
                    compliance_framework:
                      type: string
                      enum: [pci_dss, hipaa, gdpr, sox, iso27001]
      responses:
        '200':
          description: Security assessment completed
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseTaskResponse'
                  - type: object
                    properties:
                      vulnerabilities:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            title:
                              type: string
                            severity:
                              type: string
                              enum: [info, low, medium, high, critical]
                            cvss_score:
                              type: number
                              format: float
                            description:
                              type: string
                            affected_components:
                              type: array
                              items:
                                type: string
                            remediation:
                              type: string
                            references:
                              type: array
                              items:
                                type: string
                      security_score:
                        type: number
                        format: float
                        description: Overall security score (0-100)
                      compliance_status:
                        type: object
                        description: Compliance framework assessment results
                      recommendations:
                        type: array
                        items:
                          type: object
                          properties:
                            priority:
                              type: string
                              enum: [low, medium, high, critical]
                            action:
                              type: string
                            timeline:
                              type: string

components:
  schemas:
    BaseTaskRequest:
      type: object
      properties:
        task:
          type: string
          description: Task description or command
        priority:
          type: string
          enum: [low, normal, high, urgent]
          default: normal
        timeout:
          type: integer
          description: Task timeout in seconds
          default: 300
        context:
          type: object
          description: Additional context for task execution
        metadata:
          type: object
          description: Task metadata and tags
      required: [task]
      
    BaseTaskResponse:
      type: object
      properties:
        task_id:
          type: string
          description: Unique task identifier
        agent_id:
          type: string
          description: Agent that executed the task
        status:
          type: string
          enum: [completed, failed, partial]
        result:
          description: Task execution result
        execution_time:
          type: number
          format: float
          description: Task execution time in seconds
        created_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        warnings:
          type: array
          items:
            type: string
          description: Non-critical warnings during execution
        agent_info:
          type: object
          properties:
            name:
              type: string
            version:
              type: string
            capabilities:
              type: array
              items:
                type: string
      required: [task_id, agent_id, status]

tags:
  - name: Development Agents
    description: Software development and engineering agents
  - name: Voice Interface Agents
    description: Speech processing and voice interaction agents
  - name: QA and Testing Agents
    description: Quality assurance and testing automation agents
  - name: Orchestration Agents
    description: Multi-agent coordination and workflow management
  - name: Security Agents
    description: Security assessment and penetration testing agents