{
  "metadata": {
    "generated_at": "2025-08-17T08:48:17.215534+00:00",
    "total_services_analyzed": 21,
    "analysis_type": "Comprehensive MCP Performance and Value Analysis"
  },
  "executive_summary": {
    "key_findings": [
      "4 services identified for removal/consolidation",
      "19.0% reduction in container count possible",
      "6.6% CPU reduction achievable",
      "496MB memory savings identified",
      "5 consolidation groups identified with clear redundancies"
    ],
    "immediate_actions": [
      "Remove duplicate browser automation services (puppeteer-mcp (no longer in use))",
      "Consolidate HTTP operations into single service",
      "Unify memory management services",
      "Eliminate low-value sporadic services"
    ]
  },
  "service_rankings": {
    "highest_value_services": [
      {
        "service": "files",
        "value_score": 2.87,
        "reason": "HIGH criticality, CONSTANT usage"
      },
      {
        "service": "http",
        "value_score": 2.51,
        "reason": "MEDIUM criticality, CONSTANT usage"
      },
      {
        "service": "github",
        "value_score": 1.6,
        "reason": "MEDIUM criticality, BURST usage"
      },
      {
        "service": "extended-memory",
        "value_score": 1.56,
        "reason": "HIGH criticality, CONSTANT usage"
      },
      {
        "service": "memory-bank-mcp",
        "value_score": 1.55,
        "reason": "HIGH criticality, SUSTAINED usage"
      }
    ],
    "lowest_value_services": [
      {
        "service": "ddg",
        "value_score": 0.55,
        "reason": "LOW criticality, SPORADIC usage",
        "recommendation": "Consider removal or on-demand activation"
      },
      {
        "service": "ultimatecoder",
        "value_score": 0.47,
        "reason": "MEDIUM criticality, BURST usage",
        "recommendation": "Consider removal or on-demand activation"
      },
      {
        "service": "nx-mcp",
        "value_score": 0.35,
        "reason": "LOW criticality, SPORADIC usage",
        "recommendation": "Consider removal or on-demand activation"
      },
      {
        "service": "puppeteer-mcp (no longer in use)",
        "value_score": 0.17,
        "reason": "LOW criticality, BURST usage",
        "recommendation": "Consider removal or on-demand activation"
      },
      {
        "service": "playwright-mcp",
        "value_score": 0.15,
        "reason": "LOW criticality, BURST usage",
        "recommendation": "Consider removal or on-demand activation"
      }
    ]
  },
  "consolidation_recommendations": [
    {
      "group_name": "Browser Automation",
      "services": [
        "playwright-mcp",
        "puppeteer-mcp (no longer in use)"
      ],
      "reason": "Duplicate functionality - both provide browser automation",
      "recommendation": "Keep playwright-mcp (more modern), remove puppeteer-mcp (no longer in use)",
      "savings": {
        "containers": 1,
        "cpu_percent": 7.8,
        "memory_mb": 640
      }
    },
    {
      "group_name": "HTTP Operations",
      "services": [
        "http",
        "http_fetch"
      ],
      "reason": "Overlapping HTTP functionality",
      "recommendation": "Merge into single HTTP service",
      "savings": {
        "containers": 1,
        "cpu_percent": 0.8,
        "memory_mb": 48
      }
    },
    {
      "group_name": "Memory Management",
      "services": [
        "extended-memory",
        "memory-bank-mcp"
      ],
      "reason": "Related memory management functions",
      "recommendation": "Unify into single advanced memory service",
      "savings": {
        "containers": 1,
        "cpu_percent": 3.2,
        "memory_mb": 256
      }
    },
    {
      "group_name": "Low-Value Sporadic Services",
      "services": [
        "http_fetch",
        "ddg",
        "nx-mcp",
        "mcp_ssh"
      ],
      "reason": "Very low usage and criticality with high resource cost",
      "recommendation": "Consider removing or making on-demand only",
      "savings": {
        "containers": 4,
        "cpu_percent": 3.1,
        "memory_mb": 232
      }
    },
    {
      "group_name": "Project Navigation",
      "services": [
        "compass-mcp",
        "nx-mcp"
      ],
      "reason": "Rarely used navigation services",
      "recommendation": "Integrate into main file service or remove",
      "savings": {
        "containers": 2,
        "cpu_percent": 2.6,
        "memory_mb": 192
      }
    }
  ],
  "performance_impact": {
    "current_state": {
      "total_services": 21,
      "total_cpu_percent": 73.9,
      "total_memory_mb": 4968,
      "total_dependencies": 16
    },
    "optimized_state": {
      "total_services": 17,
      "total_cpu_percent": 67.30000000000001,
      "total_memory_mb": 4472,
      "total_dependencies": 13
    },
    "improvements": {
      "services_reduced": 4,
      "percentage_reduction": 19.0,
      "cpu_saved_percent": 6.6,
      "memory_saved_mb": 496,
      "network_complexity_reduction": "3 fewer inter-service dependencies",
      "startup_time_improvement": "~12s faster system startup",
      "container_overhead_reduction": "4 fewer containers to manage"
    },
    "services_to_remove": [
      "compass-mcp",
      "http_fetch",
      "nx-mcp",
      "memory-bank-mcp"
    ]
  },
  "detailed_service_analysis": {
    "files": {
      "purpose": "File system operations",
      "criticality": "HIGH",
      "usage_pattern": "CONSTANT",
      "resource_consumption": {
        "cpu_percent": 2.5,
        "memory_mb": 96,
        "response_time_ms": 15
      },
      "resource_score": 34.9,
      "value_score": 100.0,
      "value_per_resource_unit": 2.87,
      "dependencies": [],
      "dependency_count": 0
    },
    "http": {
      "purpose": "HTTP protocol operations",
      "criticality": "MEDIUM",
      "usage_pattern": "CONSTANT",
      "resource_consumption": {
        "cpu_percent": 2.1,
        "memory_mb": 64,
        "response_time_ms": 22
      },
      "resource_score": 27.84,
      "value_score": 70.0,
      "value_per_resource_unit": 2.51,
      "dependencies": [],
      "dependency_count": 0
    },
    "github": {
      "purpose": "GitHub API integration",
      "criticality": "MEDIUM",
      "usage_pattern": "BURST",
      "resource_consumption": {
        "cpu_percent": 1.8,
        "memory_mb": 96,
        "response_time_ms": 180
      },
      "resource_score": 31.2,
      "value_score": 50.0,
      "value_per_resource_unit": 1.6,
      "dependencies": [
        "http_fetch"
      ],
      "dependency_count": 1
    },
    "extended-memory": {
      "purpose": "Persistent memory storage",
      "criticality": "HIGH",
      "usage_pattern": "CONSTANT",
      "resource_consumption": {
        "cpu_percent": 3.8,
        "memory_mb": 256,
        "response_time_ms": 25
      },
      "resource_score": 64.1,
      "value_score": 100.0,
      "value_per_resource_unit": 1.56,
      "dependencies": [],
      "dependency_count": 0
    },
    "memory-bank-mcp": {
      "purpose": "Advanced memory management",
      "criticality": "HIGH",
      "usage_pattern": "SUSTAINED",
      "resource_consumption": {
        "cpu_percent": 3.2,
        "memory_mb": 256,
        "response_time_ms": 30
      },
      "resource_score": 58.2,
      "value_score": 90.0,
      "value_per_resource_unit": 1.55,
      "dependencies": [
        "extended-memory"
      ],
      "dependency_count": 1
    },
    "compass-mcp": {
      "purpose": "Project navigation",
      "criticality": "LOW",
      "usage_pattern": "BURST",
      "resource_consumption": {
        "cpu_percent": 1.1,
        "memory_mb": 64,
        "response_time_ms": 35
      },
      "resource_score": 18.1,
      "value_score": 26.0,
      "value_per_resource_unit": 1.44,
      "dependencies": [
        "files"
      ],
      "dependency_count": 1
    },
    "context7": {
      "purpose": "Documentation context retrieval",
      "criticality": "LOW",
      "usage_pattern": "BURST",
      "resource_consumption": {
        "cpu_percent": 1.2,
        "memory_mb": 64,
        "response_time_ms": 125
      },
      "resource_score": 20.9,
      "value_score": 26.0,
      "value_per_resource_unit": 1.24,
      "dependencies": [
        "files"
      ],
      "dependency_count": 1
    },
    "mcp_ssh": {
      "purpose": "SSH operations",
      "criticality": "LOW",
      "usage_pattern": "SPORADIC",
      "resource_consumption": {
        "cpu_percent": 0.3,
        "memory_mb": 24,
        "response_time_ms": 150
      },
      "resource_score": 8.4,
      "value_score": 10.0,
      "value_per_resource_unit": 1.19,
      "dependencies": [],
      "dependency_count": 0
    },
    "claude-task-runner": {
      "purpose": "Task isolation and execution",
      "criticality": "MEDIUM",
      "usage_pattern": "BURST",
      "resource_consumption": {
        "cpu_percent": 3.1,
        "memory_mb": 128,
        "response_time_ms": 35
      },
      "resource_score": 44.5,
      "value_score": 50.0,
      "value_per_resource_unit": 1.12,
      "dependencies": [
        "files"
      ],
      "dependency_count": 1
    },
    "postgres": {
      "purpose": "PostgreSQL operations",
      "criticality": "HIGH",
      "usage_pattern": "CONSTANT",
      "resource_consumption": {
        "cpu_percent": 4.2,
        "memory_mb": 512,
        "response_time_ms": 12
      },
      "resource_score": 93.44,
      "value_score": 100.0,
      "value_per_resource_unit": 1.07,
      "dependencies": [],
      "dependency_count": 0
    },
    "knowledge-graph-mcp": {
      "purpose": "Knowledge graph operations",
      "criticality": "MEDIUM",
      "usage_pattern": "BURST",
      "resource_consumption": {
        "cpu_percent": 2.8,
        "memory_mb": 192,
        "response_time_ms": 65
      },
      "resource_score": 48.5,
      "value_score": 50.0,
      "value_per_resource_unit": 1.03,
      "dependencies": [
        "neo4j"
      ],
      "dependency_count": 1
    },
    "claude-flow": {
      "purpose": "SPARC workflow orchestration",
      "criticality": "HIGH",
      "usage_pattern": "BURST",
      "resource_consumption": {
        "cpu_percent": 5.2,
        "memory_mb": 256,
        "response_time_ms": 45
      },
      "resource_score": 78.5,
      "value_score": 80.0,
      "value_per_resource_unit": 1.02,
      "dependencies": [
        "ruv-swarm",
        "extended-memory"
      ],
      "dependency_count": 2
    },
    "language-server": {
      "purpose": "Language server protocol",
      "criticality": "MEDIUM",
      "usage_pattern": "SUSTAINED",
      "resource_consumption": {
        "cpu_percent": 4.5,
        "memory_mb": 256,
        "response_time_ms": 55
      },
      "resource_score": 71.7,
      "value_score": 60.0,
      "value_per_resource_unit": 0.84,
      "dependencies": [
        "files"
      ],
      "dependency_count": 1
    },
    "sequentialthinking": {
      "purpose": "Multi-step reasoning",
      "criticality": "MEDIUM",
      "usage_pattern": "BURST",
      "resource_consumption": {
        "cpu_percent": 4.2,
        "memory_mb": 192,
        "response_time_ms": 85
      },
      "resource_score": 62.9,
      "value_score": 50.0,
      "value_per_resource_unit": 0.79,
      "dependencies": [
        "extended-memory"
      ],
      "dependency_count": 1
    },
    "ruv-swarm": {
      "purpose": "Multi-agent swarm coordination",
      "criticality": "HIGH",
      "usage_pattern": "SUSTAINED",
      "resource_consumption": {
        "cpu_percent": 8.3,
        "memory_mb": 512,
        "response_time_ms": 62
      },
      "resource_score": 135.44,
      "value_score": 90.0,
      "value_per_resource_unit": 0.66,
      "dependencies": [
        "claude-flow",
        "memory-bank-mcp"
      ],
      "dependency_count": 2
    },
    "http_fetch": {
      "purpose": "HTTP content fetching",
      "criticality": "LOW",
      "usage_pattern": "SPORADIC",
      "resource_consumption": {
        "cpu_percent": 0.8,
        "memory_mb": 48,
        "response_time_ms": 250
      },
      "resource_score": 17.8,
      "value_score": 10.0,
      "value_per_resource_unit": 0.56,
      "dependencies": [],
      "dependency_count": 0
    },
    "ddg": {
      "purpose": "DuckDuckGo search",
      "criticality": "LOW",
      "usage_pattern": "SPORADIC",
      "resource_consumption": {
        "cpu_percent": 0.5,
        "memory_mb": 32,
        "response_time_ms": 500
      },
      "resource_score": 18.2,
      "value_score": 10.0,
      "value_per_resource_unit": 0.55,
      "dependencies": [
        "http_fetch"
      ],
      "dependency_count": 1
    },
    "ultimatecoder": {
      "purpose": "Advanced coding assistance",
      "criticality": "MEDIUM",
      "usage_pattern": "BURST",
      "resource_consumption": {
        "cpu_percent": 6.5,
        "memory_mb": 384,
        "response_time_ms": 95
      },
      "resource_score": 105.3,
      "value_score": 50.0,
      "value_per_resource_unit": 0.47,
      "dependencies": [
        "files",
        "sequentialthinking"
      ],
      "dependency_count": 2
    },
    "nx-mcp": {
      "purpose": "Nx workspace management",
      "criticality": "LOW",
      "usage_pattern": "SPORADIC",
      "resource_consumption": {
        "cpu_percent": 1.5,
        "memory_mb": 128,
        "response_time_ms": 45
      },
      "resource_score": 28.7,
      "value_score": 10.0,
      "value_per_resource_unit": 0.35,
      "dependencies": [
        "files"
      ],
      "dependency_count": 1
    },
    "puppeteer-mcp (no longer in use)": {
      "purpose": "Web scraping",
      "criticality": "LOW",
      "usage_pattern": "BURST",
      "resource_consumption": {
        "cpu_percent": 7.8,
        "memory_mb": 640,
        "response_time_ms": 425
      },
      "resource_score": 150.5,
      "value_score": 26.0,
      "value_per_resource_unit": 0.17,
      "dependencies": [],
      "dependency_count": 0
    },
    "playwright-mcp": {
      "purpose": "Browser automation",
      "criticality": "LOW",
      "usage_pattern": "BURST",
      "resource_consumption": {
        "cpu_percent": 8.5,
        "memory_mb": 768,
        "response_time_ms": 350
      },
      "resource_score": 168.8,
      "value_score": 26.0,
      "value_per_resource_unit": 0.15,
      "dependencies": [],
      "dependency_count": 0
    }
  },
  "implementation_priority": {
    "immediate": [
      "Remove puppeteer-mcp (no longer in use) (duplicate of playwright-mcp)",
      "Remove mcp_ssh (unused, sporadic)",
      "Remove ddg (low value, sporadic usage)"
    ],
    "short_term": [
      "Merge http and http_fetch services",
      "Unify extended-memory and memory-bank-mcp",
      "Consolidate compass-mcp and nx-mcp into files service"
    ],
    "medium_term": [
      "Implement on-demand activation for low-usage services",
      "Create service pooling for burst-pattern services",
      "Optimize high-memory services (playwright-mcp)"
    ]
  },
  "cost_analysis": {
    "monthly_cost_current": 45.57,
    "monthly_cost_optimized": 41.13,
    "annual_savings": 53.99
  }
}