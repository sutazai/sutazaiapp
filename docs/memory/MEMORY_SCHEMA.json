{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://sutazai.com/schemas/cognitive-memory/v1.0.0",
  "title": "Cognitive Architecture Memory Schema",
  "description": "Comprehensive memory schema for scalable codebase cognitive architecture with hierarchical memory structures, semantic indexing, and intelligent retrieval",
  "type": "object",
  "version": "1.0.0",
  
  "definitions": {
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp with timezone"
    },
    
    "uuid": {
      "type": "string",
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
      "description": "UUID v4 identifier"
    },
    
    "importance_score": {
      "type": "number",
      "minimum": 1,
      "maximum": 10,
      "description": "Importance score for memory prioritization (1=lowest, 10=highest)"
    },
    
    "confidence_score": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Confidence score for memory reliability (0=uncertain, 1=certain)"
    },
    
    "file_reference": {
      "type": "object",
      "required": ["path", "line_start"],
      "properties": {
        "path": {
          "type": "string",
          "description": "Absolute file path"
        },
        "line_start": {
          "type": "integer",
          "minimum": 1,
          "description": "Starting line number"
        },
        "line_end": {
          "type": "integer",
          "minimum": 1,
          "description": "Ending line number (optional)"
        },
        "commit_hash": {
          "type": "string",
          "pattern": "^[0-9a-f]{7,40}$",
          "description": "Git commit hash for version tracking"
        },
        "content_hash": {
          "type": "string",
          "description": "SHA256 hash of the referenced content"
        }
      }
    },
    
    "code_relationship": {
      "type": "object",
      "required": ["type", "source", "target"],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "imports", "exports", "calls", "called_by", "extends", "implements",
            "depends_on", "dependency_of", "tests", "tested_by", "documents", 
            "documented_by", "references", "referenced_by", "modifies", "modified_by"
          ]
        },
        "source": {
          "$ref": "#/definitions/file_reference"
        },
        "target": {
          "$ref": "#/definitions/file_reference"
        },
        "strength": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Relationship strength (0=weak, 1=strong)"
        }
      }
    },
    
    "vector_embedding": {
      "type": "object",
      "required": ["model", "dimensions", "vector"],
      "properties": {
        "model": {
          "type": "string",
          "description": "Embedding model used (e.g., 'text-embedding-ada-002')"
        },
        "dimensions": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of dimensions in the vector"
        },
        "vector": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "Dense vector representation"
        },
        "sparse_indices": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Indices for sparse vector representation (optional)"
        },
        "sparse_values": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "Values for sparse vector representation (optional)"
        }
      }
    },
    
    "tag": {
      "type": "object",
      "required": ["name", "category"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "category": {
          "type": "string",
          "enum": [
            "language", "framework", "pattern", "domain", "feature",
            "error", "performance", "security", "architecture", "cognitive"
          ]
        },
        "weight": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 1,
          "description": "Tag relevance weight"
        }
      }
    },
    
    "memory_base": {
      "type": "object",
      "required": ["id", "created_at", "type", "importance"],
      "properties": {
        "id": {
          "$ref": "#/definitions/uuid"
        },
        "created_at": {
          "$ref": "#/definitions/timestamp"
        },
        "updated_at": {
          "$ref": "#/definitions/timestamp"
        },
        "accessed_at": {
          "$ref": "#/definitions/timestamp"
        },
        "access_count": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "type": {
          "type": "string",
          "enum": [
            "immediate", "working", "episodic", "semantic", "procedural",
            "long_term", "meta", "collective"
          ]
        },
        "importance": {
          "$ref": "#/definitions/importance_score"
        },
        "confidence": {
          "$ref": "#/definitions/confidence_score"
        },
        "ttl_seconds": {
          "type": "integer",
          "minimum": -1,
          "description": "Time to live in seconds (-1 for permanent)"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tag"
          }
        },
        "embeddings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vector_embedding"
          }
        },
        "compression": {
          "type": "object",
          "properties": {
            "algorithm": {
              "type": "string",
              "enum": ["none", "gzip", "brotli", "zstd", "lz4"]
            },
            "original_size": {
              "type": "integer",
              "minimum": 0
            },
            "compressed_size": {
              "type": "integer",
              "minimum": 0
            }
          }
        }
      }
    }
  },
  
  "properties": {
    "immediate_context": {
      "description": "Current conversation and active working memory",
      "type": "object",
      "allOf": [
        {"$ref": "#/definitions/memory_base"},
        {
          "properties": {
            "conversation_id": {
              "$ref": "#/definitions/uuid"
            },
            "session_id": {
              "$ref": "#/definitions/uuid"
            },
            "user_id": {
              "type": "string"
            },
            "content": {
              "type": "object",
              "required": ["text"],
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Raw text content"
                },
                "structured_data": {
                  "type": "object",
                  "description": "Any structured data associated with the memory"
                },
                "intent": {
                  "type": "string",
                  "description": "Detected user intent"
                },
                "entities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {"type": "string"},
                      "value": {"type": "string"},
                      "confidence": {"$ref": "#/definitions/confidence_score"}
                    }
                  }
                }
              }
            },
            "context_window": {
              "type": "object",
              "properties": {
                "tokens_used": {"type": "integer", "minimum": 0},
                "tokens_available": {"type": "integer", "minimum": 0},
                "compression_ratio": {"type": "number", "minimum": 0}
              }
            }
          }
        }
      ]
    },
    
    "session_memory": {
      "description": "Cross-conversation memory within the same session",
      "type": "object",
      "allOf": [
        {"$ref": "#/definitions/memory_base"},
        {
          "properties": {
            "session_id": {
              "$ref": "#/definitions/uuid"
            },
            "conversation_ids": {
              "type": "array",
              "items": {"$ref": "#/definitions/uuid"}
            },
            "session_summary": {
              "type": "string",
              "description": "AI-generated summary of the session"
            },
            "key_decisions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "decision": {"type": "string"},
                  "rationale": {"type": "string"},
                  "timestamp": {"$ref": "#/definitions/timestamp"},
                  "impact_score": {"$ref": "#/definitions/importance_score"}
                }
              }
            },
            "learned_patterns": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pattern": {"type": "string"},
                  "frequency": {"type": "integer", "minimum": 1},
                  "confidence": {"$ref": "#/definitions/confidence_score"}
                }
              }
            }
          }
        }
      ]
    },
    
    "long_term_memory": {
      "description": "Permanent knowledge and learned information",
      "type": "object",
      "allOf": [
        {"$ref": "#/definitions/memory_base"},
        {
          "properties": {
            "knowledge_type": {
              "type": "string",
              "enum": [
                "fact", "rule", "pattern", "procedure", "concept",
                "relationship", "constraint", "preference", "goal"
              ]
            },
            "domain": {
              "type": "string",
              "description": "Knowledge domain (e.g., 'backend', 'frontend', 'devops')"
            },
            "source": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["documentation", "code", "user_feedback", "analysis", "external"]
                },
                "reference": {"type": "string"},
                "authority_score": {"$ref": "#/definitions/confidence_score"}
              }
            },
            "validations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "timestamp": {"$ref": "#/definitions/timestamp"},
                  "result": {"type": "boolean"},
                  "method": {"type": "string"}
                }
              }
            },
            "expiry_policy": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["never", "time_based", "version_based", "usage_based"]
                },
                "value": {"type": "string"}
              }
            }
          }
        }
      ]
    },
    
    "episodic_memory": {
      "description": "Event sequences and temporal experiences",
      "type": "object",
      "allOf": [
        {"$ref": "#/definitions/memory_base"},
        {
          "properties": {
            "event_type": {
              "type": "string",
              "enum": [
                "code_change", "error_resolution", "deployment", "incident",
                "performance_optimization", "refactoring", "feature_implementation",
                "bug_fix", "configuration_change", "user_interaction"
              ]
            },
            "timeline": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["timestamp", "action", "state"],
                "properties": {
                  "timestamp": {"$ref": "#/definitions/timestamp"},
                  "action": {"type": "string"},
                  "actor": {"type": "string"},
                  "state": {
                    "type": "object",
                    "properties": {
                      "before": {"type": "object"},
                      "after": {"type": "object"},
                      "diff": {"type": "string"}
                    }
                  },
                  "outcome": {
                    "type": "string",
                    "enum": ["success", "failure", "partial", "pending"]
                  }
                }
              }
            },
            "causal_chain": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cause_id": {"$ref": "#/definitions/uuid"},
                  "effect_id": {"$ref": "#/definitions/uuid"},
                  "relationship_type": {"type": "string"},
                  "confidence": {"$ref": "#/definitions/confidence_score"}
                }
              }
            },
            "lessons_learned": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lesson": {"type": "string"},
                  "applicable_contexts": {"type": "array", "items": {"type": "string"}},
                  "prevention_strategy": {"type": "string"}
                }
              }
            }
          }
        }
      ]
    },
    
    "semantic_memory": {
      "description": "Facts, concepts, and relationships",
      "type": "object",
      "allOf": [
        {"$ref": "#/definitions/memory_base"},
        {
          "properties": {
            "concept": {
              "type": "string",
              "description": "The main concept or fact"
            },
            "definition": {
              "type": "string",
              "description": "Formal definition or description"
            },
            "relationships": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["target_concept", "relationship_type"],
                "properties": {
                  "target_concept": {"type": "string"},
                  "relationship_type": {
                    "type": "string",
                    "enum": [
                      "is_a", "part_of", "has_property", "causes", "prevents",
                      "requires", "conflicts_with", "similar_to", "opposite_of"
                    ]
                  },
                  "strength": {"$ref": "#/definitions/confidence_score"},
                  "bidirectional": {"type": "boolean", "default": false}
                }
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": true
            },
            "examples": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {"type": "string"},
                  "explanation": {"type": "string"},
                  "file_reference": {"$ref": "#/definitions/file_reference"}
                }
              }
            },
            "constraints": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {"type": "string"},
                  "expression": {"type": "string"},
                  "severity": {
                    "type": "string",
                    "enum": ["error", "warning", "info"]
                  }
                }
              }
            }
          }
        }
      ]
    },
    
    "procedural_memory": {
      "description": "How-to knowledge and automated procedures",
      "type": "object",
      "allOf": [
        {"$ref": "#/definitions/memory_base"},
        {
          "properties": {
            "procedure_name": {
              "type": "string"
            },
            "triggers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["event", "condition", "schedule", "manual"]
                  },
                  "expression": {"type": "string"}
                }
              }
            },
            "steps": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["order", "action"],
                "properties": {
                  "order": {"type": "integer", "minimum": 1},
                  "action": {"type": "string"},
                  "command": {"type": "string"},
                  "parameters": {"type": "object"},
                  "conditions": {
                    "type": "array",
                    "items": {"type": "string"}
                  },
                  "error_handling": {
                    "type": "object",
                    "properties": {
                      "retry_count": {"type": "integer", "minimum": 0},
                      "fallback_action": {"type": "string"},
                      "escalation": {"type": "string"}
                    }
                  },
                  "estimated_duration_ms": {"type": "integer", "minimum": 0}
                }
              }
            },
            "success_criteria": {
              "type": "array",
              "items": {"type": "string"}
            },
            "performance_metrics": {
              "type": "object",
              "properties": {
                "average_duration_ms": {"type": "number", "minimum": 0},
                "success_rate": {"type": "number", "minimum": 0, "maximum": 1},
                "last_execution": {"$ref": "#/definitions/timestamp"},
                "execution_count": {"type": "integer", "minimum": 0}
              }
            }
          }
        }
      ]
    },
    
    "meta_memory": {
      "description": "Memory about memory - tracking and optimization",
      "type": "object",
      "properties": {
        "memory_statistics": {
          "type": "object",
          "properties": {
            "total_memories": {"type": "integer", "minimum": 0},
            "by_type": {
              "type": "object",
              "additionalProperties": {"type": "integer", "minimum": 0}
            },
            "total_size_bytes": {"type": "integer", "minimum": 0},
            "compressed_size_bytes": {"type": "integer", "minimum": 0},
            "average_access_time_ms": {"type": "number", "minimum": 0},
            "cache_hit_rate": {"type": "number", "minimum": 0, "maximum": 1}
          }
        },
        "optimization_hints": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["index", "compression", "eviction", "consolidation"]
              },
              "target_memories": {
                "type": "array",
                "items": {"$ref": "#/definitions/uuid"}
              },
              "expected_improvement": {"type": "string"},
              "priority": {"$ref": "#/definitions/importance_score"}
            }
          }
        },
        "access_patterns": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pattern": {"type": "string"},
              "frequency": {"type": "integer", "minimum": 0},
              "typical_sequence": {
                "type": "array",
                "items": {"$ref": "#/definitions/uuid"}
              },
              "optimization_applied": {"type": "boolean"}
            }
          }
        }
      }
    },
    
    "collective_memory": {
      "description": "Shared team knowledge and organizational memory",
      "type": "object",
      "allOf": [
        {"$ref": "#/definitions/memory_base"},
        {
          "properties": {
            "contributors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "user_id": {"type": "string"},
                  "contribution_type": {"type": "string"},
                  "timestamp": {"$ref": "#/definitions/timestamp"}
                }
              }
            },
            "consensus_level": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Level of agreement among team members"
            },
            "visibility": {
              "type": "string",
              "enum": ["private", "team", "organization", "public"]
            },
            "review_status": {
              "type": "string",
              "enum": ["draft", "pending_review", "approved", "deprecated"]
            },
            "version_history": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "version": {"type": "string"},
                  "timestamp": {"$ref": "#/definitions/timestamp"},
                  "changes": {"type": "string"},
                  "author": {"type": "string"}
                }
              }
            }
          }
        }
      ]
    },
    
    "code_context": {
      "description": "Code-specific memory and relationships",
      "type": "object",
      "properties": {
        "file_memories": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["file_reference", "memory_ids"],
            "properties": {
              "file_reference": {"$ref": "#/definitions/file_reference"},
              "memory_ids": {
                "type": "array",
                "items": {"$ref": "#/definitions/uuid"}
              },
              "file_summary": {"type": "string"},
              "complexity_score": {"type": "number", "minimum": 0},
              "last_modified": {"$ref": "#/definitions/timestamp"},
              "modification_frequency": {"type": "number", "minimum": 0}
            }
          }
        },
        "dependency_graph": {
          "type": "array",
          "items": {"$ref": "#/definitions/code_relationship"}
        },
        "error_patterns": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "error_type": {"type": "string"},
              "frequency": {"type": "integer", "minimum": 0},
              "locations": {
                "type": "array",
                "items": {"$ref": "#/definitions/file_reference"}
              },
              "resolution_memory_id": {"$ref": "#/definitions/uuid"}
            }
          }
        },
        "performance_hotspots": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "location": {"$ref": "#/definitions/file_reference"},
              "metric_type": {"type": "string"},
              "value": {"type": "number"},
              "optimization_memory_id": {"$ref": "#/definitions/uuid"}
            }
          }
        }
      }
    },
    
    "user_context": {
      "description": "User preferences and interaction patterns",
      "type": "object",
      "properties": {
        "user_id": {"type": "string"},
        "preferences": {
          "type": "object",
          "properties": {
            "coding_style": {"type": "object"},
            "communication_style": {"type": "string"},
            "expertise_level": {
              "type": "string",
              "enum": ["beginner", "intermediate", "advanced", "expert"]
            },
            "preferred_languages": {
              "type": "array",
              "items": {"type": "string"}
            },
            "preferred_frameworks": {
              "type": "array",
              "items": {"type": "string"}
            }
          }
        },
        "interaction_history": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "timestamp": {"$ref": "#/definitions/timestamp"},
              "action_type": {"type": "string"},
              "satisfaction_score": {
                "type": "number",
                "minimum": 0,
                "maximum": 5
              }
            }
          }
        },
        "learned_behaviors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pattern": {"type": "string"},
              "response": {"type": "string"},
              "success_rate": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            }
          }
        }
      }
    },
    
    "indices": {
      "description": "Index configurations for fast retrieval",
      "type": "object",
      "properties": {
        "primary_indices": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "fields", "unique"],
            "properties": {
              "name": {"type": "string"},
              "fields": {
                "type": "array",
                "items": {"type": "string"}
              },
              "unique": {"type": "boolean"},
              "sparse": {"type": "boolean", "default": false}
            }
          }
        },
        "vector_indices": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "field", "algorithm"],
            "properties": {
              "name": {"type": "string"},
              "field": {"type": "string"},
              "algorithm": {
                "type": "string",
                "enum": ["hnsw", "annoy", "faiss", "scann"]
              },
              "parameters": {"type": "object"}
            }
          }
        },
        "full_text_indices": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "fields"],
            "properties": {
              "name": {"type": "string"},
              "fields": {
                "type": "array",
                "items": {"type": "string"}
              },
              "language": {"type": "string", "default": "english"},
              "analyzer": {"type": "string"}
            }
          }
        }
      }
    }
  },
  
  "required": ["immediate_context", "long_term_memory", "indices"],
  
  "additionalProperties": false
}