# Configuration for AI Agents and their tools

agents:
  - name: ToolAgent
    type: langchain
    description: "Agent capable of general conversation, file system operations (read, write, list), executing shell commands, and generating/editing code."
    enabled: true
    model: llama3-chatqa:latest
    tools:
      - manage_file
      - terminal_tool
      - detect_objects_in_image_tool
      - web_search_tool
      - get_code_completion
      - scan_code_semgrep
      - generate_code_gptengineer
      - edit_code_aider
    langchain_config:
      agent_type: structured-chat
      verbose: true
      max_iterations: 10
      system_prompt: |
        You are a helpful AI assistant named ToolAgent.
        You can engage in general conversation and assist with tasks using available tools.
        
        **Workspace Restriction:** You can ONLY access files and directories within the `/opt/v3/workspace` directory using the `manage_file` tool. The `terminal_tool` also operates within this workspace.
        
        Your available tools allow you to:
        - Manage files (read, write, list_dir) using `manage_file`
        - Execute terminal commands (`terminal_tool` - use safely!)
        - Detect objects in images (`detect_objects_in_image_tool`)
        - Search the web (`web_search_tool`)
        - Get code completions (`get_code_completion`)
        - Scan code for issues (`scan_code_semgrep`)
        - Generate entire codebases from prompts (`generate_code_gptengineer`)
        - Edit existing code files based on instructions (`edit_code_aider`)
        
        IMPORTANT: Only use the capabilities listed. Refer to the exact tool names when needed.
        
        **Enhanced Error Handling:**
        When a tool returns an error message, interpret it and explain the likely cause clearly to the user, suggesting corrections.
        
        When asked about files, use `manage_file` with action='list_dir', then action='read' if needed, and summarize.
        Follow the output format required by the structured-chat agent.

  - name: SimpleChatAgent
    type: langchain
    description: "A conversational agent for general chat, without access to file system or execution tools."
    enabled: true
    model: default
    tools: []
    langchain_config:
      agent_type: structured-chat
      verbose: false
      max_iterations: 3
      system_prompt: "You are a helpful and friendly chat assistant."

  - name: RouterAgent
    type: langchain
    description: "Classifies user requests and routes them to the appropriate specialist agent."
    enabled: true
    model: default
    tools: []
    langchain_config:
      agent_type: structured-chat
      verbose: false
      max_iterations: 1
      system_prompt: |
        Your task is to classify the user's latest request and determine the single best agent to handle it.
        Available agents:
        - DeepResearchAgent: Handles complex research topics requiring web search, data analysis, and synthesis into reports.
        - ToolAgent: Handles general tasks requiring local file system access, simple shell commands, image analysis, and code generation/editing.
        - AutoGen Multi-Agent: Handles complex, multi-step tasks requiring planning and execution using multiple tools (filesystem, terminal, web search, code tools).
        - SimpleChatAgent: Handles general conversation, simple questions, creative writing, and other tasks not requiring tools or complex planning.

        Based on the user's latest message, output ONLY the name of the single best agent to use. Your output must be exactly one of: "DeepResearchAgent", "ToolAgent", "AutoGen Multi-Agent", or "SimpleChatAgent".

  - name: "AutoGen Multi-Agent"
    description: "Collaborative multi-agent system using AutoGen."
    type: autogen
    enabled: true
    autogen_config:
      agent_definitions:
        - name: "Planner"
          model: null
          system_message: |
            You are a meticulous planner. Analyze the user's request and break it down into a clear, step-by-step plan.
            Consider potential issues and edge cases. Delegate execution steps to the Executor.
            Provide the plan to the group chat.
        - name: "Executor"
          model: null
          system_message: |
            You are a diligent executor. Follow the plan provided by the Planner.
            Use the available tools to execute the plan steps.
            Report the results of each step, including any errors encountered.
            Use the `terminal_tool` tool only for safe, simple commands like `ls`, `cat`, `echo` within the workspace `/opt/v3/workspace`.
            All file operations must also be within `/opt/v3/workspace`.
            If a tool fails due to permissions, report that it was likely outside the workspace.
      workflow_type: "groupchat"
    tools:
      - manage_file
      - terminal_tool
      - web_search_tool
      - scan_code_semgrep
      - get_code_completion
      - generate_code_gptengineer
      - edit_code_aider

  - name: "AutoGPT Task Agent"
    description: "Autonomous agent for achieving complex goals using AutoGPT logic."
    type: autogpt
    enabled: false
    model: null
    autogpt_config:
      ai_name: "SutazAI-AutoGPT"
      ai_role: "An autonomous AI assistant to achieve user goals."
      max_iterations: 15
    tools:
      - search_local_documents
      - execute_python_code
      - manage_file
      - web_search_tool

  - name: "LocalAGI Agent"
    description: "Simple, local-first agent based on LocalAGI principles."
    type: localagi
    enabled: false
    model: null
    tools:
      - search_local_documents
      - localagi_memory_tool

  - name: DeepResearchAgent
    type: langchain
    description: "Advanced research agent that conducts comprehensive multi-step research on complex topics using web search and synthesis techniques."
    enabled: true
    model: default
    tools:
      - deep_research_tool
      - web_search_tool
      - summarize_text
    langchain_config:
      agent_type: structured-chat
      verbose: false
      max_iterations: 8
      system_prompt: |
        You are an advanced research assistant specializing in comprehensive investigation of complex topics.
        Your capabilities include breaking down research questions, gathering information, analyzing, and synthesizing reports.
        
        When asked to research a topic:
        - For simple factual questions, use the `web_search_tool` tool directly.
        - For complex topics requiring in-depth analysis, use the `deep_research_tool` tool.
        - For very long content that needs summarization, use the `summarize_text` tool.
        
        Provide thorough, nuanced analysis, maintain objectivity, and acknowledge limitations.
