# Advanced AGI Orchestration Configuration
# Configuration for the AGI orchestration layer coordinating 90+ agents

version: "2.0"

# Orchestration Layer Settings
orchestration:
  name: "SutazAI AGI Orchestration Layer"
  version: "1.0.0"
  state: "active"
  
  # Core parameters
  parameters:
    max_concurrent_tasks: 100
    task_timeout_default: 3600  # 1 hour
    agent_health_check_interval: 30
    performance_optimization_interval: 300
    meta_learning_interval: 600
    safety_monitoring_interval: 15
    emergent_behavior_detection_interval: 60
    
  # Task complexity thresholds
  complexity_thresholds:
    trivial:
      max_duration: 30
      max_agents: 1
      resource_limit: "low"
    simple:
      max_duration: 120
      max_agents: 1
      resource_limit: "low"
    moderate:
      max_duration: 600
      max_agents: 2
      resource_limit: "medium"
    complex:
      max_duration: 1800
      max_agents: 5
      resource_limit: "high"
    expert:
      max_duration: 3600
      max_agents: 8
      resource_limit: "high"
    emergent:
      max_duration: 7200
      max_agents: 15
      resource_limit: "very_high"

# Communication Infrastructure
communication:
  bus_type: "redis"
  redis:
    host: "redis"
    port: 6379
    db: 1  # Use db 1 for AGI orchestration
    password: null
    ssl: false
    
  channels:
    task_requests: "agi:tasks:requests"
    task_updates: "agi:tasks:updates"
    task_completions: "agi:tasks:completions"
    agent_heartbeats: "agi:agents:heartbeats"
    agent_status: "agi:agents:status"
    consensus_votes: "agi:consensus:votes"
    emergent_behaviors: "agi:emergent:behaviors"
    coordination_events: "agi:coordination:events"
    meta_learning: "agi:meta:learning"
    safety_alerts: "agi:safety:alerts"
    performance_metrics: "agi:performance:metrics"
    
  message_retention:
    default: 3600  # 1 hour
    critical: 86400  # 24 hours
    audit: 604800  # 7 days

# Agent Registry and Classification
agents:
  # Core Infrastructure Agents
  infrastructure_tier:
    - agent_id: "infrastructure-devops-manager"
      name: "Infrastructure DevOps Manager"
      type: "system"
      priority: "critical"
      capabilities:
        - "docker_management"
        - "deployment_automation"
        - "health_monitoring"
        - "resource_optimization"
        - "infrastructure_provisioning"
      endpoints:
        api: "http://sutazai-devops-manager:8080"
        health: "http://sutazai-devops-manager:8080/health"
      resource_limits:
        cpu: "2.0"
        memory: "4G"
        max_concurrent_tasks: 10
      specialization_weights:
        deployment: 0.9
        infrastructure: 0.9
        monitoring: 0.8
        automation: 0.9
    
    - agent_id: "hardware-resource-optimizer"
      name: "Hardware Resource Optimizer"
      type: "system"
      priority: "high"
      capabilities:
        - "resource_monitoring"
        - "performance_optimization"
        - "capacity_planning"
        - "bottleneck_detection"
        - "hardware_analysis"
      endpoints:
        api: "http://sutazai-hardware-optimizer:8082"
        health: "http://sutazai-hardware-optimizer:8082/health"
      resource_limits:
        cpu: "1.5"
        memory: "3G"
        max_concurrent_tasks: 8
      specialization_weights:
        optimization: 0.9
        monitoring: 0.8
        analysis: 0.8
        performance: 0.9

  # AI/ML Specialized Agents
  ai_ml_tier:
    - agent_id: "ollama-integration-specialist"
      name: "Ollama Integration Specialist"
      type: "model_management"
      priority: "critical"
      capabilities:
        - "model_loading"
        - "model_optimization"
        - "inference_management"
        - "model_routing"
        - "model_deployment"
      endpoints:
        api: "http://sutazai-ollama-specialist:8081"
        health: "http://sutazai-ollama-specialist:8081/health"
      resource_limits:
        cpu: "3.0"
        memory: "8G"
        max_concurrent_tasks: 15
      specialization_weights:
        model_management: 0.95
        optimization: 0.8
        deployment: 0.7
    
    - agent_id: "senior-ai-engineer"
      name: "Senior AI Engineer"
      type: "development"
      priority: "high"
      capabilities:
        - "ml_architecture_design"
        - "rag_implementation"
        - "model_training"
        - "ai_system_integration"
        - "neural_network_design"
      endpoints:
        api: "http://sutazai-ai-engineer:8083"
        health: "http://sutazai-ai-engineer:8083/health"
      resource_limits:
        cpu: "2.5"
        memory: "6G"
        max_concurrent_tasks: 12
      specialization_weights:
        ai_development: 0.95
        architecture: 0.9
        integration: 0.8

  # Development Agents
  development_tier:
    - agent_id: "senior-backend-developer"
      name: "Senior Backend Developer"
      type: "development"
      priority: "high"
      capabilities:
        - "api_development"
        - "microservices_architecture"
        - "database_design"
        - "backend_optimization"
        - "system_integration"
      resource_limits:
        cpu: "2.0"
        memory: "4G"
        max_concurrent_tasks: 10
      specialization_weights:
        backend_development: 0.9
        api_design: 0.9
        database: 0.8
    
    - agent_id: "senior-frontend-developer"
      name: "Senior Frontend Developer"
      type: "development"
      priority: "high"
      capabilities:
        - "ui_development"
        - "streamlit_apps"
        - "data_visualization"
        - "responsive_design"
        - "user_experience"
      resource_limits:
        cpu: "1.5"
        memory: "3G"
        max_concurrent_tasks: 8
      specialization_weights:
        frontend_development: 0.9
        ui_design: 0.9
        visualization: 0.8

  # Orchestration and Coordination Agents
  coordination_tier:
    - agent_id: "ai-agent-orchestrator"
      name: "AI Agent Orchestrator"
      type: "orchestration"
      priority: "critical"
      capabilities:
        - "task_distribution"
        - "agent_coordination"
        - "workflow_management"
        - "load_balancing"
        - "resource_allocation"
      resource_limits:
        cpu: "2.0"
        memory: "4G"
        max_concurrent_tasks: 50
      specialization_weights:
        orchestration: 0.95
        coordination: 0.9
        workflow_management: 0.9
    
    - agent_id: "task-assignment-coordinator"
      name: "Task Assignment Coordinator"
      type: "orchestration"
      priority: "high"
      capabilities:
        - "task_analysis"
        - "agent_matching"
        - "priority_management"
        - "workload_distribution"
        - "optimization"
      resource_limits:
        cpu: "1.5"
        memory: "3G"
        max_concurrent_tasks: 30
      specialization_weights:
        task_management: 0.9
        optimization: 0.8
        coordination: 0.8

  # Quality Assurance and Testing
  qa_tier:
    - agent_id: "testing-qa-validator"
      name: "Testing QA Validator"
      type: "quality"
      priority: "medium"
      capabilities:
        - "automated_testing"
        - "integration_testing"
        - "performance_testing"
        - "security_testing"
        - "validation"
      resource_limits:
        cpu: "2.0"
        memory: "4G"
        max_concurrent_tasks: 12
      specialization_weights:
        testing: 0.9
        validation: 0.9
        quality_assurance: 0.8

  # Security Agents
  security_tier:
    - agent_id: "security-pentesting-specialist"
      name: "Security Pentesting Specialist"
      type: "security"
      priority: "high"
      capabilities:
        - "vulnerability_scanning"
        - "penetration_testing"
        - "security_auditing"
        - "compliance_validation"
        - "threat_analysis"
      resource_limits:
        cpu: "2.5"
        memory: "5G"
        max_concurrent_tasks: 8
      specialization_weights:
        security: 0.95
        testing: 0.8
        compliance: 0.8

# Task Routing and Execution Strategies
task_routing:
  # Default routing rules
  default_rules:
    - pattern: "deploy.*|deployment.*"
      agents: ["infrastructure-devops-manager", "deployment-automation-master"]
      strategy: "sequential"
      priority_boost: 1.2
    
    - pattern: "test.*|testing.*|validate.*"
      agents: ["testing-qa-validator"]
      strategy: "single"
      priority_boost: 1.0
    
    - pattern: "security.*|vulnerability.*|audit.*"
      agents: ["security-pentesting-specialist", "kali-security-specialist"]
      strategy: "parallel"
      priority_boost: 1.3
    
    - pattern: "ai.*|ml.*|model.*|neural.*"
      agents: ["senior-ai-engineer", "ollama-integration-specialist"]
      strategy: "collaborative"
      priority_boost: 1.4
    
    - pattern: "optimize.*|performance.*|resource.*"
      agents: ["hardware-resource-optimizer", "context-optimization-engineer"]
      strategy: "sequential"
      priority_boost: 1.1
    
    - pattern: "backend.*|api.*|service.*"
      agents: ["senior-backend-developer"]
      strategy: "single"
      priority_boost: 1.0
    
    - pattern: "frontend.*|ui.*|interface.*"
      agents: ["senior-frontend-developer"]
      strategy: "single"
      priority_boost: 1.0

  # Complexity-based routing
  complexity_routing:
    trivial:
      max_agents: 1
      preferred_strategy: "single"
      timeout_multiplier: 1.0
    simple:
      max_agents: 1
      preferred_strategy: "single"
      timeout_multiplier: 1.0
    moderate:
      max_agents: 3
      preferred_strategy: "sequential"
      timeout_multiplier: 1.5
    complex:
      max_agents: 5
      preferred_strategy: "parallel"
      timeout_multiplier: 2.0
    expert:
      max_agents: 8
      preferred_strategy: "collaborative"
      timeout_multiplier: 3.0
    emergent:
      max_agents: 15
      preferred_strategy: "emergent"
      timeout_multiplier: 4.0

# Consensus Mechanisms
consensus:
  # Voting parameters
  voting:
    minimum_votes: 3
    consensus_threshold: 0.7  # 70% agreement required
    confidence_weight: 0.3
    expertise_weight: 0.4
    performance_weight: 0.3
    
  # Aggregation methods
  aggregation:
    numerical: "weighted_average"
    categorical: "majority_vote"
    confidence_threshold: 0.6
    
  # Timeout settings
  timeouts:
    vote_collection: 300  # 5 minutes
    consensus_calculation: 60  # 1 minute
    finalization: 120  # 2 minutes

# Emergent Behavior Detection
emergent_behavior:
  # Detection parameters
  detection:
    pattern_window: 3600  # 1 hour
    minimum_participants: 3
    emergence_threshold: 0.7
    impact_threshold: 0.5
    
  # Pattern types to monitor
  pattern_types:
    - "swarm_coordination"
    - "adaptive_learning"
    - "self_optimization"
    - "collective_intelligence"
    - "emergent_specialization"
    - "dynamic_collaboration"
    
  # Risk assessment
  risk_assessment:
    high_risk_threshold: 0.8
    medium_risk_threshold: 0.5
    monitoring_duration: 86400  # 24 hours
    
  # Mitigation strategies
  mitigation:
    high_risk:
      - "increase_monitoring"
      - "limit_participants"
      - "manual_oversight"
    medium_risk:
      - "log_detailed_metrics"
      - "periodic_review"
    low_risk:
      - "standard_monitoring"

# Meta-Learning Configuration
meta_learning:
  # Learning parameters
  parameters:
    learning_rate: 0.01
    adaptation_threshold: 0.8
    pattern_memory_size: 10000
    optimization_window: 86400  # 24 hours
    
  # Pattern recognition
  pattern_recognition:
    minimum_samples: 10
    confidence_threshold: 0.7
    similarity_threshold: 0.8
    
  # Optimization targets
  optimization_targets:
    - "task_success_rate"
    - "agent_utilization"
    - "response_time"
    - "resource_efficiency"
    - "coordination_effectiveness"
    
  # Adaptation strategies
  adaptation:
    parameter_adjustment: true
    strategy_modification: true
    agent_reallocation: true
    workflow_optimization: true

# Resource Management
resource_management:
  # Allocation policies
  allocation:
    default_cpu_limit: "1.0"
    default_memory_limit: "2G"
    emergency_reserve: 0.2  # 20% reserve capacity
    
  # Scaling parameters
  scaling:
    scale_up_threshold: 0.8
    scale_down_threshold: 0.3
    scaling_cooldown: 300  # 5 minutes
    max_scale_factor: 3.0
    
  # Load balancing
  load_balancing:
    algorithm: "least_loaded"
    rebalance_threshold: 0.3
    max_redistribution: 0.5
    
  # Resource monitoring
  monitoring:
    cpu_alert_threshold: 0.9
    memory_alert_threshold: 0.9
    disk_alert_threshold: 0.8
    network_alert_threshold: 0.8

# Safety and Security
safety:
  # Safety thresholds
  thresholds:
    agent_failure_rate: 0.2  # 20% max failure rate
    task_failure_rate: 0.3   # 30% max failure rate
    response_time_limit: 10.0  # 10 seconds max
    resource_usage_limit: 0.95  # 95% max usage
    
  # Monitoring intervals
  monitoring:
    critical_check_interval: 15
    warning_check_interval: 60
    info_check_interval: 300
    
  # Emergency procedures
  emergency:
    auto_shutdown_threshold: 0.5  # 50% critical failures
    emergency_contact: null
    backup_systems: []
    
  # Anomaly detection
  anomaly_detection:
    z_score_threshold: 2.0
    baseline_window: 1000  # samples
    alert_threshold: 3.0

# Performance Optimization
performance:
  # Optimization targets
  targets:
    task_success_rate: 0.95
    avg_response_time: 2.0
    agent_utilization: 0.8
    system_availability: 0.99
    
  # Optimization intervals
  intervals:
    real_time: 30      # seconds
    short_term: 300    # 5 minutes
    medium_term: 1800  # 30 minutes
    long_term: 86400   # 24 hours
    
  # Optimization strategies
  strategies:
    - "load_balancing"
    - "agent_reallocation"
    - "task_prioritization"
    - "resource_optimization"
    - "workflow_improvement"

# Monitoring and Observability
monitoring:
  # Metrics collection
  metrics:
    collection_interval: 30
    retention_period: 604800  # 7 days
    high_resolution_period: 3600  # 1 hour
    
  # Health checks
  health_checks:
    agent_health_interval: 30
    system_health_interval: 60
    deep_health_interval: 300
    
  # Alerting
  alerting:
    alert_channels:
      - "logs"
      - "metrics"
      - "events"
    severity_levels:
      - "critical"
      - "warning"
      - "info"
    
  # Dashboard metrics
  dashboard_metrics:
    - "agent_count"
    - "active_tasks"
    - "success_rate"
    - "response_time"
    - "resource_utilization"
    - "emergent_behaviors"
    - "system_health"

# Integration Points
integrations:
  # External services
  external_services:
    mcp_server:
      enabled: true
      endpoint: "http://mcp-server:8100"
      timeout: 30
      retry_attempts: 3
      
    ollama:
      enabled: true
      endpoint: "http://ollama:11434"
      timeout: 60
      models:
        default: "tinyllama:latest"
        available:
          - "tinyllama:latest"      # Default - 1GB RAM
          - "mistral:7b-q4_K_M"    # Phase 1 - 4.2GB RAM
          - "deepseek-coder:6.7b"  # Phase 2 (future)
          - "qwen3:8b"             # Phase 3 (future)
        
    prometheus:
      enabled: true
      endpoint: "http://prometheus:9090"
      scrape_interval: 15
      
    grafana:
      enabled: true
      endpoint: "http://grafana:3000"
      
    redis:
      enabled: true
      endpoint: "redis:6379"
      
    postgres:
      enabled: true
      endpoint: "postgres:5432"
      database: "sutazai"

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # Log destinations
  destinations:
    console: true
    file: true
    syslog: false
    
  # Log retention
  retention:
    max_size: "100MB"
    backup_count: 10
    rotation: "daily"
    
  # Structured logging
  structured:
    enabled: true
    format: "json"
    include_trace: true

# Data Persistence
data_persistence:
  # Storage paths
  paths:
    orchestration_data: "/opt/sutazaiapp/data/agi_orchestration"
    agent_data: "/opt/sutazaiapp/data/agents"
    task_data: "/opt/sutazaiapp/data/tasks"
    metrics_data: "/opt/sutazaiapp/data/metrics"
    
  # Backup configuration
  backup:
    enabled: true
    interval: 3600  # 1 hour
    retention: 168  # 7 days
    compression: true
    
  # Cleanup policies
  cleanup:
    completed_tasks_retention: 86400  # 24 hours
    failed_tasks_retention: 604800    # 7 days
    metrics_retention: 2592000        # 30 days
    logs_retention: 1209600           # 14 days