{
  "services": [
    {
      "id": "backend-1",
      "name": "backend",
      "tags": ["api", "core", "rest", "primary"],
      "address": "backend",
      "port": 8000,
      "meta": {
        "version": "v40",
        "type": "backend-api",
        "environment": "production"
      },
      "check": {
        "http": "http://backend:8000/health",
        "interval": "15s",
        "timeout": "10s"
      },
      "weights": {
        "passing": 10,
        "warning": 1
      }
    },
    {
      "id": "frontend-1",
      "name": "frontend",
      "tags": ["ui", "streamlit", "web", "primary"],
      "address": "frontend",
      "port": 8501,
      "meta": {
        "version": "v40",
        "type": "web-interface",
        "framework": "streamlit"
      },
      "check": {
        "http": "http://frontend:8501/healthz",
        "interval": "30s",
        "timeout": "10s"
      },
      "weights": {
        "passing": 10,
        "warning": 1
      }
    },
    {
      "id": "postgres-1",
      "name": "postgres",
      "tags": ["database", "primary", "postgresql"],
      "address": "postgres",
      "port": 5432,
      "meta": {
        "version": "16.3",
        "type": "primary-database"
      },
      "check": {
        "tcp": "postgres:5432",
        "interval": "10s",
        "timeout": "5s"
      }
    },
    {
      "id": "redis-1",
      "name": "redis",
      "tags": ["cache", "storage", "pubsub", "session"],
      "address": "redis",
      "port": 6379,
      "meta": {
        "version": "7.2",
        "type": "cache-store"
      },
      "check": {
        "tcp": "redis:6379",
        "interval": "10s",
        "timeout": "5s"
      }
    },
    {
      "id": "neo4j-1",
      "name": "neo4j",
      "tags": ["database", "graph", "knowledge"],
      "address": "neo4j",
      "port": 7687,
      "meta": {
        "version": "5.13",
        "type": "graph-database"
      },
      "check": {
        "tcp": "neo4j:7687",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "ollama-1",
      "name": "ollama",
      "tags": ["ai", "llm", "inference", "core"],
      "address": "ollama",
      "port": 11434,
      "meta": {
        "version": "latest",
        "models": "tinyllama,deepseek-r1:8b,qwen2.5-coder:7b,codellama:7b",
        "type": "llm-inference"
      },
      "check": {
        "http": "http://ollama:11434/api/tags",
        "interval": "30s",
        "timeout": "10s"
      },
      "weights": {
        "passing": 10,
        "warning": 1
      }
    },
    {
      "id": "chromadb-1",
      "name": "chromadb",
      "tags": ["ai", "vectordb", "storage", "embeddings"],
      "address": "chromadb",
      "port": 8000,
      "meta": {
        "version": "0.5.0",
        "type": "vector-database"
      },
      "check": {
        "http": "http://chromadb:8000/api/v1/heartbeat",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "qdrant-1",
      "name": "qdrant",
      "tags": ["ai", "vectordb", "storage", "embeddings"],
      "address": "qdrant",
      "port": 6333,
      "meta": {
        "version": "1.9.2",
        "type": "vector-database"
      },
      "check": {
        "http": "http://qdrant:6333/health",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "faiss-1",
      "name": "faiss",
      "tags": ["ai", "vectordb", "storage", "similarity"],
      "address": "faiss",
      "port": 8000,
      "meta": {
        "version": "latest",
        "type": "vector-search"
      },
      "check": {
        "http": "http://faiss:8000/health",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "rabbitmq-1",
      "name": "rabbitmq",
      "tags": ["queue", "messaging", "amqp", "agents"],
      "address": "rabbitmq",
      "port": 5672,
      "meta": {
        "version": "3.12",
        "type": "message-queue"
      },
      "check": {
        "tcp": "rabbitmq:5672",
        "interval": "10s",
        "timeout": "5s"
      }
    },
    {
      "id": "autogpt-1",
      "name": "autogpt",
      "tags": ["agent", "autonomous", "task-execution"],
      "address": "autogpt",
      "port": 8080,
      "meta": {
        "version": "latest",
        "type": "ai-agent",
        "capability": "autonomous-tasks"
      },
      "check": {
        "http": "http://autogpt:8080/health",
        "interval": "60s",
        "timeout": "15s"
      }
    },
    {
      "id": "crewai-1",
      "name": "crewai",
      "tags": ["agent", "collaborative", "multi-agent"],
      "address": "crewai",
      "port": 8080,
      "meta": {
        "version": "latest",
        "type": "ai-agent",
        "capability": "collaborative-tasks"
      },
      "check": {
        "http": "http://crewai:8080/health",
        "interval": "60s",
        "timeout": "15s"
      }
    },
    {
      "id": "letta-1",
      "name": "letta",
      "tags": ["agent", "memory", "conversational"],
      "address": "letta",
      "port": 8080,
      "meta": {
        "version": "latest",
        "type": "ai-agent",
        "capability": "memory-management"
      },
      "check": {
        "http": "http://letta:8080/health",
        "interval": "60s",
        "timeout": "15s"
      }
    },
    {
      "id": "aider-1",
      "name": "aider",
      "tags": ["agent", "code", "development"],
      "address": "aider",
      "port": 8080,
      "meta": {
        "version": "latest",
        "type": "ai-agent",
        "capability": "code-assistance"
      },
      "check": {
        "http": "http://aider:8080/health",
        "interval": "60s",
        "timeout": "15s"
      }
    },
    {
      "id": "langflow-1",
      "name": "langflow",
      "tags": ["workflow", "low-code", "ai"],
      "address": "langflow",
      "port": 7860,
      "meta": {
        "version": "latest",
        "type": "workflow-engine"
      },
      "check": {
        "http": "http://langflow:7860/health",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "flowise-1",
      "name": "flowise",
      "tags": ["workflow", "low-code", "ai"],
      "address": "flowise",
      "port": 3000,
      "meta": {
        "version": "latest",
        "type": "workflow-engine"
      },
      "check": {
        "http": "http://flowise:3000/api/v1/ping",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "dify-1",
      "name": "dify",
      "tags": ["workflow", "ai", "apps"],
      "address": "dify",
      "port": 5000,
      "meta": {
        "version": "latest",
        "type": "ai-app-platform"
      },
      "check": {
        "http": "http://dify:5000/health",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "n8n-1",
      "name": "n8n",
      "tags": ["workflow", "automation", "integration"],
      "address": "n8n",
      "port": 5678,
      "meta": {
        "version": "latest",
        "type": "workflow-automation"
      },
      "check": {
        "http": "http://n8n:5678/healthz",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "prometheus-1",
      "name": "prometheus",
      "tags": ["monitoring", "metrics", "observability"],
      "address": "prometheus",
      "port": 9090,
      "meta": {
        "version": "latest",
        "type": "metrics-collector"
      },
      "check": {
        "http": "http://prometheus:9090/-/healthy",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "grafana-1",
      "name": "grafana",
      "tags": ["monitoring", "visualization", "dashboard"],
      "address": "grafana",
      "port": 3000,
      "meta": {
        "version": "latest",
        "type": "visualization"
      },
      "check": {
        "http": "http://grafana:3000/api/health",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "mcp-server-1",
      "name": "mcp-server",
      "tags": ["mcp", "communication", "protocol"],
      "address": "mcp-server",
      "port": 8080,
      "meta": {
        "version": "latest",
        "type": "communication-server"
      },
      "check": {
        "http": "http://mcp-server:8080/health",
        "interval": "30s",
        "timeout": "10s"
      }
    },
    {
      "id": "health-monitor-1",
      "name": "health-monitor",
      "tags": ["monitoring", "health", "system"],
      "address": "health-monitor",
      "port": 8000,
      "meta": {
        "version": "latest",
        "type": "health-checker"
      },
      "check": {
        "http": "http://health-monitor:8000/health",
        "interval": "30s",
        "timeout": "10s"
      }
    }
  ]
}