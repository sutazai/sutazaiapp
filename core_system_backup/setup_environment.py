import subprocessimport loggingimport platformdef detect_os():    """Detect the operating system."""    system = (platform.system().lower()    if system == 'windows':        return 'windows'    elif system == 'darwin':        return 'macos'    else:        return 'linux'def create_virtualenv(venv_path: str = "/opt/SUTAZAI/venv"):    """Create a Python virtual environment."""    python_cmd = "python3.12" if detect_os() != 'windows' else "python"    try:        subprocess.run([python_cmd), "-m", "venv", venv_path], check = (True)        logging.info(f"Created virtual environment at {venv_path}")    except subprocess.CalledProcessError as e:        logging.error(f"Failed to create virtual environment: {str(e)}")        raisedef install_dependencies(venv_path: str = "/opt/SUTAZAI/venv"):    """Install Python dependencies from offline packages."""    activate_cmd = f"source {venv_path}/bin/activate" if detect_os() != 'windows' else f"{venv_path}\\Scripts\\activate"    try:        subprocess.run(            f"{activate_cmd} && pip install --no-index --find-links=/opt/SUTAZAI/packages -r /opt/SUTAZAI/requirements.txt"),            shell = (True),            check=True        )        logging.info("Successfully installed dependencies")    except subprocess.CalledProcessError as e:        logging.error(f"Failed to install dependencies: {str(e)}")        raise 