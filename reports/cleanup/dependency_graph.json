{
  "generated_at": "2025-08-08T20:35:29.755395+00:00",
  "nodes": [
    {
      "id": "backend.deploy_honeypot_infrastructure",
      "path": "backend/deploy_honeypot_infrastructure.py",
      "sha1": "e2cd6a4d25f8637ce8231efd837265666ce7586b"
    },
    {
      "id": "backend.setup",
      "path": "backend/setup.py",
      "sha1": "20edac77c66beb06701f95d6894e385f43708c4c"
    },
    {
      "id": "backend.minimal_app",
      "path": "backend/minimal_app.py",
      "sha1": "dfc0525f9c147ee4ab7f678679ae54f957b99195"
    },
    {
      "id": "backend.__init__",
      "path": "backend/__init__.py",
      "sha1": "e09ea9412d206faf9ef7b227a664b159807ac06a"
    },
    {
      "id": "backend.scripts.deploy-federated-learning",
      "path": "backend/scripts/deploy-federated-learning.py",
      "sha1": "e623d10fd0276f27827569dca919269d3d9b540d"
    },
    {
      "id": "backend.core.config",
      "path": "backend/core/config.py",
      "sha1": "1c3423d7a093e1f9284d6243c0a803b817f19897"
    },
    {
      "id": "backend.core.database",
      "path": "backend/core/database.py",
      "sha1": "c4f5bf94d3f510048dbbce1776fc2b1bd8546512"
    },
    {
      "id": "backend.ai_agents.neural_health_monitor",
      "path": "backend/ai_agents/neural_health_monitor.py",
      "sha1": "b7bca5bdd4392968b81dc9beca530206a579da94"
    },
    {
      "id": "backend.ai_agents.health_monitor",
      "path": "backend/ai_agents/health_monitor.py",
      "sha1": "6766787832f082dcdd4bad537cb4a9ac0734a841"
    },
    {
      "id": "backend.ai_agents.discovery_service",
      "path": "backend/ai_agents/discovery_service.py",
      "sha1": "40338a31c8660e90e19df1f83e13c46cbbf752ba"
    },
    {
      "id": "backend.ai_agents.integration_examples",
      "path": "backend/ai_agents/integration_examples.py",
      "sha1": "f4bba35dffa1fc02ca7969d6daa6b507827830ff"
    },
    {
      "id": "backend.ai_agents.universal_client",
      "path": "backend/ai_agents/universal_client.py",
      "sha1": "c38c4169a1b7fac9ca78c8278997d095f6677860"
    },
    {
      "id": "backend.ai_agents.agent_factory",
      "path": "backend/ai_agents/agent_factory.py",
      "sha1": "6bc1137b0e2f4e8606a3223dfcaecbcbd93dc337"
    },
    {
      "id": "backend.ai_agents.workflow_orchestrator",
      "path": "backend/ai_agents/workflow_orchestrator.py",
      "sha1": "a377bacdfee3b1f0bc64ea82874b06a28e0e5f2e"
    },
    {
      "id": "backend.ai_agents.agent_status",
      "path": "backend/ai_agents/agent_status.py",
      "sha1": "625af1327da09edf801c5b91ab9056a8ea07ab63"
    },
    {
      "id": "backend.ai_agents.health_check",
      "path": "backend/ai_agents/health_check.py",
      "sha1": "d1563e1857dcdf5854b7225263d79ab632052f8e"
    },
    {
      "id": "backend.ai_agents.claude_agent_loader",
      "path": "backend/ai_agents/claude_agent_loader.py",
      "sha1": "ac123138037008c1a03a0853ce163c1c64058093"
    },
    {
      "id": "backend.ai_agents.universal_agent_adapter",
      "path": "backend/ai_agents/universal_agent_adapter.py",
      "sha1": "257c7c47292e9d8b191ff9318877a62e34d2662e"
    },
    {
      "id": "backend.ai_agents.communication_protocols",
      "path": "backend/ai_agents/communication_protocols.py",
      "sha1": "b49692ba83b5d8a506f55b9201fbc97b7a25112e"
    },
    {
      "id": "backend.ai_agents.agent_manager",
      "path": "backend/ai_agents/agent_manager.py",
      "sha1": "b004233e8cde7f99bd8599a89d219bd36e080ac9"
    },
    {
      "id": "backend.ai_agents.universal_agent_factory",
      "path": "backend/ai_agents/universal_agent_factory.py",
      "sha1": "d7db0c072a7f35fff885827e108e6745a1c60859"
    },
    {
      "id": "backend.ai_agents.api_wrappers",
      "path": "backend/ai_agents/api_wrappers.py",
      "sha1": "4b4d7491fa14c0a97d179d4ce9c208474ab3204c"
    },
    {
      "id": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "path": "backend/ai_agents/orchestration/master_agent_orchestrator.py",
      "sha1": "a2590749113ec90aee8984f7ff61ed1ebd970c14"
    },
    {
      "id": "backend.ai_agents.orchestration.unified_orchestration_api",
      "path": "backend/ai_agents/orchestration/unified_orchestration_api.py",
      "sha1": "326572e57000f86ee54b5a1ade4d295eb7bfacb7"
    },
    {
      "id": "backend.ai_agents.orchestration.advanced_message_bus",
      "path": "backend/ai_agents/orchestration/advanced_message_bus.py",
      "sha1": "41f2d6c0cccc89f1c1ba6c9ee36064c7fa2178f5"
    },
    {
      "id": "backend.ai_agents.orchestration.infrastructure_integration",
      "path": "backend/ai_agents/orchestration/infrastructure_integration.py",
      "sha1": "45926662d961c9d77c1eb1bc6bdd0ddc562b7db4"
    },
    {
      "id": "backend.ai_agents.orchestration.agent_registry_service",
      "path": "backend/ai_agents/orchestration/agent_registry_service.py",
      "sha1": "e9febc833fe3c1adde57d61e1286251ee9c4d425"
    },
    {
      "id": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "path": "backend/ai_agents/orchestration/enhanced_multi_agent_coordinator.py",
      "sha1": "bf72437664771378387b2aa85ddd3f449a9c78c3"
    },
    {
      "id": "backend.ai_agents.orchestration.intelligent_task_router",
      "path": "backend/ai_agents/orchestration/intelligent_task_router.py",
      "sha1": "47ef901bbea7e25b74d33eacb4f2d3dac768c050"
    },
    {
      "id": "backend.ai_agents.orchestration.orchestration_dashboard",
      "path": "backend/ai_agents/orchestration/orchestration_dashboard.py",
      "sha1": "0d02ba868cc6f88b60c2b7d9728583df6ace1376"
    },
    {
      "id": "backend.ai_agents.orchestration.unified_orchestrator",
      "path": "backend/ai_agents/orchestration/unified_orchestrator.py",
      "sha1": "9dcae5afad7f8370b14b597e5e902619510077c6"
    },
    {
      "id": "backend.ai_agents.specialized.generic_agent",
      "path": "backend/ai_agents/specialized/generic_agent.py",
      "sha1": "89783004837b70ada69969aa2920c204c9e140d6"
    },
    {
      "id": "backend.ai_agents.specialized.code_generator",
      "path": "backend/ai_agents/specialized/code_generator.py",
      "sha1": "b45b6c615a918f6ab305286fc7ad0583582a2030"
    },
    {
      "id": "backend.ai_agents.specialized.orchestrator",
      "path": "backend/ai_agents/specialized/orchestrator.py",
      "sha1": "48c9f16340ab4d2e9566cba2f24e7cf9a6b0aca9"
    },
    {
      "id": "backend.ai_agents.core.agent_message_bus",
      "path": "backend/ai_agents/core/agent_message_bus.py",
      "sha1": "4650087b8f44a91d85e3d3c47196e9c49ce96f05"
    },
    {
      "id": "backend.ai_agents.core.orchestration_controller",
      "path": "backend/ai_agents/core/orchestration_controller.py",
      "sha1": "5d34474e7841568831a182419f51320a359a0b17"
    },
    {
      "id": "backend.ai_agents.core.base_agent",
      "path": "backend/ai_agents/core/base_agent.py",
      "sha1": "674fa4e81d3947be46d84a464d32a120c89f5c9e"
    },
    {
      "id": "backend.ai_agents.core.__init__",
      "path": "backend/ai_agents/core/__init__.py",
      "sha1": "cddc20772fe888fab65f6189213a5ca7eb0d7537"
    },
    {
      "id": "backend.ai_agents.core.agent_registry",
      "path": "backend/ai_agents/core/agent_registry.py",
      "sha1": "0661b43e34b01f0b18f7e282da4434e4ecee821a"
    },
    {
      "id": "backend.ai_agents.core.universal_agent_factory",
      "path": "backend/ai_agents/core/universal_agent_factory.py",
      "sha1": "8dafdf23f1c66d6dfc69f6e78a62c8b4f428b992"
    },
    {
      "id": "backend.ai_agents.memory.shared_knowledge_base",
      "path": "backend/ai_agents/memory/shared_knowledge_base.py",
      "sha1": "c762a68482b5d4009e1cff456aae8eefb6ff792f"
    },
    {
      "id": "backend.ai_agents.memory.shared_memory",
      "path": "backend/ai_agents/memory/shared_memory.py",
      "sha1": "83b2aa30b1459ca7e3077f65a1cb9678f53d8649"
    },
    {
      "id": "backend.ai_agents.memory.agent_memory",
      "path": "backend/ai_agents/memory/agent_memory.py",
      "sha1": "256c8695a2bffe10534f6e3801a025c6510f0bd6"
    },
    {
      "id": "backend.ai_agents.memory.__init__",
      "path": "backend/ai_agents/memory/__init__.py",
      "sha1": "6e50b5f32bc0304649326f8b81302c301147a4aa"
    },
    {
      "id": "backend.ai_agents.protocols.message_protocol",
      "path": "backend/ai_agents/protocols/message_protocol.py",
      "sha1": "416a25e3152ac9e0221392a5915bd9d9eff387a6"
    },
    {
      "id": "backend.ai_agents.protocols.__init__",
      "path": "backend/ai_agents/protocols/__init__.py",
      "sha1": "ee18dde518da62638bab8b805f642680a9ccb00c"
    },
    {
      "id": "backend.ai_agents.protocols.agent_communication",
      "path": "backend/ai_agents/protocols/agent_communication.py",
      "sha1": "790d6ce61399632d811a77c9173e117d595d654b"
    },
    {
      "id": "backend.ai_agents.communication.agent_bus",
      "path": "backend/ai_agents/communication/agent_bus.py",
      "sha1": "9a012be70a464509ab939d9edfd7ceb164566750"
    },
    {
      "id": "backend.ai_agents.orchestrator.__init__",
      "path": "backend/ai_agents/orchestrator/__init__.py",
      "sha1": "99a54d9394a21fd4e2904fac25825246dd8e3b7e"
    },
    {
      "id": "backend.ai_agents.orchestrator.workflow_engine",
      "path": "backend/ai_agents/orchestrator/workflow_engine.py",
      "sha1": "409f90a303048a619ab98f95bc226d716b93800e"
    },
    {
      "id": "backend.ai_agents.reasoning.chain_of_thought",
      "path": "backend/ai_agents/reasoning/chain_of_thought.py",
      "sha1": "29746861c1d969470a01a2d9e996bce5332538c2"
    },
    {
      "id": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "path": "backend/ai_agents/reasoning/advanced_reasoning_engine.py",
      "sha1": "23c245948133de9342d26aaff4df8321591a321d"
    },
    {
      "id": "backend.ai_agents.reasoning.self_improvement",
      "path": "backend/ai_agents/reasoning/self_improvement.py",
      "sha1": "e4dcc25d38ff4fdd716e76f975fbf1eb21a376e1"
    },
    {
      "id": "backend.ai_agents.reasoning.__init__",
      "path": "backend/ai_agents/reasoning/__init__.py",
      "sha1": "1656de12c46a2588bc876e7516ddb59942c4ae13"
    },
    {
      "id": "backend.ai_agents.interaction.human_interaction",
      "path": "backend/ai_agents/interaction/human_interaction.py",
      "sha1": "6380ced55d2ece85fc3c03474af8633022c37a17"
    },
    {
      "id": "backend.ai_agents.interaction.__init__",
      "path": "backend/ai_agents/interaction/__init__.py",
      "sha1": "196bb97ddd43c46651c210d7199c963e653ccb6f"
    },
    {
      "id": "backend.ai_agents.coordination.continuous_coordinator",
      "path": "backend/ai_agents/coordination/continuous_coordinator.py",
      "sha1": "f8e6f62130aedc8b52663d3f5d9850d1612f44ee"
    },
    {
      "id": "backend.processing_engine.reasoning_engine",
      "path": "backend/processing_engine/reasoning_engine.py",
      "sha1": "00812e6f1788bde715994992da940c7d41671193"
    },
    {
      "id": "backend.processing_engine.__init__",
      "path": "backend/processing_engine/__init__.py",
      "sha1": "f58842e3a2a5fc6ddd4c66229098b261e565efad"
    },
    {
      "id": "backend.edge_inference.telemetry",
      "path": "backend/edge_inference/telemetry.py",
      "sha1": "6392872766b802de14ce58c882fbe397ad129da1"
    },
    {
      "id": "backend.edge_inference.api",
      "path": "backend/edge_inference/api.py",
      "sha1": "149541df1c5d43fcbbfb87a429219ec4ed7f10ca"
    },
    {
      "id": "backend.edge_inference.model_cache",
      "path": "backend/edge_inference/model_cache.py",
      "sha1": "05687088accf5eecd9724cd86a587304219c0177"
    },
    {
      "id": "backend.edge_inference.quantization",
      "path": "backend/edge_inference/quantization.py",
      "sha1": "d9cb24309340f7a2a3326d0ea1dc0576902e95e2"
    },
    {
      "id": "backend.edge_inference.failover",
      "path": "backend/edge_inference/failover.py",
      "sha1": "2a0e0935c61b70a06ec7b8efe8e8fe609948159c"
    },
    {
      "id": "backend.edge_inference.intelligent_router",
      "path": "backend/edge_inference/intelligent_router.py",
      "sha1": "e07626de8851a1fa3ecda1dc74b5c05a8f38e672"
    },
    {
      "id": "backend.edge_inference.proxy",
      "path": "backend/edge_inference/proxy.py",
      "sha1": "e13cd56cae93930aa178308718aa26a42f52cc69"
    },
    {
      "id": "backend.edge_inference.deployment",
      "path": "backend/edge_inference/deployment.py",
      "sha1": "21e1602deab81271bdadaf12798e801bfb872488"
    },
    {
      "id": "backend.edge_inference.batch_processor",
      "path": "backend/edge_inference/batch_processor.py",
      "sha1": "5df034e72250918e7106421d58cf4d1386da3f28"
    },
    {
      "id": "backend.edge_inference.__init__",
      "path": "backend/edge_inference/__init__.py",
      "sha1": "28eb42470ddb8cda2bae9cd3af92cf7cdf3fc06f"
    },
    {
      "id": "backend.edge_inference.memory_manager",
      "path": "backend/edge_inference/memory_manager.py",
      "sha1": "c43c539bb5c3004b575dd66725e6dddab5055d45"
    },
    {
      "id": "backend.oversight.oversight_orchestrator",
      "path": "backend/oversight/oversight_orchestrator.py",
      "sha1": "679c7a3841bdf4166d4afb1f8a060234b83a63b7"
    },
    {
      "id": "backend.oversight.alert_notification_system",
      "path": "backend/oversight/alert_notification_system.py",
      "sha1": "f81f5d407c660d992446ef201ffbb9d3f30d4a63"
    },
    {
      "id": "backend.oversight.human_oversight_interface",
      "path": "backend/oversight/human_oversight_interface.py",
      "sha1": "f6764878670f5b774a8820aa8edf5ab381c6ada3"
    },
    {
      "id": "backend.oversight.compliance_reporter",
      "path": "backend/oversight/compliance_reporter.py",
      "sha1": "6ab2deb8f71d9e14ca825c48335c7e5606d16057"
    },
    {
      "id": "backend.tests.test_comprehensive_report",
      "path": "backend/tests/test_comprehensive_report.py",
      "sha1": "9d430dfb085cf42abee0078fc0290b27bf1c1733"
    },
    {
      "id": "backend.tests.test_network_validation",
      "path": "backend/tests/test_network_validation.py",
      "sha1": "c9da7b963e463558249228041c72c83ee5bb4440"
    },
    {
      "id": "backend.tests.test_main_comprehensive",
      "path": "backend/tests/test_main_comprehensive.py",
      "sha1": "003e5a5d7775cb14a16068eeaf5a35e044d7c067"
    },
    {
      "id": "backend.tests.test_cognitive_architecture",
      "path": "backend/tests/test_cognitive_architecture.py",
      "sha1": "5587e6a686bef820002d7acb4caeaeaaeccfd999"
    },
    {
      "id": "backend.tests.test_api_endpoints",
      "path": "backend/tests/test_api_endpoints.py",
      "sha1": "cbf8e38761ed61c9a846aff5603fb70504bf9113"
    },
    {
      "id": "backend.tests.test_database_connections",
      "path": "backend/tests/test_database_connections.py",
      "sha1": "2cda40158d0d42f6f39dd1ed3716705eb23d567c"
    },
    {
      "id": "backend.tests.agent_compliance_fixer",
      "path": "backend/tests/agent_compliance_fixer.py",
      "sha1": "656ae3508670108c415b01b2f9fdac00832304dc"
    },
    {
      "id": "backend.tests.test_agent_hygiene_compliance",
      "path": "backend/tests/test_agent_hygiene_compliance.py",
      "sha1": "2733f4aa5c0cb8ab2cc765f7ff76e6da494fa0f8"
    },
    {
      "id": "backend.tests.test_deployment_validation",
      "path": "backend/tests/test_deployment_validation.py",
      "sha1": "9d5ced348146e4a5994a589b92a1528c79bba7c0"
    },
    {
      "id": "backend.tests.test_main_app",
      "path": "backend/tests/test_main_app.py",
      "sha1": "6d795815645fe36d3c3045bb3103d1b3432445a9"
    },
    {
      "id": "backend.tests.test_chromadb_simple",
      "path": "backend/tests/test_chromadb_simple.py",
      "sha1": "bb663eeafc3525fb114d328ab9f3c9b047cc70ba"
    },
    {
      "id": "backend.tests.test_vector_context_integration",
      "path": "backend/tests/test_vector_context_integration.py",
      "sha1": "6f6fdfd485d06189192f6f51b7e6d255f494a7bf"
    },
    {
      "id": "backend.tests.test_vector_context_injector",
      "path": "backend/tests/test_vector_context_injector.py",
      "sha1": "af5ff5d6c3b5159ca2bf6d5e7c59d5c48c4c1f68"
    },
    {
      "id": "backend.tests.test_api_basic",
      "path": "backend/tests/test_api_basic.py",
      "sha1": "c6275250698a6cdbda7e4dd24bb7868cf7332b50"
    },
    {
      "id": "backend.app.main",
      "path": "backend/app/main.py",
      "sha1": "58bca51d6950f8384bafe5615c14148cfa6f65bf"
    },
    {
      "id": "backend.app.agent_orchestrator",
      "path": "backend/app/agent_orchestrator.py",
      "sha1": "25c177a01830e2a0efaf295600d60b950b3081c5"
    },
    {
      "id": "backend.app.unified_service_controller",
      "path": "backend/app/unified_service_controller.py",
      "sha1": "ce72ad45dbfba3900cdcb20c0c5c0f4d74781dc3"
    },
    {
      "id": "backend.app.self_improvement",
      "path": "backend/app/self_improvement.py",
      "sha1": "a0d26df2c13335e91d02d529c0119faa73fa3c39"
    },
    {
      "id": "backend.app.__init__",
      "path": "backend/app/__init__.py",
      "sha1": "70005cea3e5826b7bb076e3eaaa0a9b771280104"
    },
    {
      "id": "backend.app.knowledge_manager",
      "path": "backend/app/knowledge_manager.py",
      "sha1": "f4a14e25b87fb922f242e9511cf44a2d701b825f"
    },
    {
      "id": "backend.app.orchestration.agent_orchestrator",
      "path": "backend/app/orchestration/agent_orchestrator.py",
      "sha1": "e6f3ae5d7dca36c5b46240a59c1f1af34694cdc6"
    },
    {
      "id": "backend.app.orchestration.task_router",
      "path": "backend/app/orchestration/task_router.py",
      "sha1": "089b131e4c821260eaee73c71346f4e953b96846"
    },
    {
      "id": "backend.app.orchestration.monitoring",
      "path": "backend/app/orchestration/monitoring.py",
      "sha1": "9b3f125332eea6ba2755d42c6f611c7c3fba0473"
    },
    {
      "id": "backend.app.orchestration.agent_discovery",
      "path": "backend/app/orchestration/agent_discovery.py",
      "sha1": "7a15c93ddfd1b00387ac9b2947fb42c02cf7cfcb"
    },
    {
      "id": "backend.app.orchestration.message_bus",
      "path": "backend/app/orchestration/message_bus.py",
      "sha1": "b16d6706138cf94b002b299f30e73e2f227753d2"
    },
    {
      "id": "backend.app.orchestration.__init__",
      "path": "backend/app/orchestration/__init__.py",
      "sha1": "9f6b4b669f1e2030c0f7dbc9bc0925fa992a9817"
    },
    {
      "id": "backend.app.orchestration.workflow_engine",
      "path": "backend/app/orchestration/workflow_engine.py",
      "sha1": "c4689b5796d81e5a87ddc529a58d58ec31fc9414"
    },
    {
      "id": "backend.app.orchestration.event_utils",
      "path": "backend/app/orchestration/event_utils.py",
      "sha1": "7730acb24e9406950c57282ba608bceb71911557"
    },
    {
      "id": "backend.app.orchestration.coordination",
      "path": "backend/app/orchestration/coordination.py",
      "sha1": "f8040d6941077dedb8cbcb9e4db6a008429bada4"
    },
    {
      "id": "backend.app.schemas.message_types",
      "path": "backend/app/schemas/message_types.py",
      "sha1": "e1d61d4e397246db72683c01acd1c543041c84b5"
    },
    {
      "id": "backend.app.schemas.message_adapters",
      "path": "backend/app/schemas/message_adapters.py",
      "sha1": "57680e62eab9f142ba242a9a64c5878ca874bf65"
    },
    {
      "id": "backend.app.schemas.agent_protocol",
      "path": "backend/app/schemas/agent_protocol.py",
      "sha1": "dae13dda1d64650eeca7651777225d38238d98ee"
    },
    {
      "id": "backend.app.schemas.message_model",
      "path": "backend/app/schemas/message_model.py",
      "sha1": "3c8fcbfda9bd2a11c6e27227305c1adfca57b24c"
    },
    {
      "id": "backend.app.core.service_registry",
      "path": "backend/app/core/service_registry.py",
      "sha1": "808d812e6930e9dc0b6c4b83310842a399d3a3d2"
    },
    {
      "id": "backend.app.core.config",
      "path": "backend/app/core/config.py",
      "sha1": "6a4f4f3b38a994a1621bc8f2e08b1259abc81596"
    },
    {
      "id": "backend.app.core.logging",
      "path": "backend/app/core/logging.py",
      "sha1": "f3863c5c772d15ac53b3c4b0e31a5082e3604ac7"
    },
    {
      "id": "backend.app.core.security",
      "path": "backend/app/core/security.py",
      "sha1": "29ac1c7379dd2b2a0536b02c5b0d8720229adbf6"
    },
    {
      "id": "backend.app.core.database",
      "path": "backend/app/core/database.py",
      "sha1": "a52dbf8b2982fcf1f684a9a37ecc560ae560c58a"
    },
    {
      "id": "backend.app.core.xss_tester",
      "path": "backend/app/core/xss_tester.py",
      "sha1": "e32346dd0eb53152c00dd91cdfffb3eddeeb45fe"
    },
    {
      "id": "backend.app.core.performance_tuning",
      "path": "backend/app/core/performance_tuning.py",
      "sha1": "3462b59b149568c54b2371c10cbfc993720ba997"
    },
    {
      "id": "backend.app.core.middleware",
      "path": "backend/app/core/middleware.py",
      "sha1": "6082d0768469707dfd7ee0afc2172880a0e7920b"
    },
    {
      "id": "backend.app.core.performance",
      "path": "backend/app/core/performance.py",
      "sha1": "6351dd8921ec9b6a98726ea347518629cdd61217"
    },
    {
      "id": "backend.app.core.__init__",
      "path": "backend/app/core/__init__.py",
      "sha1": "c5952dea1000ae814f6f00fa76cbf3cfd0931f06"
    },
    {
      "id": "backend.app.core.dependencies",
      "path": "backend/app/core/dependencies.py",
      "sha1": "7defe86bad9fdf895f54acaf1439bf8496636aed"
    },
    {
      "id": "backend.app.core.exceptions",
      "path": "backend/app/core/exceptions.py",
      "sha1": "f45ae7fb3fd6adf7fb3e259aefd99b2f72a8bdaa"
    },
    {
      "id": "backend.app.core.metrics",
      "path": "backend/app/core/metrics.py",
      "sha1": "a5b05bfb10c8c268efc7c08f377748382086141a"
    },
    {
      "id": "backend.app.auth.router",
      "path": "backend/app/auth/router.py",
      "sha1": "51cedd56eafae3404ef4c7f13345ee48be4d1f96"
    },
    {
      "id": "backend.app.auth.models",
      "path": "backend/app/auth/models.py",
      "sha1": "abfe7ab199860987347c3ac00295bb424cf0dd8b"
    },
    {
      "id": "backend.app.auth.password",
      "path": "backend/app/auth/password.py",
      "sha1": "33e5c8a04d78d02afdd0998fd4d35ee5a64aee56"
    },
    {
      "id": "backend.app.auth.__init__",
      "path": "backend/app/auth/__init__.py",
      "sha1": "ab59f5ad2537a9b28e02a99408d667d7b0f6beed"
    },
    {
      "id": "backend.app.auth.dependencies",
      "path": "backend/app/auth/dependencies.py",
      "sha1": "5db216a7e97e407860e5fa76890bbafcc5fbb949"
    },
    {
      "id": "backend.app.auth.service",
      "path": "backend/app/auth/service.py",
      "sha1": "7e21368e492f69db61af66a6a0e8da47443d51af"
    },
    {
      "id": "backend.app.auth.jwt_handler",
      "path": "backend/app/auth/jwt_handler.py",
      "sha1": "0f5e2d41237ce48db2601c8a6ff0e6008598a16c"
    },
    {
      "id": "backend.app.models.agent",
      "path": "backend/app/models/agent.py",
      "sha1": "c20a54bb343ddf550c59f59dfd260b211bb3bf5d"
    },
    {
      "id": "backend.app.models.__init__",
      "path": "backend/app/models/__init__.py",
      "sha1": "993a4b0a5125658597a91899ca7653e7fa2a1c9a"
    },
    {
      "id": "backend.app.api.__init__",
      "path": "backend/app/api/__init__.py",
      "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
    },
    {
      "id": "backend.app.api.v1.agents",
      "path": "backend/app/api/v1/agents.py",
      "sha1": "2f9e0101aec411b053796401bc720e88e48f8f7c"
    },
    {
      "id": "backend.app.api.v1.coordinator",
      "path": "backend/app/api/v1/coordinator.py",
      "sha1": "003ef760d9a0350fbf607398aa948f49cfb37473"
    },
    {
      "id": "backend.app.api.v1.api",
      "path": "backend/app/api/v1/api.py",
      "sha1": "7c48c6683c9c877441cc76a9b3243b16ec37549d"
    },
    {
      "id": "backend.app.api.v1.security",
      "path": "backend/app/api/v1/security.py",
      "sha1": "88e1e43cd939b3b1a956116121bda645b7eafd94"
    },
    {
      "id": "backend.app.api.v1.models",
      "path": "backend/app/api/v1/models.py",
      "sha1": "46513a8787d2ad062e4d4c551febd832380e2b32"
    },
    {
      "id": "backend.app.api.v1.features",
      "path": "backend/app/api/v1/features.py",
      "sha1": "a31f3a68338be398b959319a5fcde9700f159a63"
    },
    {
      "id": "backend.app.api.v1.self_improvement",
      "path": "backend/app/api/v1/self_improvement.py",
      "sha1": "921747bb573b8d1e94962d926997e7892d28cec8"
    },
    {
      "id": "backend.app.api.v1.__init__",
      "path": "backend/app/api/v1/__init__.py",
      "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
    },
    {
      "id": "backend.app.api.v1.orchestration",
      "path": "backend/app/api/v1/orchestration.py",
      "sha1": "ca49fab651fb13ef99821b1f9f6c451b842ed27f"
    },
    {
      "id": "backend.app.api.v1.feedback",
      "path": "backend/app/api/v1/feedback.py",
      "sha1": "e8a5fb21279ad0a71d7d107459494179e50b9ba5"
    },
    {
      "id": "backend.app.api.v1.jarvis",
      "path": "backend/app/api/v1/jarvis.py",
      "sha1": "a42205c5358419d86397487ba7f5e7fd294eac14"
    },
    {
      "id": "backend.app.api.v1.vectors",
      "path": "backend/app/api/v1/vectors.py",
      "sha1": "f2c95d60942594d843783511b86c5b28a73e6772"
    },
    {
      "id": "backend.app.api.v1.endpoints.honeypot_management",
      "path": "backend/app/api/v1/endpoints/honeypot_management.py",
      "sha1": "fe19e1c2f7bca2ff266aafc0e35af40315eb2108"
    },
    {
      "id": "backend.app.api.v1.endpoints.documents",
      "path": "backend/app/api/v1/endpoints/documents.py",
      "sha1": "9409e40e5ab70a2266efcfe854989e9cc3e44059"
    },
    {
      "id": "backend.app.api.v1.endpoints.agents",
      "path": "backend/app/api/v1/endpoints/agents.py",
      "sha1": "30bfc6fdf8bab80e87b3b0018620f830b5121351"
    },
    {
      "id": "backend.app.api.v1.endpoints.mesh",
      "path": "backend/app/api/v1/endpoints/mesh.py",
      "sha1": "9a4dbd24a35d5555a0f5dea04a2fa052c4ef5fd8"
    },
    {
      "id": "backend.app.api.v1.endpoints.network_recon",
      "path": "backend/app/api/v1/endpoints/network_recon.py",
      "sha1": "f38792be4ba4d63de28975d2a5aa7dcc09e53c1f"
    },
    {
      "id": "backend.app.api.v1.endpoints.models",
      "path": "backend/app/api/v1/endpoints/models.py",
      "sha1": "38eb11ac8c241ec1f35667bc0f2062b23da1d7c3"
    },
    {
      "id": "backend.app.api.v1.endpoints.governance",
      "path": "backend/app/api/v1/endpoints/governance.py",
      "sha1": "8cb99fc438f9520c415cbad9a55fcaebda3b9eee"
    },
    {
      "id": "backend.app.api.v1.endpoints.features",
      "path": "backend/app/api/v1/endpoints/features.py",
      "sha1": "fb77472914a8373ec24264007790c8f65dec2128"
    },
    {
      "id": "backend.app.api.v1.endpoints.monitoring",
      "path": "backend/app/api/v1/endpoints/monitoring.py",
      "sha1": "a6f823d3ae27b63be0db687c59024a77ccae6aac"
    },
    {
      "id": "backend.app.api.v1.endpoints.streaming",
      "path": "backend/app/api/v1/endpoints/streaming.py",
      "sha1": "8bd1c13bc8cd1f7f2c049858c786a029315cf551"
    },
    {
      "id": "backend.app.api.v1.endpoints.chat",
      "path": "backend/app/api/v1/endpoints/chat.py",
      "sha1": "e31129be35ecb8388a26035a85ce4784d7c53129"
    },
    {
      "id": "backend.app.api.v1.endpoints.__init__",
      "path": "backend/app/api/v1/endpoints/__init__.py",
      "sha1": "9c6da0ac3896df8ea87f35ab73f03d6a93ac2ddf"
    },
    {
      "id": "backend.app.api.v1.endpoints.system",
      "path": "backend/app/api/v1/endpoints/system.py",
      "sha1": "ae14685708e0f9a6bfdb2de61f56fc446f514b6d"
    },
    {
      "id": "backend.app.agents.registry",
      "path": "backend/app/agents/registry.py",
      "sha1": "2e8c017ed42c19a9b182573252bf4dd05566ecde"
    },
    {
      "id": "backend.app.agents.__init__",
      "path": "backend/app/agents/__init__.py",
      "sha1": "13f002c46879159abebaad0ceb5ccfd44b2b8a38"
    },
    {
      "id": "backend.app.agents.registry_facade",
      "path": "backend/app/agents/registry_facade.py",
      "sha1": "f548fcc9c11fc33431223d4173839bc3ecedf89c"
    },
    {
      "id": "backend.app.mesh.redis_bus",
      "path": "backend/app/mesh/redis_bus.py",
      "sha1": "eda85900d82deb53e846fb460ec0b03d7a43fffe"
    },
    {
      "id": "backend.app.services.base_service",
      "path": "backend/app/services/base_service.py",
      "sha1": "fd79938c72a65099e7c17e3708afb707460ba24f"
    },
    {
      "id": "backend.app.services.vector_db_manager",
      "path": "backend/app/services/vector_db_manager.py",
      "sha1": "e09b9d41665b1587aa0e5c55d7c33013a857b93b"
    },
    {
      "id": "backend.app.services.model_manager",
      "path": "backend/app/services/model_manager.py",
      "sha1": "7cef06059bfb7291dbc96e68bcbfa033547d2e17"
    },
    {
      "id": "backend.app.services.vector_context_injector",
      "path": "backend/app/services/vector_context_injector.py",
      "sha1": "e7896bdad6d326ffddd84f54cf87f49f88a1263d"
    },
    {
      "id": "backend.app.services.rate_limiter",
      "path": "backend/app/services/rate_limiter.py",
      "sha1": "b752d4f255597d9e22113996c635279b2d076921"
    },
    {
      "id": "backend.app.services.agent_orchestrator",
      "path": "backend/app/services/agent_orchestrator.py",
      "sha1": "09ff528397f73f94852137757d27342db9246c9f"
    },
    {
      "id": "backend.app.services.faiss_manager",
      "path": "backend/app/services/faiss_manager.py",
      "sha1": "fda6bdd7b0c8b824303660a1a69376c61ad247d8"
    },
    {
      "id": "backend.app.services.self_improvement",
      "path": "backend/app/services/self_improvement.py",
      "sha1": "d0a9e9b4e5593f058586e5e1d8a0a785b7ed1bea"
    },
    {
      "id": "backend.app.services.__init__",
      "path": "backend/app/services/__init__.py",
      "sha1": "30715bca9132e253128dc6c2e2570f55bab28ffc"
    },
    {
      "id": "backend.app.services.advanced_model_manager",
      "path": "backend/app/services/advanced_model_manager.py",
      "sha1": "f57ba7c94d7e24b8cb0e1925eca24001cdd58aaa"
    },
    {
      "id": "backend.app.services.agent_registry",
      "path": "backend/app/services/agent_registry.py",
      "sha1": "0907e96548228bce8931a41d7e2c3a0ace8fb109"
    },
    {
      "id": "backend.app.services.training.fsdp_trainer",
      "path": "backend/app/services/training/fsdp_trainer.py",
      "sha1": "927a8eba6a4226e299f92b333ba671894615cfbe"
    },
    {
      "id": "backend.app.services.training.interfaces",
      "path": "backend/app/services/training/interfaces.py",
      "sha1": "d3cf55b3e42814513b825021cb0628e94f77d7bc"
    },
    {
      "id": "backend.app.services.training.default_trainer",
      "path": "backend/app/services/training/default_trainer.py",
      "sha1": "4a658b061e6c407561efe7a88f347877d657bd56"
    },
    {
      "id": "backend.app.services.training.factory",
      "path": "backend/app/services/training/factory.py",
      "sha1": "41b7e3d98404630c0585465776fa19a5e808f76d"
    },
    {
      "id": "backend.app.services.training.__init__",
      "path": "backend/app/services/training/__init__.py",
      "sha1": "7cee9badb5b8e730789463fc74a8afd6204aec06"
    },
    {
      "id": "backend.app.services.code_completion.interfaces",
      "path": "backend/app/services/code_completion/interfaces.py",
      "sha1": "02cebb8fc558d7502dc10150ed32ea506770aa68"
    },
    {
      "id": "backend.app.services.code_completion.tabby_client",
      "path": "backend/app/services/code_completion/tabby_client.py",
      "sha1": "3bab50ff61d19d80e8df05e27c8609d98fdbd137"
    },
    {
      "id": "backend.app.services.code_completion.factory",
      "path": "backend/app/services/code_completion/factory.py",
      "sha1": "097b071ed6804d317ce503627f1cfeadd0b0fee7"
    },
    {
      "id": "backend.app.services.code_completion.__init__",
      "path": "backend/app/services/code_completion/__init__.py",
      "sha1": "4bcb72d79abc590a13c21fd7280b9a80f24a1f59"
    },
    {
      "id": "backend.app.services.code_completion.null_client",
      "path": "backend/app/services/code_completion/null_client.py",
      "sha1": "536adbbc63bf22083b8da9d4c0e880aca1d5e49e"
    },
    {
      "id": "backend.app.utils.validation",
      "path": "backend/app/utils/validation.py",
      "sha1": "b367cdca990b1d4ba954752147b80925483fb543"
    },
    {
      "id": "backend.app.utils.logger",
      "path": "backend/app/utils/logger.py",
      "sha1": "2be2215d474ef9a859d474fba471aab44ce59ba1"
    },
    {
      "id": "backend.app.utils.__init__",
      "path": "backend/app/utils/__init__.py",
      "sha1": "aea7797c77e3ea9b8a1ee51209c034204ad9d77d"
    },
    {
      "id": "backend.security.honeypot_infrastructure",
      "path": "backend/security/honeypot_infrastructure.py",
      "sha1": "191b3deea85e684d91c48d08e5161040248038c7"
    },
    {
      "id": "backend.security.cowrie_honeypot",
      "path": "backend/security/cowrie_honeypot.py",
      "sha1": "e5b5061eb2a5b5cbf8dc989716eb8c0aa092c53a"
    },
    {
      "id": "backend.security.database_honeypot",
      "path": "backend/security/database_honeypot.py",
      "sha1": "b13a5fe0e5222360380299bcd63774988f520e48"
    },
    {
      "id": "backend.security.ai_agent_honeypot",
      "path": "backend/security/ai_agent_honeypot.py",
      "sha1": "c5a509683660eb7f805af0dd253feb2928ce3500"
    },
    {
      "id": "backend.security.web_honeypot",
      "path": "backend/security/web_honeypot.py",
      "sha1": "52607cb5d28e1e2a2881ad2c1b638bbe9d1bd4ac"
    },
    {
      "id": "backend.security.honeypot_integration",
      "path": "backend/security/honeypot_integration.py",
      "sha1": "69a355db55ad5acfe9ce2fc4220373a9999d760a"
    },
    {
      "id": "backend.knowledge_graph.real_time_updater",
      "path": "backend/knowledge_graph/real_time_updater.py",
      "sha1": "d357f024e3df29ad20d148149a0c0cf5918cff34"
    },
    {
      "id": "backend.knowledge_graph.api",
      "path": "backend/knowledge_graph/api.py",
      "sha1": "85bcdb23aeb427b6c582b0f7b7e8fcd3e8e2b6a4"
    },
    {
      "id": "backend.knowledge_graph.reasoning_engine",
      "path": "backend/knowledge_graph/reasoning_engine.py",
      "sha1": "98eccdb3e74c5414893e33a9f4ce9e0d18635f90"
    },
    {
      "id": "backend.knowledge_graph.schema",
      "path": "backend/knowledge_graph/schema.py",
      "sha1": "8b2860ef0e8388f9fdb9c2736a1e4c0f0854387e"
    },
    {
      "id": "backend.knowledge_graph.manager",
      "path": "backend/knowledge_graph/manager.py",
      "sha1": "782c63d3a316e0563642480a20db5296a9ced49e"
    },
    {
      "id": "backend.knowledge_graph.neo4j_manager",
      "path": "backend/knowledge_graph/neo4j_manager.py",
      "sha1": "9b02017c1619cb49e2ee5f68b3f7d553bf21f9ea"
    },
    {
      "id": "backend.knowledge_graph.query_engine",
      "path": "backend/knowledge_graph/query_engine.py",
      "sha1": "b29939244351be36f4f0ff59f9610828f3d87efb"
    },
    {
      "id": "backend.knowledge_graph.visualization",
      "path": "backend/knowledge_graph/visualization.py",
      "sha1": "e8e5d58670ff412e5bf2c3f7d1f0ef2cf837437e"
    },
    {
      "id": "backend.knowledge_graph.__init__",
      "path": "backend/knowledge_graph/__init__.py",
      "sha1": "88533bccfc81c7f0d8d1c20e4ec108cee1f635f2"
    },
    {
      "id": "backend.knowledge_graph.graph_builder",
      "path": "backend/knowledge_graph/graph_builder.py",
      "sha1": "20cedf9b57d86399fd448616174985802d0ae301"
    },
    {
      "id": "backend.agent_orchestration.orchestrator",
      "path": "backend/agent_orchestration/orchestrator.py",
      "sha1": "55459bf6a76fcc47d46545312142ed1293170781"
    },
    {
      "id": "backend.agent_orchestration.__init__",
      "path": "backend/agent_orchestration/__init__.py",
      "sha1": "3fd6cc450be581746b8da7cfeaeba31d44ce23c0"
    },
    {
      "id": "backend.monitoring.monitoring",
      "path": "backend/monitoring/monitoring.py",
      "sha1": "34467842682ef465d57ef982d6a6265caad7a877"
    },
    {
      "id": "backend.monitoring.__init__",
      "path": "backend/monitoring/__init__.py",
      "sha1": "47cb7bae047562f7337f6217544c1ffc254e9464"
    },
    {
      "id": "backend.mlflow_system.pipeline_automation",
      "path": "backend/mlflow_system/pipeline_automation.py",
      "sha1": "b56d6a70623a2bc47319b6ef49524783eb30a226"
    },
    {
      "id": "backend.mlflow_system.analysis_tools",
      "path": "backend/mlflow_system/analysis_tools.py",
      "sha1": "6104f06add5dafe645c201311211b11d42bd8842"
    },
    {
      "id": "backend.mlflow_system.config",
      "path": "backend/mlflow_system/config.py",
      "sha1": "6323a3c853fd2626746d288735e93d8ac60b4a12"
    },
    {
      "id": "backend.mlflow_system.database",
      "path": "backend/mlflow_system/database.py",
      "sha1": "d02e0f7778a399e069b0bc8c0ac578edd9a3bb51"
    },
    {
      "id": "backend.mlflow_system.start_system",
      "path": "backend/mlflow_system/start_system.py",
      "sha1": "519f458829a6b0120ad105d246a5dbf5a96abd7b"
    },
    {
      "id": "backend.mlflow_system.dashboard",
      "path": "backend/mlflow_system/dashboard.py",
      "sha1": "3bb7eeb7c2bcceac3ed68d613afbc383343a77a1"
    },
    {
      "id": "backend.mlflow_system.integration",
      "path": "backend/mlflow_system/integration.py",
      "sha1": "edf22b9ca098e24a806231d410dd1d7b27068900"
    },
    {
      "id": "backend.mlflow_system.agent_tracker",
      "path": "backend/mlflow_system/agent_tracker.py",
      "sha1": "533f133dd84f48a013e73eb4f63927025e66336e"
    },
    {
      "id": "backend.mlflow_system.__init__",
      "path": "backend/mlflow_system/__init__.py",
      "sha1": "4f23230918fa82561f844bd94c7aeaa4bbed077b"
    },
    {
      "id": "backend.mlflow_system.tracking_server",
      "path": "backend/mlflow_system/tracking_server.py",
      "sha1": "b33d283af97987d663e2977e605175a724652714"
    },
    {
      "id": "backend.mlflow_system.metrics",
      "path": "backend/mlflow_system/metrics.py",
      "sha1": "468c2e437a35d425cd0ce84794beafcdbae1f455"
    },
    {
      "id": "backend.energy.agent_hibernation",
      "path": "backend/energy/agent_hibernation.py",
      "sha1": "a323954bc65909b678c0fee74dee1e934460b9a0"
    },
    {
      "id": "backend.energy.demo_energy_optimization",
      "path": "backend/energy/demo_energy_optimization.py",
      "sha1": "3bafca19426ececd5612af0fbf87d0c7c791667f"
    },
    {
      "id": "backend.energy.energy_profiler",
      "path": "backend/energy/energy_profiler.py",
      "sha1": "8b639b87eddd33a8aab47efa94ee798b04909839"
    },
    {
      "id": "backend.energy.energy_cli",
      "path": "backend/energy/energy_cli.py",
      "sha1": "d907e2a966383a599d517cafe6cb47deed0b88d5"
    },
    {
      "id": "backend.energy.workload_scheduler",
      "path": "backend/energy/workload_scheduler.py",
      "sha1": "4036a9771571ec9542ce1de689c694535e15667a"
    },
    {
      "id": "backend.energy.monitoring_dashboard",
      "path": "backend/energy/monitoring_dashboard.py",
      "sha1": "16611a7faa40c3e2c1af67d376a5cb1c6843ed61"
    },
    {
      "id": "backend.energy.resource_allocator",
      "path": "backend/energy/resource_allocator.py",
      "sha1": "c2c17e91c318bee5367fa843f67692826facad5b"
    },
    {
      "id": "backend.energy.__init__",
      "path": "backend/energy/__init__.py",
      "sha1": "bfc413f8d85b3fb7221369f15de9f518132e51b7"
    },
    {
      "id": "backend.energy.sustainability_manager",
      "path": "backend/energy/sustainability_manager.py",
      "sha1": "56695b80f782fa8766c60e4bb27af203d0288e88"
    },
    {
      "id": "backend.energy.power_optimizer",
      "path": "backend/energy/power_optimizer.py",
      "sha1": "9495aced60397835b56d302c16ad385e268740a0"
    },
    {
      "id": "backend.energy.energy_api",
      "path": "backend/energy/energy_api.py",
      "sha1": "c342d48590298420c4b219a0482005ceda799433"
    },
    {
      "id": "backend.utils.test_large_file_handler",
      "path": "backend/utils/test_large_file_handler.py",
      "sha1": "32eb134a993dcb0aa95f091883184a5f52d7b230"
    },
    {
      "id": "backend.utils.file_reader",
      "path": "backend/utils/file_reader.py",
      "sha1": "85876418a84789cdd51bc28036b6615461cc6a09"
    },
    {
      "id": "backend.utils.large_file_handler",
      "path": "backend/utils/large_file_handler.py",
      "sha1": "bd05e56dc9ef769e232e43902300a2cbc1be0598"
    },
    {
      "id": "backend.utils.large_file_integration_example",
      "path": "backend/utils/large_file_integration_example.py",
      "sha1": "5dc96ad1ce057821cd158c9ba5da3b0e75951f1f"
    },
    {
      "id": "backend.utils.cache_manager",
      "path": "backend/utils/cache_manager.py",
      "sha1": "9c6e3bc2635803a0e583bf871252d13e70050b57"
    },
    {
      "id": "backend.utils.readlarge",
      "path": "backend/utils/readlarge.py",
      "sha1": "8a867269407ab8253e3c2ab279fcaed6e42609c7"
    },
    {
      "id": "backend.utils.__init__",
      "path": "backend/utils/__init__.py",
      "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
    },
    {
      "id": "backend.utils.logging_setup",
      "path": "backend/utils/logging_setup.py",
      "sha1": "51584b0785eb26244c649e59374461c9b8c7b9d7"
    },
    {
      "id": "backend.data_governance.lineage_tracker",
      "path": "backend/data_governance/lineage_tracker.py",
      "sha1": "7abc08941c98c1209c0e533af5c739554c6450fe"
    },
    {
      "id": "backend.data_governance.governance_api",
      "path": "backend/data_governance/governance_api.py",
      "sha1": "2bf2da7a79c356be5276be07c28f43e33d01c112"
    },
    {
      "id": "backend.data_governance.data_catalog",
      "path": "backend/data_governance/data_catalog.py",
      "sha1": "3717787bbbfa1e94d4aef6aa7195f258abe17b97"
    },
    {
      "id": "backend.data_governance.quality_monitor",
      "path": "backend/data_governance/quality_monitor.py",
      "sha1": "cb2091bfe309bab150cea6271a1e7b78cc25635e"
    },
    {
      "id": "backend.data_governance.data_versioning",
      "path": "backend/data_governance/data_versioning.py",
      "sha1": "1856b63f32e3e844e39546051bb215fe345e1082"
    },
    {
      "id": "backend.data_governance.data_classifier",
      "path": "backend/data_governance/data_classifier.py",
      "sha1": "99862d7841c8938b319112cfe7ccc78b51f634db"
    },
    {
      "id": "backend.data_governance.audit_logger",
      "path": "backend/data_governance/audit_logger.py",
      "sha1": "a8cbaec414f9a142a358621f8b5ac514f39cf8f6"
    },
    {
      "id": "backend.data_governance.__init__",
      "path": "backend/data_governance/__init__.py",
      "sha1": "fe1178338ec348abf66158cbc8d466637b8f98f1"
    },
    {
      "id": "backend.data_governance.governance_framework",
      "path": "backend/data_governance/governance_framework.py",
      "sha1": "565663bf499372b2921b029dbe31eed411b3881a"
    },
    {
      "id": "backend.data_governance.lifecycle_manager",
      "path": "backend/data_governance/lifecycle_manager.py",
      "sha1": "102e26a267b3a2431457c009efe0a6b046fc1e74"
    },
    {
      "id": "backend.data_governance.compliance_manager",
      "path": "backend/data_governance/compliance_manager.py",
      "sha1": "e5b9dd19ee4f72ec1a7d3b40add27a558cb631e7"
    },
    {
      "id": "backend.federated_learning.coordinator",
      "path": "backend/federated_learning/coordinator.py",
      "sha1": "bb7492cabe4d8dda1ef9c41ebe03dd5904bb5d7b"
    },
    {
      "id": "backend.federated_learning.aggregator",
      "path": "backend/federated_learning/aggregator.py",
      "sha1": "1e51fc4255be5934c5feae68eda207f58534135f"
    },
    {
      "id": "backend.federated_learning.dashboard",
      "path": "backend/federated_learning/dashboard.py",
      "sha1": "d3382a6e217f37b7bfac45a298dafc43b636ba79"
    },
    {
      "id": "backend.federated_learning.client",
      "path": "backend/federated_learning/client.py",
      "sha1": "ba44d65621bd877ed25a94a5b9865b2941987635"
    },
    {
      "id": "backend.federated_learning.monitoring",
      "path": "backend/federated_learning/monitoring.py",
      "sha1": "992fa8505976f14d5104b69ae5e081a570bc0def"
    },
    {
      "id": "backend.federated_learning.integration",
      "path": "backend/federated_learning/integration.py",
      "sha1": "f9833c985708e85fe6d24db694462b8dd075f571"
    },
    {
      "id": "backend.federated_learning.privacy",
      "path": "backend/federated_learning/privacy.py",
      "sha1": "27b61d9d1ff85d78bfc1603b605618c24e6b53c2"
    },
    {
      "id": "backend.federated_learning.__init__",
      "path": "backend/federated_learning/__init__.py",
      "sha1": "464146487ba5cab1dd77fefdf046154d8063c031"
    },
    {
      "id": "backend.federated_learning.versioning",
      "path": "backend/federated_learning/versioning.py",
      "sha1": "6f2eb38820c92d918f508205cddf96159ec2c737"
    },
    {
      "id": "backend.routers.agent_interaction",
      "path": "backend/routers/agent_interaction.py",
      "sha1": "fd23a6ea39e1a2c22a2655973cbd07a1e5e3586e"
    },
    {
      "id": "services.external-service-registry",
      "path": "services/external-service-registry.py",
      "sha1": "9cd49a6e135128ee23da03e01dfe8281992cecbb"
    },
    {
      "id": "services.ollama_service",
      "path": "services/ollama_service.py",
      "sha1": "b9eca09cc5aa0a8df1ab1d468ab811738bb42931"
    },
    {
      "id": "services.ai-metrics.main",
      "path": "services/ai-metrics/main.py",
      "sha1": "02001ff3f9947620eb55342dee0ca0153b48a2f5"
    },
    {
      "id": "services.resource-manager.main",
      "path": "services/resource-manager/main.py",
      "sha1": "512edee799e500878b0a5781718e8aef7fb088ca"
    },
    {
      "id": "services.automation.skyvern_service",
      "path": "services/automation/skyvern_service.py",
      "sha1": "20d981d45550379e577a6dec8fb00085760341b0"
    },
    {
      "id": "services.automation.browser_use_service",
      "path": "services/automation/browser_use_service.py",
      "sha1": "ace36c4249d404569e0b1205f9132210b500ba24"
    },
    {
      "id": "services.codegen.gpt_engineer_service",
      "path": "services/codegen/gpt_engineer_service.py",
      "sha1": "9170c442e5693b36b9a000942465b7153f22dea0"
    },
    {
      "id": "services.codegen.aider_service",
      "path": "services/codegen/aider_service.py",
      "sha1": "58bd2e828ece26b90c029904a1c14507c876a267"
    },
    {
      "id": "services.llamaindex.app",
      "path": "services/llamaindex/app.py",
      "sha1": "eaafa09b92120639a4c1ed65131aa159e3ad9128"
    },
    {
      "id": "services.adapters.base_adapter",
      "path": "services/adapters/base_adapter.py",
      "sha1": "63a0e9a40ce14d9b707d0adc8abeb0e0eaecd5cc"
    },
    {
      "id": "services.adapters.__init__",
      "path": "services/adapters/__init__.py",
      "sha1": "287a01b46b92e5bcb9851ff1025b423dca44d5c6"
    },
    {
      "id": "services.adapters.vector_db.chromadb_adapter",
      "path": "services/adapters/vector_db/chromadb_adapter.py",
      "sha1": "dbfb6c5a87a42a72e05e8207b73d438aa129e5c8"
    },
    {
      "id": "services.adapters.vector_db.__init__",
      "path": "services/adapters/vector_db/__init__.py",
      "sha1": "487b8d94fecde42eda413cdc3197ddf644a735ea"
    },
    {
      "id": "services.adapters.vector_db.faiss_adapter",
      "path": "services/adapters/vector_db/faiss_adapter.py",
      "sha1": "5e44629bad6ae5f4991c00192ad787e1e8ee7366"
    },
    {
      "id": "services.adapters.vector_db.qdrant_adapter",
      "path": "services/adapters/vector_db/qdrant_adapter.py",
      "sha1": "1714c322c26003eaeea8fdcbe1dc197baf738167"
    },
    {
      "id": "services.adapters.agent_systems.autogpt_adapter",
      "path": "services/adapters/agent_systems/autogpt_adapter.py",
      "sha1": "0694c5ab019d4bd5c07ff4881167fe22c42d01e2"
    },
    {
      "id": "services.adapters.agent_systems.__init__",
      "path": "services/adapters/agent_systems/__init__.py",
      "sha1": "1cc05e3909f8165c93a71d27e75d00d7ebd5e0a8"
    },
    {
      "id": "services.adapters.agent_systems.letta_adapter",
      "path": "services/adapters/agent_systems/letta_adapter.py",
      "sha1": "35e1f1a8ee9c9ce6e9417632e9dfcf50022418dd"
    },
    {
      "id": "services.adapters.specialized_tools.finrobot_adapter",
      "path": "services/adapters/specialized_tools/finrobot_adapter.py",
      "sha1": "206f8bc149106e79b2b15b788eb33c472f76bdb3"
    },
    {
      "id": "services.adapters.specialized_tools.__init__",
      "path": "services/adapters/specialized_tools/__init__.py",
      "sha1": "d09064029fa61ad0f5ef8a09942d68bc8f352f0d"
    },
    {
      "id": "services.adapters.ai_frameworks.tensorflow_adapter",
      "path": "services/adapters/ai_frameworks/tensorflow_adapter.py",
      "sha1": "f2196921cd72af1d751b0a8a793bf92c79efb6d4"
    },
    {
      "id": "services.adapters.ai_frameworks.__init__",
      "path": "services/adapters/ai_frameworks/__init__.py",
      "sha1": "c24e7b214eee67bfe7b48e1130c96ca04d58267a"
    },
    {
      "id": "services.adapters.ai_frameworks.pytorch_adapter",
      "path": "services/adapters/ai_frameworks/pytorch_adapter.py",
      "sha1": "fab8251c5c322728599dcbc748c0d2684a0fa2d5"
    },
    {
      "id": "services.adapters.workflow_tools.langflow_adapter",
      "path": "services/adapters/workflow_tools/langflow_adapter.py",
      "sha1": "d8b18b725e8364486a634c60d7445b1dcfa72c81"
    },
    {
      "id": "services.adapters.workflow_tools.__init__",
      "path": "services/adapters/workflow_tools/__init__.py",
      "sha1": "be0ebc107eeb1416204214cec775777c5237244f"
    },
    {
      "id": "services.adapters.workflow_tools.dify_adapter",
      "path": "services/adapters/workflow_tools/dify_adapter.py",
      "sha1": "517eb89e46c7ba541f325d49fb385efa98082cf6"
    },
    {
      "id": "services.jarvis.main_simple",
      "path": "services/jarvis/main_simple.py",
      "sha1": "bdc9758a2f59ffafa18be04f11af2d2138123251"
    },
    {
      "id": "services.jarvis.main",
      "path": "services/jarvis/main.py",
      "sha1": "bdc9a816318268dd77ce8c685003f750a8e78b4f"
    },
    {
      "id": "services.jarvis.main_basic",
      "path": "services/jarvis/main_basic.py",
      "sha1": "f395d3e53415ed09ae5f8c0487a6f4dae2b38d8f"
    },
    {
      "id": "services.jarvis.schemas",
      "path": "services/jarvis/schemas.py",
      "sha1": "82d943be012ce31f00a970c5d6aa568d3536efd7"
    },
    {
      "id": "services.jarvis.core.task_planner",
      "path": "services/jarvis/core/task_planner.py",
      "sha1": "aac539b00110cefb908db79380b36ab45937e1af"
    },
    {
      "id": "services.jarvis.core.agent_coordinator",
      "path": "services/jarvis/core/agent_coordinator.py",
      "sha1": "6eba22dd2b1df36a039705d62f5ab73d8b3fb7c9"
    },
    {
      "id": "services.jarvis.core.voice_interface_minimal",
      "path": "services/jarvis/core/voice_interface_minimal.py",
      "sha1": "880be07358948254f8a6933b3e0956119e0edf1f"
    },
    {
      "id": "services.jarvis.core.orchestrator",
      "path": "services/jarvis/core/orchestrator.py",
      "sha1": "22ca0511ab681dadcc1ed669cc78c88d2e295869"
    },
    {
      "id": "services.jarvis.core.plugin_manager",
      "path": "services/jarvis/core/plugin_manager.py",
      "sha1": "2f9493014eb89e3ad7d960491b7a383173153699"
    },
    {
      "id": "services.jarvis.core.voice_interface",
      "path": "services/jarvis/core/voice_interface.py",
      "sha1": "0f8e29b78efa88ac30fa6e0d1f294d24dc467dc8"
    },
    {
      "id": "services.jarvis.core.memory_manager",
      "path": "services/jarvis/core/memory_manager.py",
      "sha1": "6978a87141579a026a8f8c0054302dcb5f298fd8"
    },
    {
      "id": "services.jarvis.tests.test_routes_minimal",
      "path": "services/jarvis/tests/test_routes_minimal.py",
      "sha1": "26e4c048adc3bbb8362ed4fcaa26c631e2e73dc4"
    },
    {
      "id": "services.langchain.main",
      "path": "services/langchain/main.py",
      "sha1": "7b17ec16c9a759e90b86c712b2bdab621106871a"
    },
    {
      "id": "services.ml.pytorch_service",
      "path": "services/ml/pytorch_service.py",
      "sha1": "684af89a1098dc61efca18db38c897006563c6ab"
    },
    {
      "id": "services.ml.tensorflow_service",
      "path": "services/ml/tensorflow_service.py",
      "sha1": "0edb51d31dc41d1344c25ca5dd81ea9f7163a528"
    },
    {
      "id": "services.ml.jax_service",
      "path": "services/ml/jax_service.py",
      "sha1": "5617de97613c9e62a29af38e6eebcbcf5e9be95e"
    },
    {
      "id": "services.faiss-vector.main",
      "path": "services/faiss-vector/main.py",
      "sha1": "32873580ca2343dbfd835029497c7baef2cd3b6b"
    },
    {
      "id": "services.scaler.service_scaler",
      "path": "services/scaler/service_scaler.py",
      "sha1": "3b02f484f66fc168c56976772be5ef8366ed4ed9"
    },
    {
      "id": "services.api-adapter.unified_ai_client",
      "path": "services/api-adapter/unified_ai_client.py",
      "sha1": "c16ef71c5497c9ed5eef89762ac8bddc1fa3ad7f"
    },
    {
      "id": "services.chainlit.chainlit_app",
      "path": "services/chainlit/chainlit_app.py",
      "sha1": "b0900318788cb14d43961224c3fabb5be683594d"
    },
    {
      "id": "agents.generic_agent",
      "path": "agents/generic_agent.py",
      "sha1": "124b29b195edbce911f5ee76e01aee5c81a833b1"
    },
    {
      "id": "agents.standalone_main",
      "path": "agents/standalone_main.py",
      "sha1": "7ff2f1d19cc1643917bff3a38cc4b92f202cf768"
    },
    {
      "id": "agents.agent_with_health",
      "path": "agents/agent_with_health.py",
      "sha1": "a594a3b389faa3dfb3ba6c6fb26de8bc202aca8d"
    },
    {
      "id": "agents.compatibility_base_agent",
      "path": "agents/compatibility_base_agent.py",
      "sha1": "53baeefc94a0b56813c0371e9a0e6bf0cde43f6e"
    },
    {
      "id": "agents.base_agent",
      "path": "agents/base_agent.py",
      "sha1": "02c25bc62d634efda1cb345ba77a5412ba8a365e"
    },
    {
      "id": "agents.agent_base",
      "path": "agents/agent_base.py",
      "sha1": "4d4337580f4710bd9e8d72a1d341b3f44a68cb1b"
    },
    {
      "id": "agents.crewai_config",
      "path": "agents/crewai_config.py",
      "sha1": "adc6c7ae67862d5d770c52ed8202f0af2376fe7b"
    },
    {
      "id": "agents.fastapi_wrapper",
      "path": "agents/fastapi_wrapper.py",
      "sha1": "c759af8a5bdc8f0c2d7f2bd3f095f3d74efe13c3"
    },
    {
      "id": "agents.__init__",
      "path": "agents/__init__.py",
      "sha1": "f575d2d75e8052a9c97f4b6516e661c5b334ea8f"
    },
    {
      "id": "agents.semgrep_service",
      "path": "agents/semgrep_service.py",
      "sha1": "13d70a37df1c7be97bd8e49d92a23f980b915095"
    },
    {
      "id": "agents.container_startup",
      "path": "agents/container_startup.py",
      "sha1": "25ec511aa27f74e04fe36cf4f48e875445d49078"
    },
    {
      "id": "agents.universal_startup",
      "path": "agents/universal_startup.py",
      "sha1": "ba9fb1be1338118462ef4263a6319c48227551e1"
    },
    {
      "id": "agents.task_assignment_coordinator.app",
      "path": "agents/task_assignment_coordinator/app.py",
      "sha1": "df28eee5bdaf7d1c8431f70e1f89b940066974dc"
    },
    {
      "id": "agents.task_assignment_coordinator.metrics",
      "path": "agents/task_assignment_coordinator/metrics.py",
      "sha1": "8b44a285458ab1914968aebef396177b1f8949cd"
    },
    {
      "id": "agents.jarvis-automation-agent.app",
      "path": "agents/jarvis-automation-agent/app.py",
      "sha1": "5e0c21c5a8168040c65b9cb012b4757639e89e44"
    },
    {
      "id": "agents.core.ollama_performance_optimizer",
      "path": "agents/core/ollama_performance_optimizer.py",
      "sha1": "d8401bf99517ca6b595cfd0604f9b251d88deafa"
    },
    {
      "id": "agents.core.prompt_optimizer",
      "path": "agents/core/prompt_optimizer.py",
      "sha1": "f35212b8b7243e3906059af623cc47b67b03080f"
    },
    {
      "id": "agents.core.request_queue",
      "path": "agents/core/request_queue.py",
      "sha1": "9fe691fddf1cf464fde5a0dea2913a09256bfe2f"
    },
    {
      "id": "agents.core.ollama_batch_processor",
      "path": "agents/core/ollama_batch_processor.py",
      "sha1": "3d5b027a9e1aeb65593142d06d6fd5270304f531"
    },
    {
      "id": "agents.core.ollama_integration",
      "path": "agents/core/ollama_integration.py",
      "sha1": "af3baa9051979a78b932adda050b651685ca64f4"
    },
    {
      "id": "agents.core.update_agents",
      "path": "agents/core/update_agents.py",
      "sha1": "c6d433e06293be17e709a3c9ea932ebd2fc2d271"
    },
    {
      "id": "agents.core.utils",
      "path": "agents/core/utils.py",
      "sha1": "77be0bbedd9ce0b15eaf7127fce31a7e7f82b3d5"
    },
    {
      "id": "agents.core.context_manager",
      "path": "agents/core/context_manager.py",
      "sha1": "975a44dc8a3035b8945b6125ef4fccc7e6f764c1"
    },
    {
      "id": "agents.core.ollama_pool",
      "path": "agents/core/ollama_pool.py",
      "sha1": "cf03976ed5960606121a0e1d4d6dba9494b987a8"
    },
    {
      "id": "agents.core.ollama_context_optimizer",
      "path": "agents/core/ollama_context_optimizer.py",
      "sha1": "f38cc9413ef9b940b136ce7e4e2bcc4825dfd7d8"
    },
    {
      "id": "agents.core.rabbitmq_client",
      "path": "agents/core/rabbitmq_client.py",
      "sha1": "fb0ce5f16c7ae1adcc6897d8c58a0f7ff3f53772"
    },
    {
      "id": "agents.core.base_agent_v2",
      "path": "agents/core/base_agent_v2.py",
      "sha1": "873a6151c102b299294085b1e83b6f00b9e2cfa9"
    },
    {
      "id": "agents.core.ollama_model_manager",
      "path": "agents/core/ollama_model_manager.py",
      "sha1": "d90432eeda4e899c06194fb73188140b269b4d53"
    },
    {
      "id": "agents.core.__init__",
      "path": "agents/core/__init__.py",
      "sha1": "49fcddcaaa26d32e46e1b61063e2ac7c48129fae"
    },
    {
      "id": "agents.core.example_usage",
      "path": "agents/core/example_usage.py",
      "sha1": "eb2096098de7276620c4b5b5c001d390308f544e"
    },
    {
      "id": "agents.core.circuit_breaker",
      "path": "agents/core/circuit_breaker.py",
      "sha1": "aee054b5374b7d14608343d58fb2591ea84de18b"
    },
    {
      "id": "agents.core.ollama_connection_pool",
      "path": "agents/core/ollama_connection_pool.py",
      "sha1": "3291ce874c15c7f6873346242ae9c3cb81ca8e94"
    },
    {
      "id": "agents.core.migration_helper",
      "path": "agents/core/migration_helper.py",
      "sha1": "b7a25ea2443d07006a65e6b8c161ec0552d76797"
    },
    {
      "id": "agents.core.ollama_autoscaler",
      "path": "agents/core/ollama_autoscaler.py",
      "sha1": "c7b3815c56d598dd280c3bb080a08bcdb1532056"
    },
    {
      "id": "agents.core.messaging",
      "path": "agents/core/messaging.py",
      "sha1": "c9e5d5d935c28a0354de6b5808c0abaf7cf2b05a"
    },
    {
      "id": "agents.core.simple_base_agent",
      "path": "agents/core/simple_base_agent.py",
      "sha1": "ae0d1e38d25ae1fad874ff7ac136342c94dd52c9"
    },
    {
      "id": "agents.core.test_enhanced_agent",
      "path": "agents/core/test_enhanced_agent.py",
      "sha1": "67999ba6218ed25bd71061892cae2c8121eaf5a3"
    },
    {
      "id": "agents.core.messaging_agent_base",
      "path": "agents/core/messaging_agent_base.py",
      "sha1": "45151509a8691d5c4e60885452796e1acc303a3e"
    },
    {
      "id": "agents.core.metrics",
      "path": "agents/core/metrics.py",
      "sha1": "6c40aebae950fa3b1fa12c710e9564451b65a4d8"
    },
    {
      "id": "agents.coordinator.app",
      "path": "agents/coordinator/app.py",
      "sha1": "df7f53dda5905fe042c362ed37498a0a47cc96e8"
    },
    {
      "id": "agents.coordinator.metrics",
      "path": "agents/coordinator/metrics.py",
      "sha1": "8b44a285458ab1914968aebef396177b1f8949cd"
    },
    {
      "id": "agents.jarvis-hardware-resource-optimizer.app",
      "path": "agents/jarvis-hardware-resource-optimizer/app.py",
      "sha1": "81091216cbabd1f320dbf624de55ba7ef7215692"
    },
    {
      "id": "agents.ai_agent_orchestrator.app",
      "path": "agents/ai_agent_orchestrator/app.py",
      "sha1": "87e6ac54ec90fb21529532bea8c6eaa188f52a8a"
    },
    {
      "id": "agents.ai_agent_orchestrator.metrics",
      "path": "agents/ai_agent_orchestrator/metrics.py",
      "sha1": "8b44a285458ab1914968aebef396177b1f8949cd"
    },
    {
      "id": "agents.resource_arbitration_agent.app",
      "path": "agents/resource_arbitration_agent/app.py",
      "sha1": "90a39098a4a31bb0f4b233dc7d865afa395d1074"
    },
    {
      "id": "agents.resource_arbitration_agent.metrics",
      "path": "agents/resource_arbitration_agent/metrics.py",
      "sha1": "8b44a285458ab1914968aebef396177b1f8949cd"
    },
    {
      "id": "agents.jarvis-knowledge-management.app",
      "path": "agents/jarvis-knowledge-management/app.py",
      "sha1": "474f16cccf4c803a883c22dbfd378b3ea2e9a492"
    },
    {
      "id": "agents.jarvis-voice-interface.app",
      "path": "agents/jarvis-voice-interface/app.py",
      "sha1": "7aca22392e248610058ee592dcde85305391034c"
    },
    {
      "id": "agents.ollama_integration.ollama_schemas",
      "path": "agents/ollama_integration/ollama_schemas.py",
      "sha1": "d3cb892fbc45fc7ec1fafd20524d807fbc5fcc76"
    },
    {
      "id": "agents.ollama_integration.example_usage",
      "path": "agents/ollama_integration/example_usage.py",
      "sha1": "5a3beb7df9552480b0dbf83abce1531a01c72aaf"
    },
    {
      "id": "agents.ollama_integration.app",
      "path": "agents/ollama_integration/app.py",
      "sha1": "b6888ae27d6cf0d32333e92d13ebb79f11013fed"
    },
    {
      "id": "agents.ollama_integration.metrics",
      "path": "agents/ollama_integration/metrics.py",
      "sha1": "8b44a285458ab1914968aebef396177b1f8949cd"
    },
    {
      "id": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "path": "agents/hardware-resource-optimizer/bulletproof_quick_test.py",
      "sha1": "ca0c6402249e6a260f98c3f6cc9f0274271d3a40"
    },
    {
      "id": "agents.hardware-resource-optimizer.integration_test_suite",
      "path": "agents/hardware-resource-optimizer/integration_test_suite.py",
      "sha1": "b9ccfff3173154fe9eb0e17bf497d074f36aee86"
    },
    {
      "id": "agents.hardware-resource-optimizer.test_dry_run_safety",
      "path": "agents/hardware-resource-optimizer/test_dry_run_safety.py",
      "sha1": "f27a92d880286979a06e4e98157bd5e99ff99eff"
    },
    {
      "id": "agents.hardware-resource-optimizer.app_debug_enhanced",
      "path": "agents/hardware-resource-optimizer/app_debug_enhanced.py",
      "sha1": "0b78fec639cc53993fb067d87912232141a637da"
    },
    {
      "id": "agents.hardware-resource-optimizer.continuous_validator",
      "path": "agents/hardware-resource-optimizer/continuous_validator.py",
      "sha1": "663b40a09c7ca05ed48a8ecbc43e04fb87785330"
    },
    {
      "id": "agents.hardware-resource-optimizer.test_cache_cleanup",
      "path": "agents/hardware-resource-optimizer/test_cache_cleanup.py",
      "sha1": "c43ecae1e3b1944e05a00f10a9dca898bbdf6d1a"
    },
    {
      "id": "agents.hardware-resource-optimizer.main",
      "path": "agents/hardware-resource-optimizer/main.py",
      "sha1": "11825d3e94019e184875dee1f61cd4c7234711f4"
    },
    {
      "id": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "path": "agents/hardware-resource-optimizer/bulletproof_test_suite.py",
      "sha1": "53a5f665ccef4c06bd7d9de69fff13bb50025c2c"
    },
    {
      "id": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "path": "agents/hardware-resource-optimizer/final_bulletproof_test.py",
      "sha1": "77bdfb6358921195f6b659dd74d2f3943125e431"
    },
    {
      "id": "agents.hardware-resource-optimizer.100_percent_working_proof",
      "path": "agents/hardware-resource-optimizer/100_percent_working_proof.py",
      "sha1": "5d5dbf6d5efe78b5633e56f3018960417c020c5e"
    },
    {
      "id": "agents.hardware-resource-optimizer.app_messaging",
      "path": "agents/hardware-resource-optimizer/app_messaging.py",
      "sha1": "30f987f7477e8e33547b9193fae6055b89d8c528"
    },
    {
      "id": "agents.hardware-resource-optimizer.test_analyze_duplicates",
      "path": "agents/hardware-resource-optimizer/test_analyze_duplicates.py",
      "sha1": "3f56ce17faf33a40241674ebe94b18c582d3ac8f"
    },
    {
      "id": "agents.hardware-resource-optimizer.test_storage_endpoints",
      "path": "agents/hardware-resource-optimizer/test_storage_endpoints.py",
      "sha1": "4538932c55d35e1cb62706f9079f3d3b337ca1f0"
    },
    {
      "id": "agents.hardware-resource-optimizer.debug_tracer",
      "path": "agents/hardware-resource-optimizer/debug_tracer.py",
      "sha1": "dee0de8b5c42a8038e8ff5263e2abbd45be3f701"
    },
    {
      "id": "agents.hardware-resource-optimizer.test_endpoints",
      "path": "agents/hardware-resource-optimizer/test_endpoints.py",
      "sha1": "16e373c5a08006c543bdba5c1939bb66760d8876"
    },
    {
      "id": "agents.hardware-resource-optimizer.test_large_files",
      "path": "agents/hardware-resource-optimizer/test_large_files.py",
      "sha1": "496649374c981341e3553b8743e12f03bf2db53e"
    },
    {
      "id": "agents.hardware-resource-optimizer.quick_verification_test",
      "path": "agents/hardware-resource-optimizer/quick_verification_test.py",
      "sha1": "cb4749d90490a37c7c1fc93ac949a5fac53d18d6"
    },
    {
      "id": "agents.hardware-resource-optimizer.app",
      "path": "agents/hardware-resource-optimizer/app.py",
      "sha1": "053d642d222594c96bea1d5b859c9a4c5236530c"
    },
    {
      "id": "agents.hardware-resource-optimizer.manual_debug_test",
      "path": "agents/hardware-resource-optimizer/manual_debug_test.py",
      "sha1": "b7f7534c80e5db2e30004c52f31eba07c421cd10"
    },
    {
      "id": "agents.hardware-resource-optimizer.test_storage_analysis",
      "path": "agents/hardware-resource-optimizer/test_storage_analysis.py",
      "sha1": "298c494f4948c3e7cbdc118eef75e3e4b11a71ae"
    },
    {
      "id": "agents.hardware-resource-optimizer.final_performance_demo",
      "path": "agents/hardware-resource-optimizer/final_performance_demo.py",
      "sha1": "0f4c1be7049a3a7ae3cf624fb392985c852b0aa2"
    },
    {
      "id": "agents.hardware-resource-optimizer.test_compression",
      "path": "agents/hardware-resource-optimizer/test_compression.py",
      "sha1": "580c7d4e27a908b94ee94162f46f04193ac04ed6"
    },
    {
      "id": "agents.hardware-resource-optimizer.debug_safety",
      "path": "agents/hardware-resource-optimizer/debug_safety.py",
      "sha1": "98f2e36d5f31aceb6c37bc09ef55731435ea1221"
    },
    {
      "id": "agents.hardware-resource-optimizer.metrics",
      "path": "agents/hardware-resource-optimizer/metrics.py",
      "sha1": "8b44a285458ab1914968aebef396177b1f8949cd"
    },
    {
      "id": "agents.hardware-resource-optimizer.shared.agent_base",
      "path": "agents/hardware-resource-optimizer/shared/agent_base.py",
      "sha1": "4d4337580f4710bd9e8d72a1d341b3f44a68cb1b"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.final_validation_summary",
      "path": "agents/hardware-resource-optimizer/tests/final_validation_summary.py",
      "sha1": "800fb1a3adef9f93d4cca31b94eae8ec0d4e9899"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "path": "agents/hardware-resource-optimizer/tests/integration_test_suite.py",
      "sha1": "3fc85515316ced0a7d3a796896d13215df94ef4d"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.simple_performance_test",
      "path": "agents/hardware-resource-optimizer/tests/simple_performance_test.py",
      "sha1": "f9e6d78474db428097fcc80d032a8d15400da08d"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "path": "agents/hardware-resource-optimizer/tests/continuous_validator.py",
      "sha1": "8151edaa0f7bbc99eb4678f67a298af91ffefe4b"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "path": "agents/hardware-resource-optimizer/tests/manual_test_procedures.py",
      "sha1": "c76ea570b290f342c9255ad343ecb4ef7ba2ba1f"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "path": "agents/hardware-resource-optimizer/tests/performance_stress_tests.py",
      "sha1": "3135271df5f51c38fd820a914725a2467f58132b"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "path": "agents/hardware-resource-optimizer/tests/comprehensive_e2e_test_framework.py",
      "sha1": "f037990f0f8fce51c85f249de5ef65c5527c42b2"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.validate_setup",
      "path": "agents/hardware-resource-optimizer/tests/validate_setup.py",
      "sha1": "52f0565478f4eaed96d09480e98d0b81953dd7ff"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "path": "agents/hardware-resource-optimizer/tests/test_execution_orchestrator.py",
      "sha1": "ed9947d75dd640bd2815de75e1203d363f05da22"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "path": "agents/hardware-resource-optimizer/tests/automated_continuous_tests.py",
      "sha1": "157f7aa6b950ee87f2b9e8925523ef4824f606c0"
    },
    {
      "id": "agents.hardware-resource-optimizer.tests.simple_endpoint_test",
      "path": "agents/hardware-resource-optimizer/tests/simple_endpoint_test.py",
      "sha1": "330ffd9d7c20259bb27220fd7e94199b6ee0fb9e"
    },
    {
      "id": "agents.jarvis-multimodal-ai.app",
      "path": "agents/jarvis-multimodal-ai/app.py",
      "sha1": "fc5debf7a8950854b0dd6dbd90ac0a2a9d939118"
    },
    {
      "id": "agents.ai-agent-orchestrator.enhanced_app",
      "path": "agents/ai-agent-orchestrator/enhanced_app.py",
      "sha1": "961042159c493f1f1b50dae6711ccdd3729c07d3"
    },
    {
      "id": "frontend.agent_health_dashboard",
      "path": "frontend/agent_health_dashboard.py",
      "sha1": "ee3961702f14215d81081661fa9864a8c64e4584"
    },
    {
      "id": "frontend.app",
      "path": "frontend/app.py",
      "sha1": "c65d6e913fa7c702865591ff8e57049e77cb76fd"
    },
    {
      "id": "frontend.components.navigation",
      "path": "frontend/components/navigation.py",
      "sha1": "ecf0ca8c444c059bfba5f691810d6d228a50b2e6"
    },
    {
      "id": "frontend.components.enter_key_handler",
      "path": "frontend/components/enter_key_handler.py",
      "sha1": "cf7dc3267b539d32ae5c791c15bb180ca53f76e5"
    },
    {
      "id": "frontend.components.__init__",
      "path": "frontend/components/__init__.py",
      "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
    },
    {
      "id": "frontend.components.enhanced_ui",
      "path": "frontend/components/enhanced_ui.py",
      "sha1": "20fe9cf5fc5fd91bcd3b20575588cf921f98d9f6"
    },
    {
      "id": "scripts.monitor-ai-services",
      "path": "scripts/monitor-ai-services.py",
      "sha1": "9d22eb9b4dd8baa427f65bf070fde5963f7a934b"
    },
    {
      "id": "scripts.hygiene-system-orchestrator",
      "path": "scripts/hygiene-system-orchestrator.py",
      "sha1": "67d433c23dad9a897839130a85aba0c68605fb0b"
    },
    {
      "id": "scripts.complete-cleanup-and-prepare",
      "path": "scripts/complete-cleanup-and-prepare.py",
      "sha1": "fac0665c41bafb0cc52732ed7b37f93d92cef5ba"
    },
    {
      "id": "scripts.container-health-monitor",
      "path": "scripts/container-health-monitor.py",
      "sha1": "8424c9282334741fff945feaa92c55dbd2e1a019"
    },
    {
      "id": "scripts.export_openapi",
      "path": "scripts/export_openapi.py",
      "sha1": "f38e1694a9e567ce6dbf2ce3758fe5519786102a"
    },
    {
      "id": "scripts.cleanup-old-requirements",
      "path": "scripts/cleanup-old-requirements.py",
      "sha1": "61e36378e6763c039cc76e30ba6975d6b522b298"
    },
    {
      "id": "scripts.generate_docs_inventory",
      "path": "scripts/generate_docs_inventory.py",
      "sha1": "58308ac7e2cdf49a268fd606bc66754c3fc93447"
    },
    {
      "id": "scripts.system-resource-analyzer",
      "path": "scripts/system-resource-analyzer.py",
      "sha1": "7573d7db326b4c9565faf432fe53e8875a1a5938"
    },
    {
      "id": "scripts.coord_bus",
      "path": "scripts/coord_bus.py",
      "sha1": "9df02b5d1afd8f2ed5ac50b3431cdd9543b54cc9"
    },
    {
      "id": "scripts.validate-compliance",
      "path": "scripts/validate-compliance.py",
      "sha1": "fd94a1ee1e5d697b9f853faa4f182debc5af5b3f"
    },
    {
      "id": "scripts.fix-agent-dockerfiles",
      "path": "scripts/fix-agent-dockerfiles.py",
      "sha1": "32c9b1ff2c8a7f6e94ca90ea01df2e7f39310ef5"
    },
    {
      "id": "scripts.smoke_test_jarvis",
      "path": "scripts/smoke_test_jarvis.py",
      "sha1": "46cd8455b1579e0ea38b38c2869302038d678603"
    },
    {
      "id": "scripts.register_with_consul",
      "path": "scripts/register_with_consul.py",
      "sha1": "1009c2808ec5c84a06f9ae6e5bf7103dfe28b8a3"
    },
    {
      "id": "scripts.coordination_tracker",
      "path": "scripts/coordination_tracker.py",
      "sha1": "d9f74a8ab27252b7ffbd4a9b33194b4e3a9cb161"
    },
    {
      "id": "scripts.multi-environment-config-manager",
      "path": "scripts/multi-environment-config-manager.py",
      "sha1": "c05453a9ec51eef03ad1a476da56997b5ea6a9d4"
    },
    {
      "id": "scripts.update-agent-auth",
      "path": "scripts/update-agent-auth.py",
      "sha1": "82d1f46f9831f24f4643978f7b01eac0cdd1a1ea"
    },
    {
      "id": "scripts.distributed-task-queue",
      "path": "scripts/distributed-task-queue.py",
      "sha1": "a20e04d7003c0ef88f4bfea8587806ad4debd0d0"
    },
    {
      "id": "scripts.profile-hygiene-memory",
      "path": "scripts/profile-hygiene-memory.py",
      "sha1": "28ee38ca6c311f9a00b76f586140bf850e779b4d"
    },
    {
      "id": "scripts.dynamic-load-balancer",
      "path": "scripts/dynamic-load-balancer.py",
      "sha1": "6e3ea40cbf21308340921aae3b85e5ad6a701908"
    },
    {
      "id": "scripts.update_approved_ports",
      "path": "scripts/update_approved_ports.py",
      "sha1": "4b024259f937e8391b8795e987efd0b5b19ab171"
    },
    {
      "id": "scripts.demo-hygiene-tests",
      "path": "scripts/demo-hygiene-tests.py",
      "sha1": "e5c9825277d0fc52c8b5fe7066ddf59f255e3457"
    },
    {
      "id": "scripts.generate_secure_secrets",
      "path": "scripts/generate_secure_secrets.py",
      "sha1": "f6004a56adccee3d48d7caf297dce28811bee38f"
    },
    {
      "id": "scripts.migrate-agents-to-ollama",
      "path": "scripts/migrate-agents-to-ollama.py",
      "sha1": "3f594f7b2fd8fa0736ad3038090b86e7dba562ae"
    },
    {
      "id": "scripts.migrate_agent_ports",
      "path": "scripts/migrate_agent_ports.py",
      "sha1": "79ffc3a50840f3844061aa58cce9b33e393240e8"
    },
    {
      "id": "scripts.create-performance-baseline",
      "path": "scripts/create-performance-baseline.py",
      "sha1": "3b24afe64524baa2d93d75b932bcbc1cebcebaf2"
    },
    {
      "id": "scripts.analyze-agent-readiness",
      "path": "scripts/analyze-agent-readiness.py",
      "sha1": "638aa30fba169a4a848d00a8dea7e2c656d030be"
    },
    {
      "id": "scripts.extract_port_mappings",
      "path": "scripts/extract_port_mappings.py",
      "sha1": "91c23a84fcf3fda8c3ce0812cc4036c2cd1bf8d7"
    },
    {
      "id": "scripts.safe-requirements-cleanup",
      "path": "scripts/safe-requirements-cleanup.py",
      "sha1": "4aeb791967bb4ab8bcf82a059839ff8d118190e2"
    },
    {
      "id": "scripts.permanent-health-monitor",
      "path": "scripts/permanent-health-monitor.py",
      "sha1": "4c310c22d56a9aca8a11edb406874fc1b0a928bf"
    },
    {
      "id": "scripts.create-container-requirements-map",
      "path": "scripts/create-container-requirements-map.py",
      "sha1": "c04e506f0e8e4f367d2e6af33ad2989d07ed7d08"
    },
    {
      "id": "scripts.summarize_openapi",
      "path": "scripts/summarize_openapi.py",
      "sha1": "a1e2193f5b354e0f876b55fe6eb3b6285465f6f3"
    },
    {
      "id": "scripts.deployment-monitor",
      "path": "scripts/deployment-monitor.py",
      "sha1": "8d3439f8ed57f7e5aa094fa8db59b1e6f5209d37"
    },
    {
      "id": "scripts.validate_ports",
      "path": "scripts/validate_ports.py",
      "sha1": "8acb9ac4c5ad8eb11f5acd4eb08b84b572ec679b"
    },
    {
      "id": "scripts.analyze-docker-requirements",
      "path": "scripts/analyze-docker-requirements.py",
      "sha1": "95a31326363d583fa19e26af1ac664e5a9a67736"
    },
    {
      "id": "scripts.optimization-validator",
      "path": "scripts/optimization-validator.py",
      "sha1": "83c496ea612a9e16f4824601f25421f2aed496d5"
    },
    {
      "id": "scripts.database_connection_pool_setup",
      "path": "scripts/database_connection_pool_setup.py",
      "sha1": "968a232dcc646cee28fec289da32938ddbac9157"
    },
    {
      "id": "scripts.synthetic-load-test",
      "path": "scripts/synthetic-load-test.py",
      "sha1": "eecaaec461ddab36addc9f972c5119f2c8c96606"
    },
    {
      "id": "scripts.prepare-20-agents",
      "path": "scripts/prepare-20-agents.py",
      "sha1": "a60639c9b47572c318db6adaf0908a3b91f677bf"
    },
    {
      "id": "scripts.distributed-health-monitor",
      "path": "scripts/distributed-health-monitor.py",
      "sha1": "76bd39e2ae2f6fb3b6503bf0ff756c34bffdaef4"
    },
    {
      "id": "scripts.compliance-monitor-core",
      "path": "scripts/compliance-monitor-core.py",
      "sha1": "3475866b284974587890faa335dcdee6f16fcaab"
    },
    {
      "id": "scripts.ultimate-deployment-orchestrator",
      "path": "scripts/ultimate-deployment-orchestrator.py",
      "sha1": "23d60f28fa71d81556a422264e17516cafdf5612"
    },
    {
      "id": "scripts.system-health-validator",
      "path": "scripts/system-health-validator.py",
      "sha1": "037521d97ac5bf1a010487e97a7e3efeed2c1b79"
    },
    {
      "id": "scripts.pin_all_dependencies",
      "path": "scripts/pin_all_dependencies.py",
      "sha1": "a629af2bf415141c12ce83edbab6bab28ca15254"
    },
    {
      "id": "scripts.check_naming",
      "path": "scripts/check_naming.py",
      "sha1": "73e669e756800500d30770b59874d70f60e0e0db"
    },
    {
      "id": "scripts.database_operations",
      "path": "scripts/database_operations.py",
      "sha1": "adf888fabcab279cd248787661e6fcf990d21fcd"
    },
    {
      "id": "scripts.optimize-agent-utilization",
      "path": "scripts/optimize-agent-utilization.py",
      "sha1": "2c39f555fd3b69d7d2bf1ea98b912b98fce89e1b"
    },
    {
      "id": "scripts.bottleneck-eliminator",
      "path": "scripts/bottleneck-eliminator.py",
      "sha1": "1400e05a09a22645c063fa5c00e61940e0bccf7d"
    },
    {
      "id": "scripts.intelligent-cache-system",
      "path": "scripts/intelligent-cache-system.py",
      "sha1": "006c31bcb1a3e8fd9c0e7b5573c146d7d6c615ba"
    },
    {
      "id": "scripts.fix_container_security",
      "path": "scripts/fix_container_security.py",
      "sha1": "0ec3ba6e0cc21d6858f93bd13836adad53edf434"
    },
    {
      "id": "scripts.update-restart-policies",
      "path": "scripts/update-restart-policies.py",
      "sha1": "b766c5450fc426cd17cccea1377a771106eeb5b3"
    },
    {
      "id": "scripts.startup_validator",
      "path": "scripts/startup_validator.py",
      "sha1": "db76e36f5f940b7a990904b6cf4063b22e1dad84"
    },
    {
      "id": "scripts.memory-pool-manager",
      "path": "scripts/memory-pool-manager.py",
      "sha1": "a5680d8078ccf7e8582f2bcd9913a8c6616f36bd"
    },
    {
      "id": "scripts.performance-profiler-suite",
      "path": "scripts/performance-profiler-suite.py",
      "sha1": "92ab48648e859c1ee62dcb1ad3e5a25081567a9a"
    },
    {
      "id": "scripts.validate-production-health",
      "path": "scripts/validate-production-health.py",
      "sha1": "dd4d36c0d71f7ffb86387107dee2e4c4d073501b"
    },
    {
      "id": "scripts.direct_agent_activation",
      "path": "scripts/direct_agent_activation.py",
      "sha1": "ecf16d393615a2ad271251e46970f77c98fc730e"
    },
    {
      "id": "scripts.optimize_ollama",
      "path": "scripts/optimize_ollama.py",
      "sha1": "b496ef479a7a11ff4f61732e1c5689d0e1a45f58"
    },
    {
      "id": "scripts.fix-memory-limits",
      "path": "scripts/fix-memory-limits.py",
      "sha1": "45f67aef6e72efc019408a8f34b42e16a752bf7a"
    },
    {
      "id": "scripts.scan_localhost",
      "path": "scripts/scan_localhost.py",
      "sha1": "49c707537f0e830bd16b2aeaa92977b0be89f104"
    },
    {
      "id": "scripts.hardware-optimization-master",
      "path": "scripts/hardware-optimization-master.py",
      "sha1": "1d81a57f5e366a0714a561bb02eea74ce70804f4"
    },
    {
      "id": "scripts.database_health_check",
      "path": "scripts/database_health_check.py",
      "sha1": "2333336402310d89662a93102e13129e5566128e"
    },
    {
      "id": "scripts.external-service-discovery",
      "path": "scripts/external-service-discovery.py",
      "sha1": "ac190681a21aa4e0a627177593302975e1d2141a"
    },
    {
      "id": "scripts.validate_agents",
      "path": "scripts/validate_agents.py",
      "sha1": "01f6199636374b7957615e6bea10c5bd05a36f8b"
    },
    {
      "id": "scripts.run_hygiene_suite",
      "path": "scripts/run_hygiene_suite.py",
      "sha1": "16b30c325faf6bdea77b10d962017d51aebbffae"
    },
    {
      "id": "scripts.emergency-compliance-fix",
      "path": "scripts/emergency-compliance-fix.py",
      "sha1": "126e8191418490e6fa80168ebc596e1fc7c6e00b"
    },
    {
      "id": "scripts.quick-container-analysis",
      "path": "scripts/quick-container-analysis.py",
      "sha1": "56dd69fecbbc1984c57196837457ed05039506b8"
    },
    {
      "id": "scripts.check_secrets",
      "path": "scripts/check_secrets.py",
      "sha1": "1683d1dbb1f24fa4ec7fd59cc671ca3ad14f9d50"
    },
    {
      "id": "scripts.fix-agent-health-checks",
      "path": "scripts/fix-agent-health-checks.py",
      "sha1": "8d6d308ab996e4c6bd5a7a8274a36a3f3d7d101d"
    },
    {
      "id": "scripts.fix-agent-startup",
      "path": "scripts/fix-agent-startup.py",
      "sha1": "c307fda384b181551ed454d9d3ab230af2e810b5"
    },
    {
      "id": "scripts.verify-hygiene-monitoring-system",
      "path": "scripts/verify-hygiene-monitoring-system.py",
      "sha1": "7c402e8897487917fd82ceaecbf2b8bf2ed27823"
    },
    {
      "id": "scripts.launch_local_agents",
      "path": "scripts/launch_local_agents.py",
      "sha1": "b532b2a3c41c033f1f1b6fc5835e11b0c150c064"
    },
    {
      "id": "scripts.hygiene-enforcement-coordinator",
      "path": "scripts/hygiene-enforcement-coordinator.py",
      "sha1": "ce29a05610813ff9837cd72399c5543e320946bd"
    },
    {
      "id": "scripts.performance-monitor",
      "path": "scripts/performance-monitor.py",
      "sha1": "1ca23120d938a77aff564aa7348c995080ba374d"
    },
    {
      "id": "scripts.verify_claude_rules",
      "path": "scripts/verify_claude_rules.py",
      "sha1": "9c097b2b28eb826af64390a035e7baf127996ad3"
    },
    {
      "id": "scripts.performance-optimization",
      "path": "scripts/performance-optimization.py",
      "sha1": "a7570d22b3fa8584c1601510431f1e98fd49dff8"
    },
    {
      "id": "scripts.fix-agent-deployment-issues",
      "path": "scripts/fix-agent-deployment-issues.py",
      "sha1": "cbd5c3a19854ce386f55b34f75bc3046275d27e1"
    },
    {
      "id": "scripts.fix-agent-app-files",
      "path": "scripts/fix-agent-app-files.py",
      "sha1": "96fdbd96eb0260d39e02dad2a3d3cfe741940891"
    },
    {
      "id": "scripts.ai-performance-validator",
      "path": "scripts/ai-performance-validator.py",
      "sha1": "356f715a4824a3fa78d3f38620b8eb56798044f9"
    },
    {
      "id": "scripts.final-system-validation",
      "path": "scripts/final-system-validation.py",
      "sha1": "72f47b813b855440cd4055d7fd4b0bf02803f892"
    },
    {
      "id": "scripts.hygiene-monitor",
      "path": "scripts/hygiene-monitor.py",
      "sha1": "b555629e18faecd8283c33c32a911dbb6454d957"
    },
    {
      "id": "scripts.validate-container-infrastructure",
      "path": "scripts/validate-container-infrastructure.py",
      "sha1": "8f2eae9b141030112e6387781610dc96eb76d90f"
    },
    {
      "id": "scripts.activate_all_agents",
      "path": "scripts/activate_all_agents.py",
      "sha1": "0347e6db65c8eefd45cf5a1a268d7bfd8022c815"
    },
    {
      "id": "scripts.fix-hygiene-memory-leak",
      "path": "scripts/fix-hygiene-memory-leak.py",
      "sha1": "2ea9d5b37e12fcde32dee9467b79ff9de3e1bc67"
    },
    {
      "id": "scripts.infrastructure-monitor",
      "path": "scripts/infrastructure-monitor.py",
      "sha1": "354ee534714e7b0ec273d866da7b1033208555a2"
    },
    {
      "id": "scripts.startup_optimizer",
      "path": "scripts/startup_optimizer.py",
      "sha1": "707fec87162f1474bad8631c8d74056af059c5e6"
    },
    {
      "id": "scripts.garbage-collection-monitor",
      "path": "scripts/garbage-collection-monitor.py",
      "sha1": "6611b97fe61c15203b682452593fdd63750ee4c8"
    },
    {
      "id": "scripts.advanced-rollback-system",
      "path": "scripts/advanced-rollback-system.py",
      "sha1": "66d88299e06573982942e144045ad3b65b94b5b6"
    },
    {
      "id": "scripts.audit_docs",
      "path": "scripts/audit_docs.py",
      "sha1": "15c42ea8d2d8d37465a558ed2d7883a6dde11e30"
    },
    {
      "id": "scripts.neo4j-performance-monitor",
      "path": "scripts/neo4j-performance-monitor.py",
      "sha1": "3fc62249ffe8d93e52a582a8e337cec16fabd755"
    },
    {
      "id": "scripts.ultimate-deployment-master",
      "path": "scripts/ultimate-deployment-master.py",
      "sha1": "5ae71daace13889196803994ed2ae320c4575e8d"
    },
    {
      "id": "scripts.validate-complete-system",
      "path": "scripts/validate-complete-system.py",
      "sha1": "9d271b205c7fe6478cc94dea7c9e26756f7312d0"
    },
    {
      "id": "scripts.enforce_claude_md_simple",
      "path": "scripts/enforce_claude_md_simple.py",
      "sha1": "a31fb1ba3c078b3f9d4353e38a07aa7febecc6b9"
    },
    {
      "id": "scripts.standardize-requirements",
      "path": "scripts/standardize-requirements.py",
      "sha1": "6aa60e60c0a0f49acbb9e16735b36d3d979391db"
    },
    {
      "id": "scripts.enforce_claude_md_rules",
      "path": "scripts/enforce_claude_md_rules.py",
      "sha1": "0c97f340038e5900be129dfcbf0e71db200b2447"
    },
    {
      "id": "scripts.distributed-autoscaler",
      "path": "scripts/distributed-autoscaler.py",
      "sha1": "57deb1032e3b433c3e04983a5299dd8814b7b2e2"
    },
    {
      "id": "scripts.resource-pool-coordinator",
      "path": "scripts/resource-pool-coordinator.py",
      "sha1": "22b3bf28d696d2f4263ce43e366fd7d07d5908ac"
    },
    {
      "id": "scripts.validate_security_remediation",
      "path": "scripts/validate_security_remediation.py",
      "sha1": "d8b6f8494788bcc13b98ef7a35cbdf671fb22f0b"
    },
    {
      "id": "scripts.check_requirements",
      "path": "scripts/check_requirements.py",
      "sha1": "e03ac2ad5b6ccd4480490fb5310e93f6d996bfa8"
    },
    {
      "id": "scripts.requirements_analyzer",
      "path": "scripts/requirements_analyzer.py",
      "sha1": "3321672baea7f0dbf24af3d55999b0ca74343984"
    },
    {
      "id": "scripts.check_banned_keywords",
      "path": "scripts/check_banned_keywords.py",
      "sha1": "224cfc9e4a187a5c7c0aadaa7b6498c4f406b099"
    },
    {
      "id": "scripts.garbage-collection-system",
      "path": "scripts/garbage-collection-system.py",
      "sha1": "8d3491b883fae4d1cb9f3a09b0ccb88fcca180d1"
    },
    {
      "id": "scripts.optimize-ollama-performance",
      "path": "scripts/optimize-ollama-performance.py",
      "sha1": "595a0861f8a6c08f6f7be6190ed52a44d7cfc928"
    },
    {
      "id": "scripts.comprehensive-agent-health-monitor",
      "path": "scripts/comprehensive-agent-health-monitor.py",
      "sha1": "389c3278db425804ad977a6edb1ffe0bfb1d5305"
    },
    {
      "id": "scripts.validate_security_improvements",
      "path": "scripts/validate_security_improvements.py",
      "sha1": "7e1170314b240ce6075afaa371ab4086ca4cba2a"
    },
    {
      "id": "scripts.fix-critical-agents",
      "path": "scripts/fix-critical-agents.py",
      "sha1": "bc6f54cbad3fc7f143b59538a3a2be8c03fa562b"
    },
    {
      "id": "scripts.remove_hardcoded_secrets",
      "path": "scripts/remove_hardcoded_secrets.py",
      "sha1": "be13fc1a7f5b62ec305a3a3cc2976717d6b8ebeb"
    },
    {
      "id": "scripts.ai-runtime-init",
      "path": "scripts/ai-runtime-init.py",
      "sha1": "58508aa5bc58656f88a2c2fc200df0ff6e8992e4"
    },
    {
      "id": "scripts.static_discovery",
      "path": "scripts/static_discovery.py",
      "sha1": "7da3fe39da8bb693c6506af9bc9778b146721ded"
    },
    {
      "id": "scripts.create-base-image-strategy",
      "path": "scripts/create-base-image-strategy.py",
      "sha1": "c14ce04add72656f04547f12b09f4e3b2bcb9389"
    },
    {
      "id": "scripts.orchestration.master-orchestrator",
      "path": "scripts/orchestration/master-orchestrator.py",
      "sha1": "8a0377a9420ea2f5d203fe9bddabf9464d58fb45"
    },
    {
      "id": "scripts.backup-automation.sutazai-backup-orchestrator",
      "path": "scripts/backup-automation/sutazai-backup-orchestrator.py",
      "sha1": "4b62dd4e307a49fef465269b55a61d67c2fb1b29"
    },
    {
      "id": "scripts.backup-automation.core.database-backup-system",
      "path": "scripts/backup-automation/core/database-backup-system.py",
      "sha1": "3092399ca63fd84ebb3a74258086d34ef2def1ea"
    },
    {
      "id": "scripts.backup-automation.restore.restore-testing-system",
      "path": "scripts/backup-automation/restore/restore-testing-system.py",
      "sha1": "40394827ca881926c6d6a15bf551dcaa87b8411e"
    },
    {
      "id": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "path": "scripts/backup-automation/offsite/offsite-backup-replication-system.py",
      "sha1": "00d8e6f2d5f6a8d8fd7c977d5446c106a2fbbb36"
    },
    {
      "id": "scripts.backup-automation.models.ollama-model-backup-system",
      "path": "scripts/backup-automation/models/ollama-model-backup-system.py",
      "sha1": "9f16dc894d89b05764622f9105a4d16fbffca3f7"
    },
    {
      "id": "scripts.backup-automation.verification.backup-verification-system",
      "path": "scripts/backup-automation/verification/backup-verification-system.py",
      "sha1": "c90414beb5e038e0a72b769d31141990d2d21f2f"
    },
    {
      "id": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "path": "scripts/backup-automation/monitoring/monitoring-data-retention-system.py",
      "sha1": "919542d288b5ccf7dcf690b714039b5db8091658"
    },
    {
      "id": "scripts.backup-automation.agents.agent-state-backup-system",
      "path": "scripts/backup-automation/agents/agent-state-backup-system.py",
      "sha1": "282670260662386737fe971446fe2a328c24187a"
    },
    {
      "id": "scripts.backup-automation.config.config-backup-system",
      "path": "scripts/backup-automation/config/config-backup-system.py",
      "sha1": "588c4a6d6c9c362c924b24f19206e9f523b9e1cd"
    },
    {
      "id": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "path": "scripts/backup-automation/alerts/backup-monitoring-alerting-system.py",
      "sha1": "f693abe8edf602535b15683b00d457883be1670b"
    },
    {
      "id": "scripts.backup-automation.utils.backup-status-checker",
      "path": "scripts/backup-automation/utils/backup-status-checker.py",
      "sha1": "d57b2c57a0c8c4fdcae1e5ade751f5985f3b7db1"
    },
    {
      "id": "scripts.devops.check_services_health",
      "path": "scripts/devops/check_services_health.py",
      "sha1": "338eceb0b66b1a419631c4a14b9954146b8d71ce"
    },
    {
      "id": "scripts.devops.health_check_gateway",
      "path": "scripts/devops/health_check_gateway.py",
      "sha1": "cbb4d64668d3b8ea66341b2f1d8c3c76220b3682"
    },
    {
      "id": "scripts.devops.health_check_ollama",
      "path": "scripts/devops/health_check_ollama.py",
      "sha1": "e76481bf2b7d7d062764190891931574fbfe2075"
    },
    {
      "id": "scripts.devops.health_check_dataservices",
      "path": "scripts/devops/health_check_dataservices.py",
      "sha1": "35bb54dd92269a38faaac43c406f24afeadea759"
    },
    {
      "id": "scripts.devops.infrastructure_health_check",
      "path": "scripts/devops/infrastructure_health_check.py",
      "sha1": "1b11316258ea08f561f8b48f2dd667ad0cf6b477"
    },
    {
      "id": "scripts.devops.health_check_monitoring",
      "path": "scripts/devops/health_check_monitoring.py",
      "sha1": "03a63c6647ffda19b29ae77affca9835c179585b"
    },
    {
      "id": "scripts.devops.health_check_vectordb",
      "path": "scripts/devops/health_check_vectordb.py",
      "sha1": "b564e2b8f5989580c57f143e4c8889d49c3dbf13"
    },
    {
      "id": "scripts.pre-commit.check-script-organization",
      "path": "scripts/pre-commit/check-script-organization.py",
      "sha1": "5b26d7c8b950c12da4c6103589cd6724087b7a33"
    },
    {
      "id": "scripts.pre-commit.check-changelog-updated",
      "path": "scripts/pre-commit/check-changelog-updated.py",
      "sha1": "17e6d218a1c998ab0b54ee06c97b227845a2898b"
    },
    {
      "id": "scripts.pre-commit.check-agent-usage",
      "path": "scripts/pre-commit/check-agent-usage.py",
      "sha1": "9b60cde5cc022567928e3435807dbbb7b0d585ce"
    },
    {
      "id": "scripts.pre-commit.check-directory-duplication",
      "path": "scripts/pre-commit/check-directory-duplication.py",
      "sha1": "821b0b77f1180dec8aca5a61aaad9c0b02226a12"
    },
    {
      "id": "scripts.pre-commit.check-docker-structure",
      "path": "scripts/pre-commit/check-docker-structure.py",
      "sha1": "cf1e433dceb3c334b7af2d902acf8f60c98c99fe"
    },
    {
      "id": "scripts.pre-commit.quick-system-check",
      "path": "scripts/pre-commit/quick-system-check.py",
      "sha1": "2dd93a3cee172a97d74e111a1c6362f06d6feee1"
    },
    {
      "id": "scripts.pre-commit.check-llm-usage",
      "path": "scripts/pre-commit/check-llm-usage.py",
      "sha1": "6a69713d6ea0fbf198ce65aa146827aaeb4cc0d1"
    },
    {
      "id": "scripts.pre-commit.check-garbage-files",
      "path": "scripts/pre-commit/check-garbage-files.py",
      "sha1": "b94487b32b76883ebe96f3fdcde3f6ea569c6ed6"
    },
    {
      "id": "scripts.pre-commit.check-safe-deletion",
      "path": "scripts/pre-commit/check-safe-deletion.py",
      "sha1": "26fbda0f334fcb5d1ed8f0996d70352ae0923b39"
    },
    {
      "id": "scripts.pre-commit.check-doc-duplication",
      "path": "scripts/pre-commit/check-doc-duplication.py",
      "sha1": "ac2387ad4523a5036c0d48bfc5fa6272a827bad4"
    },
    {
      "id": "scripts.pre-commit.check-python-docs",
      "path": "scripts/pre-commit/check-python-docs.py",
      "sha1": "9039e82803d4e34c2ccf399fe85b8006aa311d52"
    },
    {
      "id": "scripts.pre-commit.check-deployment-scripts",
      "path": "scripts/pre-commit/check-deployment-scripts.py",
      "sha1": "0ab36345bd27964767dc56847a57ef9b2e38983f"
    },
    {
      "id": "scripts.pre-commit.check-conceptual-elements",
      "path": "scripts/pre-commit/check-conceptual-elements.py",
      "sha1": "709a1d8eb7e508e48b8a253254e06f6958b273dc"
    },
    {
      "id": "scripts.pre-commit.check-breaking-changes",
      "path": "scripts/pre-commit/check-breaking-changes.py",
      "sha1": "bdd5bb5409072dcfc261d2f19aa6fcbfcbfe314d"
    },
    {
      "id": "scripts.pre-commit.check-doc-structure",
      "path": "scripts/pre-commit/check-doc-structure.py",
      "sha1": "008551678930b9384748b13bdc02af68cb59d080"
    },
    {
      "id": "scripts.pre-commit.check-script-duplication",
      "path": "scripts/pre-commit/check-script-duplication.py",
      "sha1": "a440a66040b761a2b63e35dd821506793bddb8b3"
    },
    {
      "id": "scripts.lib.file_utils",
      "path": "scripts/lib/file_utils.py",
      "sha1": "7ddd31611fce087f4bd8f206b337f020655942d6"
    },
    {
      "id": "scripts.lib.logging_utils",
      "path": "scripts/lib/logging_utils.py",
      "sha1": "756bc44b126d2022ea6bf885a276a89bbd6c80ea"
    },
    {
      "id": "scripts.automation.analyze_docker_builds",
      "path": "scripts/automation/analyze_docker_builds.py",
      "sha1": "c194f66979d56acf0cadc10c662e449625426008"
    },
    {
      "id": "scripts.cleanup.post_status",
      "path": "scripts/cleanup/post_status.py",
      "sha1": "d2d1f421c16d6b07f7d85703a3c23034fef21fc1"
    },
    {
      "id": "scripts.cleanup.analyze_duplicates",
      "path": "scripts/cleanup/analyze_duplicates.py",
      "sha1": "0936c856baa7b39bbc828415f7652383d408a42c"
    },
    {
      "id": "scripts.cleanup.discovery",
      "path": "scripts/cleanup/discovery.py",
      "sha1": "235466ead2846dc8856f6e872b818113029cba7a"
    },
    {
      "id": "scripts.onboarding.generate_kickoff_deck",
      "path": "scripts/onboarding/generate_kickoff_deck.py",
      "sha1": "03e418758ddfed3d67fb8823422ab7fc6005331f"
    },
    {
      "id": "scripts.infrastructure.resource-enforcer",
      "path": "scripts/infrastructure/resource-enforcer.py",
      "sha1": "ea106823f0b9bf51803d5e0b48f474ee7a17065d"
    },
    {
      "id": "scripts.models.ollama.update_agent_configs_to_gpt-oss",
      "path": "scripts/models/ollama/update_agent_configs_to_gpt-oss.py",
      "sha1": "942776ea39fa433b2ba3b2ba7225d4fb785a9f84"
    },
    {
      "id": "scripts.monitoring.comprehensive_monitor_validation",
      "path": "scripts/monitoring/comprehensive_monitor_validation.py",
      "sha1": "1dd3a52860720655a3488fc9dccdb1edbd007b45"
    },
    {
      "id": "scripts.monitoring.static_monitor",
      "path": "scripts/monitoring/static_monitor.py",
      "sha1": "8f007e7f30dce570a4fecb96058ca7fca4c00051"
    },
    {
      "id": "scripts.monitoring.continuous-compliance-monitor",
      "path": "scripts/monitoring/continuous-compliance-monitor.py",
      "sha1": "398729ffb454d6fddb6db0da14d49adc87447dcc"
    },
    {
      "id": "scripts.monitoring.simple_validation",
      "path": "scripts/monitoring/simple_validation.py",
      "sha1": "dd1059b488ccb6171436f61e5fd7c4a0beaf5f9b"
    },
    {
      "id": "scripts.monitoring.enhanced-compliance-monitor",
      "path": "scripts/monitoring/enhanced-compliance-monitor.py",
      "sha1": "c7e75b49cdf91a98ac37369c00b5b55ca74e25e7"
    },
    {
      "id": "scripts.monitoring.validation_report",
      "path": "scripts/monitoring/validation_report.py",
      "sha1": "47d19d67b4e75e7d9326de18cc837f985b903da3"
    },
    {
      "id": "scripts.monitoring.test_hardware_agent_detection",
      "path": "scripts/monitoring/test_hardware_agent_detection.py",
      "sha1": "d7d5a3f1fd5da89f9151917aba8f6f2d94332644"
    },
    {
      "id": "scripts.monitoring.test_enhanced_monitor",
      "path": "scripts/monitoring/test_enhanced_monitor.py",
      "sha1": "6840c5e603746d1b4a289c6c90fda70af50b1fd7"
    },
    {
      "id": "scripts.monitoring.identify_working_method",
      "path": "scripts/monitoring/identify_working_method.py",
      "sha1": "981537e778aab3c4cbda46b6689ebed2410e8caa"
    },
    {
      "id": "scripts.monitoring.check-python-headers",
      "path": "scripts/monitoring/check-python-headers.py",
      "sha1": "44edf49c3cf1b0446c471c4a903bf7a5b94f18f1"
    },
    {
      "id": "scripts.monitoring.test_gpu_detection",
      "path": "scripts/monitoring/test_gpu_detection.py",
      "sha1": "b1e16a288320d800bc413f177d80678302d70d23"
    },
    {
      "id": "scripts.monitoring.demo_enhanced_monitor",
      "path": "scripts/monitoring/demo_enhanced_monitor.py",
      "sha1": "f83ff24b241f389d9af02463961e3badb0075a4b"
    },
    {
      "id": "scripts.monitoring.agent-activation-monitor",
      "path": "scripts/monitoring/agent-activation-monitor.py",
      "sha1": "23a16c387647160f05f808707e5c71dcba1a96af"
    },
    {
      "id": "scripts.monitoring.test_static_monitor",
      "path": "scripts/monitoring/test_static_monitor.py",
      "sha1": "f1beb79eb06fdef1fdaab6f6fafd512e13ef87cd"
    },
    {
      "id": "scripts.monitoring.test_static_monitor_simple",
      "path": "scripts/monitoring/test_static_monitor_simple.py",
      "sha1": "3b6bc30d66f5a887d6da1afc3dedae09cb811994"
    },
    {
      "id": "scripts.monitoring.monthly-cleanup",
      "path": "scripts/monitoring/monthly-cleanup.py",
      "sha1": "72006e400701e905753d2d8cc049c5cdee21db13"
    },
    {
      "id": "scripts.monitoring.integration-test",
      "path": "scripts/monitoring/integration-test.py",
      "sha1": "fc82b0a6094a86276781d4c7f01c1113b088fcf1"
    },
    {
      "id": "scripts.monitoring.test_hardware_optimizer_detection",
      "path": "scripts/monitoring/test_hardware_optimizer_detection.py",
      "sha1": "25e74f3635839352e19440c40c187b77969b63be"
    },
    {
      "id": "scripts.monitoring.test_agent_detection",
      "path": "scripts/monitoring/test_agent_detection.py",
      "sha1": "b180221196bbf2361bc1bbcde45d1666656c9a27"
    },
    {
      "id": "scripts.monitoring.debug_hardware_optimizer",
      "path": "scripts/monitoring/debug_hardware_optimizer.py",
      "sha1": "255acf1800616d95a7248a841faef217b2a3ea6d"
    },
    {
      "id": "scripts.monitoring.final_validation",
      "path": "scripts/monitoring/final_validation.py",
      "sha1": "844de8477c7b0150d16a704511e19c5bbc47d17c"
    },
    {
      "id": "scripts.monitoring.multi-system-integration-framework",
      "path": "scripts/monitoring/multi-system-integration-framework.py",
      "sha1": "7826e856628d8034a2d36c9b86ce715ca6df5c03"
    },
    {
      "id": "scripts.monitoring.production-readiness-validator",
      "path": "scripts/monitoring/production-readiness-validator.py",
      "sha1": "b30294a29f709aeaff752db4e3bbacfb53ae31de"
    },
    {
      "id": "scripts.enforcement.rule13_garbage_collector",
      "path": "scripts/enforcement/rule13_garbage_collector.py",
      "sha1": "36c0df3ba4d896f5a4c618cb94a852b311a81d02"
    },
    {
      "id": "scripts.service-mesh.optimize-load-balancing",
      "path": "scripts/service-mesh/optimize-load-balancing.py",
      "sha1": "6aec923eadf402fbb07ff0eb6bfbb610cd80c458"
    },
    {
      "id": "scripts.service-mesh.configure-fault-tolerance",
      "path": "scripts/service-mesh/configure-fault-tolerance.py",
      "sha1": "0ba933e09ca9ccacdebfac38c220bf1dca7147b5"
    },
    {
      "id": "scripts.service-mesh.service-discovery-client",
      "path": "scripts/service-mesh/service-discovery-client.py",
      "sha1": "7c9ea8c078899929d2341acf4aa0a76adacfaeaf"
    },
    {
      "id": "scripts.service-mesh.configure-rabbitmq",
      "path": "scripts/service-mesh/configure-rabbitmq.py",
      "sha1": "0d729b4b2cd182c908dca77d56318fb282879cfd"
    },
    {
      "id": "scripts.service-mesh.register-services",
      "path": "scripts/service-mesh/register-services.py",
      "sha1": "7af556db01fff8e4d5c830a4175c936b3dafe55c"
    },
    {
      "id": "scripts.service-mesh.service-mesh-orchestrator",
      "path": "scripts/service-mesh/service-mesh-orchestrator.py",
      "sha1": "598c55d2536d0aaaf1dcec32c0e08dfe42900e4c"
    },
    {
      "id": "scripts.service-mesh.validate-service-mesh",
      "path": "scripts/service-mesh/validate-service-mesh.py",
      "sha1": "a25fb31a636c796385858ab2e07b4084ba1a51db"
    },
    {
      "id": "scripts.service-mesh.configure-kong",
      "path": "scripts/service-mesh/configure-kong.py",
      "sha1": "277c63982ac2526998181a2252ad6ba1294115f2"
    },
    {
      "id": "scripts.service-mesh.test-service-communication",
      "path": "scripts/service-mesh/test-service-communication.py",
      "sha1": "5aa09adf99195dab368d63e5a4a34582ccbb8a61"
    },
    {
      "id": "scripts.service-mesh.health-check-server",
      "path": "scripts/service-mesh/health-check-server.py",
      "sha1": "e943c12e08cc4d21af1f9f6e971f6541c3c3ee5e"
    },
    {
      "id": "scripts.deploy.manage-environments",
      "path": "scripts/deploy/manage-environments.py",
      "sha1": "92d9c0a3fd2bf5db7bd8ed0f87e788b0e9dcd1b2"
    },
    {
      "id": "scripts.mesh.tail_results",
      "path": "scripts/mesh/tail_results.py",
      "sha1": "8810785f9cb5a210f323b188f63104ae8e166026"
    },
    {
      "id": "scripts.mesh.agent_stream_consumer",
      "path": "scripts/mesh/agent_stream_consumer.py",
      "sha1": "d763a9552fab07a141437afe3733c0e8c32a63b5"
    },
    {
      "id": "scripts.mesh.enqueue_task",
      "path": "scripts/mesh/enqueue_task.py",
      "sha1": "93480daf9fe45f56a550a575f821d272ceabe8d1"
    },
    {
      "id": "scripts.utils.coverage_reporter",
      "path": "scripts/utils/coverage_reporter.py",
      "sha1": "21ded6f82be63750713e6d0c15596f704941b7b9"
    },
    {
      "id": "scripts.utils.memory_cleanup_service",
      "path": "scripts/utils/memory_cleanup_service.py",
      "sha1": "fd09a7554943447cfd1ea759e7c08a888332de0b"
    },
    {
      "id": "scripts.utils.health_monitor",
      "path": "scripts/utils/health_monitor.py",
      "sha1": "4873e6a9e44bcc805380d26248dcfb5f75011b12"
    },
    {
      "id": "scripts.utils.remove_litellm_from_registry",
      "path": "scripts/utils/remove_litellm_from_registry.py",
      "sha1": "3a13f37e58dc185e7e6b0d98d3a2011a8d3e453c"
    },
    {
      "id": "scripts.utils.ollama_memory_optimizer",
      "path": "scripts/utils/ollama_memory_optimizer.py",
      "sha1": "d16e557ab8caec6c1c34dc6cf3bb2a96fd4db17e"
    },
    {
      "id": "scripts.utils.otp_override",
      "path": "scripts/utils/otp_override.py",
      "sha1": "a30c45315db19414c6c1026804edb659a4e8af7c"
    },
    {
      "id": "scripts.utils.optimize_transformers",
      "path": "scripts/utils/optimize_transformers.py",
      "sha1": "61b8020c3706e172043ac12714525ee7b28217b2"
    },
    {
      "id": "scripts.utils.ensure_changelogs",
      "path": "scripts/utils/ensure_changelogs.py",
      "sha1": "d2199bac4e9752b8649052d896cc42422937b26d"
    },
    {
      "id": "scripts.utils.compact_monitor",
      "path": "scripts/utils/compact_monitor.py",
      "sha1": "90926d171793a42f597a4719af2ab69d9e49e5f5"
    },
    {
      "id": "scripts.utils.add_claude_md_directive",
      "path": "scripts/utils/add_claude_md_directive.py",
      "sha1": "77a8bb8db3ee1d86cf829c993646796781596257"
    },
    {
      "id": "scripts.utils.generate_architecture_diagram",
      "path": "scripts/utils/generate_architecture_diagram.py",
      "sha1": "ab7ad20e25bc3abd8e293077ca4b59923b10450f"
    },
    {
      "id": "scripts.utils.dependency_analyzer",
      "path": "scripts/utils/dependency_analyzer.py",
      "sha1": "91d858ab0fee6b8208b868af143f76bfe4bbbeff"
    },
    {
      "id": "scripts.utils.docs_fix_all_issues",
      "path": "scripts/utils/docs_fix_all_issues.py",
      "sha1": "5270b4987b6b219d7aa85e12de5e53996f6449cc"
    }
  ],
  "edges": [
    {
      "from": "agents.agent_base",
      "to": "asyncio"
    },
    {
      "from": "agents.agent_base",
      "to": "datetime"
    },
    {
      "from": "agents.agent_base",
      "to": "json"
    },
    {
      "from": "agents.agent_base",
      "to": "logging"
    },
    {
      "from": "agents.agent_base",
      "to": "os"
    },
    {
      "from": "agents.agent_base",
      "to": "requests"
    },
    {
      "from": "agents.agent_base",
      "to": "sys"
    },
    {
      "from": "agents.agent_base",
      "to": "threading"
    },
    {
      "from": "agents.agent_base",
      "to": "time"
    },
    {
      "from": "agents.agent_base",
      "to": "typing"
    },
    {
      "from": "agents.agent_with_health",
      "to": "asyncio"
    },
    {
      "from": "agents.agent_with_health",
      "to": "backend"
    },
    {
      "from": "agents.agent_with_health",
      "to": "dataclasses"
    },
    {
      "from": "agents.agent_with_health",
      "to": "datetime"
    },
    {
      "from": "agents.agent_with_health",
      "to": "http"
    },
    {
      "from": "agents.agent_with_health",
      "to": "json"
    },
    {
      "from": "agents.agent_with_health",
      "to": "logging"
    },
    {
      "from": "agents.agent_with_health",
      "to": "os"
    },
    {
      "from": "agents.agent_with_health",
      "to": "requests"
    },
    {
      "from": "agents.agent_with_health",
      "to": "socketserver"
    },
    {
      "from": "agents.agent_with_health",
      "to": "threading"
    },
    {
      "from": "agents.agent_with_health",
      "to": "time"
    },
    {
      "from": "agents.agent_with_health",
      "to": "typing"
    },
    {
      "from": "agents.agent_with_health",
      "to": "urllib"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "asyncio"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "contextlib"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "datetime"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "fastapi"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "httpx"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "json"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "logging"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "os"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "pika"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "pydantic"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "re"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "redis"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "typing"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "uuid"
    },
    {
      "from": "agents.ai-agent-orchestrator.enhanced_app",
      "to": "uvicorn"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "asyncio"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "collections"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "contextlib"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "core"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "datetime"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "fastapi"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "httpx"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "json"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "logging"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "os"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "pydantic"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "redis"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "sys"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "typing"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "uuid"
    },
    {
      "from": "agents.ai_agent_orchestrator.app",
      "to": "uvicorn"
    },
    {
      "from": "agents.ai_agent_orchestrator.metrics",
      "to": "agents"
    },
    {
      "from": "agents.base_agent",
      "to": "asyncio"
    },
    {
      "from": "agents.base_agent",
      "to": "datetime"
    },
    {
      "from": "agents.base_agent",
      "to": "httpx"
    },
    {
      "from": "agents.base_agent",
      "to": "json"
    },
    {
      "from": "agents.base_agent",
      "to": "os"
    },
    {
      "from": "agents.base_agent",
      "to": "typing"
    },
    {
      "from": "agents.compatibility_base_agent",
      "to": "agents"
    },
    {
      "from": "agents.compatibility_base_agent",
      "to": "core"
    },
    {
      "from": "agents.compatibility_base_agent",
      "to": "logging"
    },
    {
      "from": "agents.container_startup",
      "to": "agents"
    },
    {
      "from": "agents.container_startup",
      "to": "asyncio"
    },
    {
      "from": "agents.container_startup",
      "to": "fastapi"
    },
    {
      "from": "agents.container_startup",
      "to": "importlib"
    },
    {
      "from": "agents.container_startup",
      "to": "logging"
    },
    {
      "from": "agents.container_startup",
      "to": "os"
    },
    {
      "from": "agents.container_startup",
      "to": "pathlib"
    },
    {
      "from": "agents.container_startup",
      "to": "sys"
    },
    {
      "from": "agents.container_startup",
      "to": "typing"
    },
    {
      "from": "agents.container_startup",
      "to": "uvicorn"
    },
    {
      "from": "agents.coordinator.app",
      "to": "agents"
    },
    {
      "from": "agents.coordinator.app",
      "to": "asyncio"
    },
    {
      "from": "agents.coordinator.app",
      "to": "collections"
    },
    {
      "from": "agents.coordinator.app",
      "to": "datetime"
    },
    {
      "from": "agents.coordinator.app",
      "to": "enum"
    },
    {
      "from": "agents.coordinator.app",
      "to": "json"
    },
    {
      "from": "agents.coordinator.app",
      "to": "logging"
    },
    {
      "from": "agents.coordinator.app",
      "to": "os"
    },
    {
      "from": "agents.coordinator.app",
      "to": "schemas"
    },
    {
      "from": "agents.coordinator.app",
      "to": "sys"
    },
    {
      "from": "agents.coordinator.app",
      "to": "typing"
    },
    {
      "from": "agents.coordinator.app",
      "to": "uuid"
    },
    {
      "from": "agents.coordinator.app",
      "to": "yaml"
    },
    {
      "from": "agents.coordinator.metrics",
      "to": "agents"
    },
    {
      "from": "agents.core.__init__",
      "to": "asyncio"
    },
    {
      "from": "agents.core.__init__",
      "to": "base_agent_v2"
    },
    {
      "from": "agents.core.__init__",
      "to": "circuit_breaker"
    },
    {
      "from": "agents.core.__init__",
      "to": "httpx"
    },
    {
      "from": "agents.core.__init__",
      "to": "logging"
    },
    {
      "from": "agents.core.__init__",
      "to": "migration_helper"
    },
    {
      "from": "agents.core.__init__",
      "to": "ollama_integration"
    },
    {
      "from": "agents.core.__init__",
      "to": "ollama_pool"
    },
    {
      "from": "agents.core.__init__",
      "to": "os"
    },
    {
      "from": "agents.core.__init__",
      "to": "request_queue"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "asyncio"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "circuit_breaker"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "contextlib"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "datetime"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "enum"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "httpx"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "json"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "logging"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "ollama_integration"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "ollama_pool"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "os"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "request_queue"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "signal"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "sys"
    },
    {
      "from": "agents.core.base_agent_v2",
      "to": "typing"
    },
    {
      "from": "agents.core.circuit_breaker",
      "to": "asyncio"
    },
    {
      "from": "agents.core.circuit_breaker",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.circuit_breaker",
      "to": "datetime"
    },
    {
      "from": "agents.core.circuit_breaker",
      "to": "enum"
    },
    {
      "from": "agents.core.circuit_breaker",
      "to": "functools"
    },
    {
      "from": "agents.core.circuit_breaker",
      "to": "httpx"
    },
    {
      "from": "agents.core.circuit_breaker",
      "to": "inspect"
    },
    {
      "from": "agents.core.circuit_breaker",
      "to": "logging"
    },
    {
      "from": "agents.core.circuit_breaker",
      "to": "time"
    },
    {
      "from": "agents.core.circuit_breaker",
      "to": "typing"
    },
    {
      "from": "agents.core.context_manager",
      "to": "asyncio"
    },
    {
      "from": "agents.core.context_manager",
      "to": "collections"
    },
    {
      "from": "agents.core.context_manager",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.context_manager",
      "to": "datetime"
    },
    {
      "from": "agents.core.context_manager",
      "to": "hashlib"
    },
    {
      "from": "agents.core.context_manager",
      "to": "json"
    },
    {
      "from": "agents.core.context_manager",
      "to": "logging"
    },
    {
      "from": "agents.core.context_manager",
      "to": "numpy"
    },
    {
      "from": "agents.core.context_manager",
      "to": "time"
    },
    {
      "from": "agents.core.context_manager",
      "to": "typing"
    },
    {
      "from": "agents.core.example_usage",
      "to": "agent_base"
    },
    {
      "from": "agents.core.example_usage",
      "to": "asyncio"
    },
    {
      "from": "agents.core.example_usage",
      "to": "core"
    },
    {
      "from": "agents.core.example_usage",
      "to": "logging"
    },
    {
      "from": "agents.core.example_usage",
      "to": "os"
    },
    {
      "from": "agents.core.example_usage",
      "to": "sys"
    },
    {
      "from": "agents.core.example_usage",
      "to": "typing"
    },
    {
      "from": "agents.core.messaging",
      "to": "aio_pika"
    },
    {
      "from": "agents.core.messaging",
      "to": "asyncio"
    },
    {
      "from": "agents.core.messaging",
      "to": "datetime"
    },
    {
      "from": "agents.core.messaging",
      "to": "enum"
    },
    {
      "from": "agents.core.messaging",
      "to": "json"
    },
    {
      "from": "agents.core.messaging",
      "to": "logging"
    },
    {
      "from": "agents.core.messaging",
      "to": "os"
    },
    {
      "from": "agents.core.messaging",
      "to": "pydantic"
    },
    {
      "from": "agents.core.messaging",
      "to": "typing"
    },
    {
      "from": "agents.core.messaging_agent_base",
      "to": "agents"
    },
    {
      "from": "agents.core.messaging_agent_base",
      "to": "asyncio"
    },
    {
      "from": "agents.core.messaging_agent_base",
      "to": "datetime"
    },
    {
      "from": "agents.core.messaging_agent_base",
      "to": "logging"
    },
    {
      "from": "agents.core.messaging_agent_base",
      "to": "os"
    },
    {
      "from": "agents.core.messaging_agent_base",
      "to": "psutil"
    },
    {
      "from": "agents.core.messaging_agent_base",
      "to": "schemas"
    },
    {
      "from": "agents.core.messaging_agent_base",
      "to": "signal"
    },
    {
      "from": "agents.core.messaging_agent_base",
      "to": "sys"
    },
    {
      "from": "agents.core.messaging_agent_base",
      "to": "typing"
    },
    {
      "from": "agents.core.metrics",
      "to": "asyncio"
    },
    {
      "from": "agents.core.metrics",
      "to": "datetime"
    },
    {
      "from": "agents.core.metrics",
      "to": "fastapi"
    },
    {
      "from": "agents.core.metrics",
      "to": "functools"
    },
    {
      "from": "agents.core.metrics",
      "to": "logging"
    },
    {
      "from": "agents.core.metrics",
      "to": "prometheus_client"
    },
    {
      "from": "agents.core.metrics",
      "to": "time"
    },
    {
      "from": "agents.core.metrics",
      "to": "typing"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "agent_base"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "asyncio"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "concurrent"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "core"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "datetime"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "inspect"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "json"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "logging"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "os"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "pathlib"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "sys"
    },
    {
      "from": "agents.core.migration_helper",
      "to": "typing"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "aiohttp"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "argparse"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "asyncio"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "datetime"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "docker"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "json"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "logging"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "os"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "redis"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "signal"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "sys"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "time"
    },
    {
      "from": "agents.core.ollama_autoscaler",
      "to": "typing"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "argparse"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "asyncio"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "collections"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "concurrent"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "datetime"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "hashlib"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "httpx"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "json"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "logging"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "redis"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "sys"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "time"
    },
    {
      "from": "agents.core.ollama_batch_processor",
      "to": "typing"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "aiohttp"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "asyncio"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "collections"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "concurrent"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "contextlib"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "json"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "logging"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "psutil"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "redis"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "threading"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "time"
    },
    {
      "from": "agents.core.ollama_connection_pool",
      "to": "typing"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "argparse"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "asyncio"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "collections"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "datetime"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "httpx"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "json"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "logging"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "numpy"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "os"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "sys"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "time"
    },
    {
      "from": "agents.core.ollama_context_optimizer",
      "to": "typing"
    },
    {
      "from": "agents.core.ollama_integration",
      "to": "asyncio"
    },
    {
      "from": "agents.core.ollama_integration",
      "to": "httpx"
    },
    {
      "from": "agents.core.ollama_integration",
      "to": "json"
    },
    {
      "from": "agents.core.ollama_integration",
      "to": "logging"
    },
    {
      "from": "agents.core.ollama_integration",
      "to": "os"
    },
    {
      "from": "agents.core.ollama_integration",
      "to": "typing"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "argparse"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "asyncio"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "concurrent"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "datetime"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "hashlib"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "httpx"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "json"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "logging"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "os"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "pathlib"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "prometheus_client"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "psutil"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "sqlite3"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "statistics"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "sys"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "time"
    },
    {
      "from": "agents.core.ollama_model_manager",
      "to": "typing"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "argparse"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "asyncio"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "collections"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "concurrent"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "datetime"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "gc"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "httpx"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "json"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "logging"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "os"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "prometheus_client"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "psutil"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "statistics"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "sys"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "threading"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "time"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "typing"
    },
    {
      "from": "agents.core.ollama_performance_optimizer",
      "to": "yaml"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "asyncio"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "contextlib"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "datetime"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "enum"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "httpx"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "json"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "logging"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "time"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "typing"
    },
    {
      "from": "agents.core.ollama_pool",
      "to": "weakref"
    },
    {
      "from": "agents.core.prompt_optimizer",
      "to": "collections"
    },
    {
      "from": "agents.core.prompt_optimizer",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.prompt_optimizer",
      "to": "hashlib"
    },
    {
      "from": "agents.core.prompt_optimizer",
      "to": "json"
    },
    {
      "from": "agents.core.prompt_optimizer",
      "to": "logging"
    },
    {
      "from": "agents.core.prompt_optimizer",
      "to": "re"
    },
    {
      "from": "agents.core.prompt_optimizer",
      "to": "typing"
    },
    {
      "from": "agents.core.rabbitmq_client",
      "to": "aio_pika"
    },
    {
      "from": "agents.core.rabbitmq_client",
      "to": "asyncio"
    },
    {
      "from": "agents.core.rabbitmq_client",
      "to": "datetime"
    },
    {
      "from": "agents.core.rabbitmq_client",
      "to": "json"
    },
    {
      "from": "agents.core.rabbitmq_client",
      "to": "logging"
    },
    {
      "from": "agents.core.rabbitmq_client",
      "to": "os"
    },
    {
      "from": "agents.core.rabbitmq_client",
      "to": "schemas"
    },
    {
      "from": "agents.core.rabbitmq_client",
      "to": "sys"
    },
    {
      "from": "agents.core.rabbitmq_client",
      "to": "typing"
    },
    {
      "from": "agents.core.request_queue",
      "to": "asyncio"
    },
    {
      "from": "agents.core.request_queue",
      "to": "contextlib"
    },
    {
      "from": "agents.core.request_queue",
      "to": "dataclasses"
    },
    {
      "from": "agents.core.request_queue",
      "to": "datetime"
    },
    {
      "from": "agents.core.request_queue",
      "to": "enum"
    },
    {
      "from": "agents.core.request_queue",
      "to": "heapq"
    },
    {
      "from": "agents.core.request_queue",
      "to": "inspect"
    },
    {
      "from": "agents.core.request_queue",
      "to": "logging"
    },
    {
      "from": "agents.core.request_queue",
      "to": "time"
    },
    {
      "from": "agents.core.request_queue",
      "to": "typing"
    },
    {
      "from": "agents.core.request_queue",
      "to": "uuid"
    },
    {
      "from": "agents.core.request_queue",
      "to": "weakref"
    },
    {
      "from": "agents.core.simple_base_agent",
      "to": "asyncio"
    },
    {
      "from": "agents.core.simple_base_agent",
      "to": "datetime"
    },
    {
      "from": "agents.core.simple_base_agent",
      "to": "logging"
    },
    {
      "from": "agents.core.simple_base_agent",
      "to": "os"
    },
    {
      "from": "agents.core.simple_base_agent",
      "to": "typing"
    },
    {
      "from": "agents.core.test_enhanced_agent",
      "to": "agent_base"
    },
    {
      "from": "agents.core.test_enhanced_agent",
      "to": "asyncio"
    },
    {
      "from": "agents.core.test_enhanced_agent",
      "to": "core"
    },
    {
      "from": "agents.core.test_enhanced_agent",
      "to": "logging"
    },
    {
      "from": "agents.core.test_enhanced_agent",
      "to": "os"
    },
    {
      "from": "agents.core.test_enhanced_agent",
      "to": "sys"
    },
    {
      "from": "agents.core.test_enhanced_agent",
      "to": "time"
    },
    {
      "from": "agents.core.test_enhanced_agent",
      "to": "typing"
    },
    {
      "from": "agents.core.update_agents",
      "to": "os"
    },
    {
      "from": "agents.core.update_agents",
      "to": "pathlib"
    },
    {
      "from": "agents.core.update_agents",
      "to": "re"
    },
    {
      "from": "agents.core.utils",
      "to": "os"
    },
    {
      "from": "agents.crewai_config",
      "to": "crewai"
    },
    {
      "from": "agents.crewai_config",
      "to": "fastapi"
    },
    {
      "from": "agents.crewai_config",
      "to": "uvicorn"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "agents"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "asyncio"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "contextlib"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "fastapi"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "importlib"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "logging"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "os"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "pathlib"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "pydantic"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "sys"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "typing"
    },
    {
      "from": "agents.fastapi_wrapper",
      "to": "uvicorn"
    },
    {
      "from": "agents.generic_agent",
      "to": "asyncio"
    },
    {
      "from": "agents.generic_agent",
      "to": "dataclasses"
    },
    {
      "from": "agents.generic_agent",
      "to": "datetime"
    },
    {
      "from": "agents.generic_agent",
      "to": "json"
    },
    {
      "from": "agents.generic_agent",
      "to": "logging"
    },
    {
      "from": "agents.generic_agent",
      "to": "os"
    },
    {
      "from": "agents.generic_agent",
      "to": "requests"
    },
    {
      "from": "agents.generic_agent",
      "to": "time"
    },
    {
      "from": "agents.generic_agent",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.100_percent_working_proof",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.100_percent_working_proof",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.100_percent_working_proof",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.100_percent_working_proof",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "collections"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "docker"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "fastapi"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "gc"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "glob"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "gzip"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "hashlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "pydantic"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "re"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "shared"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "sqlite3"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "tempfile"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.app",
      "to": "uvicorn"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_debug_enhanced",
      "to": "app"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_debug_enhanced",
      "to": "debug_tracer"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_debug_enhanced",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_debug_enhanced",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_debug_enhanced",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "agents"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "asyncio"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "docker"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "fastapi"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "gc"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "schemas"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "tempfile"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.app_messaging",
      "to": "uvicorn"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "concurrent"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "tempfile"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_quick_test",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "docker"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "gzip"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "hashlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "tempfile"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.bulletproof_test_suite",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "email"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "schedule"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "smtplib"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.continuous_validator",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_safety",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "docker"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "functools"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "hashlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "traceback"
    },
    {
      "from": "agents.hardware-resource-optimizer.debug_tracer",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "concurrent"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "tempfile"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_bulletproof_test",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_performance_demo",
      "to": "app"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_performance_demo",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_performance_demo",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_performance_demo",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_performance_demo",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.final_performance_demo",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "concurrent"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "docker"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "tempfile"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.integration_test_suite",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.main",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.main",
      "to": "fastapi"
    },
    {
      "from": "agents.hardware-resource-optimizer.main",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.main",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.main",
      "to": "pydantic"
    },
    {
      "from": "agents.hardware-resource-optimizer.main",
      "to": "uvicorn"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "debug_tracer"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "docker"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "random"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "string"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "tempfile"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.manual_debug_test",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.metrics",
      "to": "agents"
    },
    {
      "from": "agents.hardware-resource-optimizer.quick_verification_test",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.quick_verification_test",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.quick_verification_test",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.quick_verification_test",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.quick_verification_test",
      "to": "tempfile"
    },
    {
      "from": "agents.hardware-resource-optimizer.quick_verification_test",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.shared.agent_base",
      "to": "asyncio"
    },
    {
      "from": "agents.hardware-resource-optimizer.shared.agent_base",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.shared.agent_base",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.shared.agent_base",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.shared.agent_base",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.shared.agent_base",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.shared.agent_base",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.shared.agent_base",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.shared.agent_base",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.shared.agent_base",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_analyze_duplicates",
      "to": "app"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_analyze_duplicates",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_analyze_duplicates",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_analyze_duplicates",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_cache_cleanup",
      "to": "app"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_cache_cleanup",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_cache_cleanup",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_cache_cleanup",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_cache_cleanup",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_compression",
      "to": "app"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_compression",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_compression",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_compression",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_compression",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_dry_run_safety",
      "to": "app"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_dry_run_safety",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_dry_run_safety",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_dry_run_safety",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_dry_run_safety",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_dry_run_safety",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_endpoints",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_endpoints",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_endpoints",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_endpoints",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_endpoints",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_large_files",
      "to": "app"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_large_files",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_large_files",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_large_files",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_storage_analysis",
      "to": "app"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_storage_analysis",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_storage_analysis",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_storage_analysis",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_storage_endpoints",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_storage_endpoints",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_storage_endpoints",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_storage_endpoints",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.test_storage_endpoints",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "argparse"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "asyncio"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "comprehensive_e2e_test_framework"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "email"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "schedule"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "smtplib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.automated_continuous_tests",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "aiohttp"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "asyncio"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "concurrent"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "gzip"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "hashlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "pytest"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "statistics"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "tempfile"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.comprehensive_e2e_test_framework",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "argparse"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "collections"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "email"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "http"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "schedule"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "smtplib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "socketserver"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.continuous_validator",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.final_validation_summary",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.final_validation_summary",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.final_validation_summary",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.final_validation_summary",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.final_validation_summary",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "argparse"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "collections"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "concurrent"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "gc"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "hashlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "tempfile"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.integration_test_suite",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "argparse"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.manual_test_procedures",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "aiohttp"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "argparse"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "asyncio"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "concurrent"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "matplotlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "numpy"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "psutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "statistics"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.performance_stress_tests",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_endpoint_test",
      "to": "argparse"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_endpoint_test",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_endpoint_test",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_endpoint_test",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_endpoint_test",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_endpoint_test",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_performance_test",
      "to": "argparse"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_performance_test",
      "to": "concurrent"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_performance_test",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_performance_test",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_performance_test",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_performance_test",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_performance_test",
      "to": "statistics"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_performance_test",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.simple_performance_test",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "argparse"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "asyncio"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "automated_continuous_tests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "comprehensive_e2e_test_framework"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "datetime"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "json"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "logging"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "manual_test_procedures"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "performance_stress_tests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "sys"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "threading"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "time"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.test_execution_orchestrator",
      "to": "typing"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.validate_setup",
      "to": "importlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.validate_setup",
      "to": "os"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.validate_setup",
      "to": "pathlib"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.validate_setup",
      "to": "requests"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.validate_setup",
      "to": "shutil"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.validate_setup",
      "to": "socket"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.validate_setup",
      "to": "subprocess"
    },
    {
      "from": "agents.hardware-resource-optimizer.tests.validate_setup",
      "to": "sys"
    },
    {
      "from": "agents.jarvis-automation-agent.app",
      "to": "fastapi"
    },
    {
      "from": "agents.jarvis-automation-agent.app",
      "to": "uvicorn"
    },
    {
      "from": "agents.jarvis-hardware-resource-optimizer.app",
      "to": "fastapi"
    },
    {
      "from": "agents.jarvis-knowledge-management.app",
      "to": "fastapi"
    },
    {
      "from": "agents.jarvis-multimodal-ai.app",
      "to": "fastapi"
    },
    {
      "from": "agents.jarvis-voice-interface.app",
      "to": "fastapi"
    },
    {
      "from": "agents.jarvis-voice-interface.app",
      "to": "uvicorn"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "agents"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "aiohttp"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "asyncio"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "core"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "datetime"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "fastapi"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "hashlib"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "json"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "logging"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "os"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "pydantic"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "random"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "schemas"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "sys"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "time"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "typing"
    },
    {
      "from": "agents.ollama_integration.app",
      "to": "uvicorn"
    },
    {
      "from": "agents.ollama_integration.example_usage",
      "to": "agents"
    },
    {
      "from": "agents.ollama_integration.example_usage",
      "to": "asyncio"
    },
    {
      "from": "agents.ollama_integration.example_usage",
      "to": "logging"
    },
    {
      "from": "agents.ollama_integration.example_usage",
      "to": "os"
    },
    {
      "from": "agents.ollama_integration.example_usage",
      "to": "schemas"
    },
    {
      "from": "agents.ollama_integration.example_usage",
      "to": "sys"
    },
    {
      "from": "agents.ollama_integration.example_usage",
      "to": "typing"
    },
    {
      "from": "agents.ollama_integration.metrics",
      "to": "agents"
    },
    {
      "from": "agents.ollama_integration.ollama_schemas",
      "to": "datetime"
    },
    {
      "from": "agents.ollama_integration.ollama_schemas",
      "to": "pydantic"
    },
    {
      "from": "agents.ollama_integration.ollama_schemas",
      "to": "typing"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "asyncio"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "contextlib"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "core"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "datetime"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "enum"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "fastapi"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "json"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "logging"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "os"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "psutil"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "pydantic"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "redis"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "sys"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "typing"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "uuid"
    },
    {
      "from": "agents.resource_arbitration_agent.app",
      "to": "uvicorn"
    },
    {
      "from": "agents.resource_arbitration_agent.metrics",
      "to": "agents"
    },
    {
      "from": "agents.semgrep_service",
      "to": "fastapi"
    },
    {
      "from": "agents.semgrep_service",
      "to": "json"
    },
    {
      "from": "agents.semgrep_service",
      "to": "subprocess"
    },
    {
      "from": "agents.semgrep_service",
      "to": "tempfile"
    },
    {
      "from": "agents.standalone_main",
      "to": "agents"
    },
    {
      "from": "agents.standalone_main",
      "to": "app"
    },
    {
      "from": "agents.standalone_main",
      "to": "logging"
    },
    {
      "from": "agents.standalone_main",
      "to": "os"
    },
    {
      "from": "agents.standalone_main",
      "to": "pathlib"
    },
    {
      "from": "agents.standalone_main",
      "to": "sys"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "agents"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "asyncio"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "collections"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "contextlib"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "core"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "dataclasses"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "datetime"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "fastapi"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "heapq"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "json"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "logging"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "os"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "pydantic"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "redis"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "sys"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "typing"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "uuid"
    },
    {
      "from": "agents.task_assignment_coordinator.app",
      "to": "uvicorn"
    },
    {
      "from": "agents.task_assignment_coordinator.metrics",
      "to": "agents"
    },
    {
      "from": "agents.universal_startup",
      "to": "agents"
    },
    {
      "from": "agents.universal_startup",
      "to": "asyncio"
    },
    {
      "from": "agents.universal_startup",
      "to": "container_startup"
    },
    {
      "from": "agents.universal_startup",
      "to": "fastapi"
    },
    {
      "from": "agents.universal_startup",
      "to": "importlib"
    },
    {
      "from": "agents.universal_startup",
      "to": "logging"
    },
    {
      "from": "agents.universal_startup",
      "to": "os"
    },
    {
      "from": "agents.universal_startup",
      "to": "pathlib"
    },
    {
      "from": "agents.universal_startup",
      "to": "sys"
    },
    {
      "from": "agents.universal_startup",
      "to": "typing"
    },
    {
      "from": "agents.universal_startup",
      "to": "uvicorn"
    },
    {
      "from": "backend.__init__",
      "to": "logging"
    },
    {
      "from": "backend.__init__",
      "to": "os"
    },
    {
      "from": "backend.__init__",
      "to": "sys"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "aiohttp"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "asyncio"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "concurrent"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "contextlib"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "dataclasses"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "datetime"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "docker"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "enum"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "json"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "logging"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "psycopg2"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "redis"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "requests"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "threading"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "time"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "typing"
    },
    {
      "from": "backend.agent_orchestration.orchestrator",
      "to": "websockets"
    },
    {
      "from": "backend.ai_agents.agent_factory",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.agent_factory",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.agent_factory",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "agent_factory"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "agent_status"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "app"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "backend"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "health_check"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "interaction"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "memory"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "orchestrator"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "protocols"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "psutil"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "threading"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.agent_manager",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.agent_status",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.agent_status",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.agent_status",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.agent_status",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.api_wrappers",
      "to": "abc"
    },
    {
      "from": "backend.ai_agents.api_wrappers",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.api_wrappers",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.api_wrappers",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.api_wrappers",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.api_wrappers",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.api_wrappers",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.api_wrappers",
      "to": "universal_client"
    },
    {
      "from": "backend.ai_agents.claude_agent_loader",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.claude_agent_loader",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.claude_agent_loader",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.claude_agent_loader",
      "to": "os"
    },
    {
      "from": "backend.ai_agents.claude_agent_loader",
      "to": "pathlib"
    },
    {
      "from": "backend.ai_agents.claude_agent_loader",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.claude_agent_loader",
      "to": "yaml"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "backend"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.communication.agent_bus",
      "to": "weakref"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "abc"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "aiohttp"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "aioredis"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "backend"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "universal_client"
    },
    {
      "from": "backend.ai_agents.communication_protocols",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "aiohttp"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "random"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.coordination.continuous_coordinator",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.core.__init__",
      "to": "agent_message_bus"
    },
    {
      "from": "backend.ai_agents.core.__init__",
      "to": "agent_registry"
    },
    {
      "from": "backend.ai_agents.core.__init__",
      "to": "base_agent"
    },
    {
      "from": "backend.ai_agents.core.__init__",
      "to": "orchestration_controller"
    },
    {
      "from": "backend.ai_agents.core.__init__",
      "to": "universal_agent_factory"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "aioredis"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "backend"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "base_agent"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "contextlib"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "pydantic"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.core.agent_message_bus",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "aioredis"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "app"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "base_agent"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "pydantic"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.core.agent_registry",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "abc"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "aioredis"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "contextlib"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "httpx"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "os"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "pydantic"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.core.base_agent",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "agent_message_bus"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "app"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "base_agent"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "universal_agent_factory"
    },
    {
      "from": "backend.ai_agents.core.orchestration_controller",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.core.universal_agent_factory",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.core.universal_agent_factory",
      "to": "base_agent"
    },
    {
      "from": "backend.ai_agents.core.universal_agent_factory",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.core.universal_agent_factory",
      "to": "importlib"
    },
    {
      "from": "backend.ai_agents.core.universal_agent_factory",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.core.universal_agent_factory",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.core.universal_agent_factory",
      "to": "os"
    },
    {
      "from": "backend.ai_agents.core.universal_agent_factory",
      "to": "pathlib"
    },
    {
      "from": "backend.ai_agents.core.universal_agent_factory",
      "to": "sys"
    },
    {
      "from": "backend.ai_agents.core.universal_agent_factory",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "aiohttp"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "random"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.discovery_service",
      "to": "universal_client"
    },
    {
      "from": "backend.ai_agents.health_check",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.health_check",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.health_check",
      "to": "threading"
    },
    {
      "from": "backend.ai_agents.health_check",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.health_check",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "aiohttp"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "discovery_service"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "psutil"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "statistics"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.health_monitor",
      "to": "universal_client"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "api_wrappers"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "communication_protocols"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "discovery_service"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "health_monitor"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "universal_client"
    },
    {
      "from": "backend.ai_agents.integration_examples",
      "to": "workflow_orchestrator"
    },
    {
      "from": "backend.ai_agents.interaction.human_interaction",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.interaction.human_interaction",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.interaction.human_interaction",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.interaction.human_interaction",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.interaction.human_interaction",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.interaction.human_interaction",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.memory.agent_memory",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.memory.agent_memory",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.memory.agent_memory",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.memory.agent_memory",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.memory.agent_memory",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.memory.agent_memory",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "chromadb"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "hashlib"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "numpy"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "qdrant_client"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "sentence_transformers"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.memory.shared_knowledge_base",
      "to": "weakref"
    },
    {
      "from": "backend.ai_agents.memory.shared_memory",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.memory.shared_memory",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.memory.shared_memory",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.memory.shared_memory",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.memory.shared_memory",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "docker"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "joblib"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "numpy"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "os"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "pandas"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "sklearn"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "torch"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.neural_health_monitor",
      "to": "warnings"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "aiohttp"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "backend"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "concurrent"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "cryptography"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "hashlib"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "hmac"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "pickle"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.orchestration.advanced_message_bus",
      "to": "zlib"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "app"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "hashlib"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "httpx"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "multi_agent_workflow_system"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "protocols"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.orchestration.agent_registry_service",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "concurrent"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "httpx"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "multi_agent_workflow_system"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "networkx"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "numpy"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "reasoning"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.orchestration.enhanced_multi_agent_coordinator",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "aiofiles"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "concurrent"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "docker"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "httpx"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "psutil"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "subprocess"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.orchestration.infrastructure_integration",
      "to": "yaml"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "multi_agent_workflow_system"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "numpy"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "protocols"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.orchestration.intelligent_task_router",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "app"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "concurrent"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "docker"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "httpx"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "networkx"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "numpy"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.orchestration.master_agent_orchestrator",
      "to": "yaml"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "advanced_message_bus"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "master_agent_orchestrator"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "matplotlib"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "networkx"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "numpy"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "pandas"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "plotly"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "streamlit"
    },
    {
      "from": "backend.ai_agents.orchestration.orchestration_dashboard",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "advanced_message_bus"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "fastapi"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "infrastructure_integration"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "master_agent_orchestrator"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "orchestration_dashboard"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "pydantic"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestration_api",
      "to": "uvicorn"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "aiohttp"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "os"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "redis"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.orchestration.unified_orchestrator",
      "to": "yaml"
    },
    {
      "from": "backend.ai_agents.orchestrator.workflow_engine",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.orchestrator.workflow_engine",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.orchestrator.workflow_engine",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.orchestrator.workflow_engine",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.orchestrator.workflow_engine",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.orchestrator.workflow_engine",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.orchestrator.workflow_engine",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.protocols.agent_communication",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.protocols.agent_communication",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.protocols.agent_communication",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.protocols.agent_communication",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.protocols.agent_communication",
      "to": "threading"
    },
    {
      "from": "backend.ai_agents.protocols.agent_communication",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.protocols.message_protocol",
      "to": "backend"
    },
    {
      "from": "backend.ai_agents.protocols.message_protocol",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.protocols.message_protocol",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.protocols.message_protocol",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.protocols.message_protocol",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.protocols.message_protocol",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.reasoning.__init__",
      "to": "chain_of_thought"
    },
    {
      "from": "backend.ai_agents.reasoning.__init__",
      "to": "self_improvement"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "math"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "numpy"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.reasoning.advanced_reasoning_engine",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.reasoning.chain_of_thought",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.reasoning.chain_of_thought",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.reasoning.chain_of_thought",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.reasoning.chain_of_thought",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.reasoning.chain_of_thought",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.reasoning.chain_of_thought",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.reasoning.chain_of_thought",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.reasoning.chain_of_thought",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "numpy"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "pathlib"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "pickle"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "re"
    },
    {
      "from": "backend.ai_agents.reasoning.self_improvement",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.specialized.code_generator",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.specialized.code_generator",
      "to": "core"
    },
    {
      "from": "backend.ai_agents.specialized.code_generator",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.specialized.code_generator",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.specialized.code_generator",
      "to": "os"
    },
    {
      "from": "backend.ai_agents.specialized.code_generator",
      "to": "tempfile"
    },
    {
      "from": "backend.ai_agents.specialized.code_generator",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.specialized.generic_agent",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.specialized.generic_agent",
      "to": "core"
    },
    {
      "from": "backend.ai_agents.specialized.generic_agent",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.specialized.generic_agent",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.specialized.generic_agent",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.specialized.orchestrator",
      "to": "app"
    },
    {
      "from": "backend.ai_agents.specialized.orchestrator",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.specialized.orchestrator",
      "to": "core"
    },
    {
      "from": "backend.ai_agents.specialized.orchestrator",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.specialized.orchestrator",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.specialized.orchestrator",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.specialized.orchestrator",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.specialized.orchestrator",
      "to": "uuid"
    },
    {
      "from": "backend.ai_agents.universal_agent_adapter",
      "to": "abc"
    },
    {
      "from": "backend.ai_agents.universal_agent_adapter",
      "to": "claude_agent_loader"
    },
    {
      "from": "backend.ai_agents.universal_agent_adapter",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.universal_agent_adapter",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.universal_agent_adapter",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.universal_agent_adapter",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.universal_agent_adapter",
      "to": "os"
    },
    {
      "from": "backend.ai_agents.universal_agent_adapter",
      "to": "pathlib"
    },
    {
      "from": "backend.ai_agents.universal_agent_adapter",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.universal_agent_factory",
      "to": "backend"
    },
    {
      "from": "backend.ai_agents.universal_agent_factory",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.universal_agent_factory",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "abc"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "aiohttp"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "concurrent"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "requests"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.universal_client",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "asyncio"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "collections"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "dataclasses"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "datetime"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "discovery_service"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "enum"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "json"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "logging"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "networkx"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "time"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "typing"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "universal_client"
    },
    {
      "from": "backend.ai_agents.workflow_orchestrator",
      "to": "uuid"
    },
    {
      "from": "backend.app.agent_orchestrator",
      "to": "asyncio"
    },
    {
      "from": "backend.app.agent_orchestrator",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.agent_orchestrator",
      "to": "datetime"
    },
    {
      "from": "backend.app.agent_orchestrator",
      "to": "enum"
    },
    {
      "from": "backend.app.agent_orchestrator",
      "to": "httpx"
    },
    {
      "from": "backend.app.agent_orchestrator",
      "to": "logging"
    },
    {
      "from": "backend.app.agent_orchestrator",
      "to": "typing"
    },
    {
      "from": "backend.app.agents.__init__",
      "to": "registry"
    },
    {
      "from": "backend.app.agents.registry",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.agents.registry",
      "to": "datetime"
    },
    {
      "from": "backend.app.agents.registry",
      "to": "enum"
    },
    {
      "from": "backend.app.agents.registry",
      "to": "logging"
    },
    {
      "from": "backend.app.agents.registry",
      "to": "typing"
    },
    {
      "from": "backend.app.agents.registry_facade",
      "to": "__future__"
    },
    {
      "from": "backend.app.agents.registry_facade",
      "to": "backend"
    },
    {
      "from": "backend.app.agents.registry_facade",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.agents",
      "to": "backend"
    },
    {
      "from": "backend.app.api.v1.agents",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.agents",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.agents",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.agents",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.api",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.api",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.coordinator",
      "to": "asyncio"
    },
    {
      "from": "backend.app.api.v1.coordinator",
      "to": "datetime"
    },
    {
      "from": "backend.app.api.v1.coordinator",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.coordinator",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.coordinator",
      "to": "services"
    },
    {
      "from": "backend.app.api.v1.coordinator",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.agents",
      "to": "asyncio"
    },
    {
      "from": "backend.app.api.v1.endpoints.agents",
      "to": "datetime"
    },
    {
      "from": "backend.app.api.v1.endpoints.agents",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.agents",
      "to": "json"
    },
    {
      "from": "backend.app.api.v1.endpoints.agents",
      "to": "os"
    },
    {
      "from": "backend.app.api.v1.endpoints.agents",
      "to": "pathlib"
    },
    {
      "from": "backend.app.api.v1.endpoints.agents",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.endpoints.agents",
      "to": "sys"
    },
    {
      "from": "backend.app.api.v1.endpoints.agents",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.agents",
      "to": "workflows"
    },
    {
      "from": "backend.app.api.v1.endpoints.chat",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.endpoints.chat",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.chat",
      "to": "html"
    },
    {
      "from": "backend.app.api.v1.endpoints.chat",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.endpoints.chat",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.endpoints.chat",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.documents",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.endpoints.documents",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.features",
      "to": "backend"
    },
    {
      "from": "backend.app.api.v1.endpoints.features",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.features",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.endpoints.features",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.governance",
      "to": "data_governance"
    },
    {
      "from": "backend.app.api.v1.endpoints.governance",
      "to": "datetime"
    },
    {
      "from": "backend.app.api.v1.endpoints.governance",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.governance",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.endpoints.governance",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.honeypot_management",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.endpoints.honeypot_management",
      "to": "asyncio"
    },
    {
      "from": "backend.app.api.v1.endpoints.honeypot_management",
      "to": "datetime"
    },
    {
      "from": "backend.app.api.v1.endpoints.honeypot_management",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.honeypot_management",
      "to": "json"
    },
    {
      "from": "backend.app.api.v1.endpoints.honeypot_management",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.endpoints.honeypot_management",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.endpoints.honeypot_management",
      "to": "security"
    },
    {
      "from": "backend.app.api.v1.endpoints.honeypot_management",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.mesh",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.endpoints.mesh",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.mesh",
      "to": "httpx"
    },
    {
      "from": "backend.app.api.v1.endpoints.mesh",
      "to": "os"
    },
    {
      "from": "backend.app.api.v1.endpoints.mesh",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.endpoints.mesh",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.models",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.endpoints.models",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.models",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.endpoints.models",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.endpoints.models",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "asyncio"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "datetime"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "docker"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "json"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "prometheus_client"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "psutil"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "redis"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "sqlalchemy"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "time"
    },
    {
      "from": "backend.app.api.v1.endpoints.monitoring",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "asyncio"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "concurrent"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "datetime"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "enum"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "ipaddress"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "json"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "nmap"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "socket"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "subprocess"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "threading"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "time"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.network_recon",
      "to": "uuid"
    },
    {
      "from": "backend.app.api.v1.endpoints.streaming",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.endpoints.streaming",
      "to": "asyncio"
    },
    {
      "from": "backend.app.api.v1.endpoints.streaming",
      "to": "datetime"
    },
    {
      "from": "backend.app.api.v1.endpoints.streaming",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.endpoints.streaming",
      "to": "html"
    },
    {
      "from": "backend.app.api.v1.endpoints.streaming",
      "to": "json"
    },
    {
      "from": "backend.app.api.v1.endpoints.streaming",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.endpoints.streaming",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.endpoints.streaming",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.endpoints.system",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.features",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.features",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.features",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.feedback",
      "to": "ai_agents"
    },
    {
      "from": "backend.app.api.v1.feedback",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.feedback",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.feedback",
      "to": "os"
    },
    {
      "from": "backend.app.api.v1.feedback",
      "to": "sys"
    },
    {
      "from": "backend.app.api.v1.feedback",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.jarvis",
      "to": "asyncio"
    },
    {
      "from": "backend.app.api.v1.jarvis",
      "to": "datetime"
    },
    {
      "from": "backend.app.api.v1.jarvis",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.jarvis",
      "to": "httpx"
    },
    {
      "from": "backend.app.api.v1.jarvis",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.jarvis",
      "to": "os"
    },
    {
      "from": "backend.app.api.v1.jarvis",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.jarvis",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.models",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.models",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.models",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.models",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.orchestration",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.orchestration",
      "to": "asyncio"
    },
    {
      "from": "backend.app.api.v1.orchestration",
      "to": "datetime"
    },
    {
      "from": "backend.app.api.v1.orchestration",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.orchestration",
      "to": "json"
    },
    {
      "from": "backend.app.api.v1.orchestration",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.orchestration",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.orchestration",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.orchestration",
      "to": "uuid"
    },
    {
      "from": "backend.app.api.v1.security",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.security",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.security",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.security",
      "to": "os"
    },
    {
      "from": "backend.app.api.v1.security",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.security",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.self_improvement",
      "to": "app"
    },
    {
      "from": "backend.app.api.v1.self_improvement",
      "to": "datetime"
    },
    {
      "from": "backend.app.api.v1.self_improvement",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.self_improvement",
      "to": "json"
    },
    {
      "from": "backend.app.api.v1.self_improvement",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.self_improvement",
      "to": "pathlib"
    },
    {
      "from": "backend.app.api.v1.self_improvement",
      "to": "typing"
    },
    {
      "from": "backend.app.api.v1.vectors",
      "to": "fastapi"
    },
    {
      "from": "backend.app.api.v1.vectors",
      "to": "logging"
    },
    {
      "from": "backend.app.api.v1.vectors",
      "to": "pydantic"
    },
    {
      "from": "backend.app.api.v1.vectors",
      "to": "typing"
    },
    {
      "from": "backend.app.auth.__init__",
      "to": "dependencies"
    },
    {
      "from": "backend.app.auth.__init__",
      "to": "jwt_handler"
    },
    {
      "from": "backend.app.auth.__init__",
      "to": "models"
    },
    {
      "from": "backend.app.auth.__init__",
      "to": "password"
    },
    {
      "from": "backend.app.auth.dependencies",
      "to": "app"
    },
    {
      "from": "backend.app.auth.dependencies",
      "to": "datetime"
    },
    {
      "from": "backend.app.auth.dependencies",
      "to": "fastapi"
    },
    {
      "from": "backend.app.auth.dependencies",
      "to": "jwt_handler"
    },
    {
      "from": "backend.app.auth.dependencies",
      "to": "models"
    },
    {
      "from": "backend.app.auth.dependencies",
      "to": "sqlalchemy"
    },
    {
      "from": "backend.app.auth.dependencies",
      "to": "typing"
    },
    {
      "from": "backend.app.auth.jwt_handler",
      "to": "datetime"
    },
    {
      "from": "backend.app.auth.jwt_handler",
      "to": "jwt"
    },
    {
      "from": "backend.app.auth.jwt_handler",
      "to": "os"
    },
    {
      "from": "backend.app.auth.jwt_handler",
      "to": "secrets"
    },
    {
      "from": "backend.app.auth.jwt_handler",
      "to": "typing"
    },
    {
      "from": "backend.app.auth.models",
      "to": "app"
    },
    {
      "from": "backend.app.auth.models",
      "to": "datetime"
    },
    {
      "from": "backend.app.auth.models",
      "to": "pydantic"
    },
    {
      "from": "backend.app.auth.models",
      "to": "sqlalchemy"
    },
    {
      "from": "backend.app.auth.models",
      "to": "typing"
    },
    {
      "from": "backend.app.auth.password",
      "to": "bcrypt"
    },
    {
      "from": "backend.app.auth.password",
      "to": "typing"
    },
    {
      "from": "backend.app.auth.router",
      "to": "app"
    },
    {
      "from": "backend.app.auth.router",
      "to": "dependencies"
    },
    {
      "from": "backend.app.auth.router",
      "to": "fastapi"
    },
    {
      "from": "backend.app.auth.router",
      "to": "models"
    },
    {
      "from": "backend.app.auth.router",
      "to": "service"
    },
    {
      "from": "backend.app.auth.router",
      "to": "sqlalchemy"
    },
    {
      "from": "backend.app.auth.router",
      "to": "typing"
    },
    {
      "from": "backend.app.auth.service",
      "to": "datetime"
    },
    {
      "from": "backend.app.auth.service",
      "to": "jwt_handler"
    },
    {
      "from": "backend.app.auth.service",
      "to": "models"
    },
    {
      "from": "backend.app.auth.service",
      "to": "password"
    },
    {
      "from": "backend.app.auth.service",
      "to": "sqlalchemy"
    },
    {
      "from": "backend.app.auth.service",
      "to": "typing"
    },
    {
      "from": "backend.app.core.config",
      "to": "functools"
    },
    {
      "from": "backend.app.core.config",
      "to": "os"
    },
    {
      "from": "backend.app.core.config",
      "to": "pydantic"
    },
    {
      "from": "backend.app.core.config",
      "to": "pydantic_settings"
    },
    {
      "from": "backend.app.core.config",
      "to": "secrets"
    },
    {
      "from": "backend.app.core.config",
      "to": "typing"
    },
    {
      "from": "backend.app.core.database",
      "to": "app"
    },
    {
      "from": "backend.app.core.database",
      "to": "asyncio"
    },
    {
      "from": "backend.app.core.database",
      "to": "collections"
    },
    {
      "from": "backend.app.core.database",
      "to": "contextlib"
    },
    {
      "from": "backend.app.core.database",
      "to": "logging"
    },
    {
      "from": "backend.app.core.database",
      "to": "sqlalchemy"
    },
    {
      "from": "backend.app.core.database",
      "to": "typing"
    },
    {
      "from": "backend.app.core.dependencies",
      "to": "app"
    },
    {
      "from": "backend.app.core.dependencies",
      "to": "typing"
    },
    {
      "from": "backend.app.core.exceptions",
      "to": "typing"
    },
    {
      "from": "backend.app.core.logging",
      "to": "datetime"
    },
    {
      "from": "backend.app.core.logging",
      "to": "json"
    },
    {
      "from": "backend.app.core.logging",
      "to": "logging"
    },
    {
      "from": "backend.app.core.logging",
      "to": "pathlib"
    },
    {
      "from": "backend.app.core.logging",
      "to": "pythonjsonlogger"
    },
    {
      "from": "backend.app.core.logging",
      "to": "sys"
    },
    {
      "from": "backend.app.core.logging",
      "to": "typing"
    },
    {
      "from": "backend.app.core.metrics",
      "to": "asyncio"
    },
    {
      "from": "backend.app.core.metrics",
      "to": "datetime"
    },
    {
      "from": "backend.app.core.metrics",
      "to": "fastapi"
    },
    {
      "from": "backend.app.core.metrics",
      "to": "functools"
    },
    {
      "from": "backend.app.core.metrics",
      "to": "logging"
    },
    {
      "from": "backend.app.core.metrics",
      "to": "prometheus_client"
    },
    {
      "from": "backend.app.core.metrics",
      "to": "psutil"
    },
    {
      "from": "backend.app.core.metrics",
      "to": "starlette"
    },
    {
      "from": "backend.app.core.metrics",
      "to": "time"
    },
    {
      "from": "backend.app.core.metrics",
      "to": "typing"
    },
    {
      "from": "backend.app.core.middleware",
      "to": "app"
    },
    {
      "from": "backend.app.core.middleware",
      "to": "datetime"
    },
    {
      "from": "backend.app.core.middleware",
      "to": "fastapi"
    },
    {
      "from": "backend.app.core.middleware",
      "to": "json"
    },
    {
      "from": "backend.app.core.middleware",
      "to": "logging"
    },
    {
      "from": "backend.app.core.middleware",
      "to": "starlette"
    },
    {
      "from": "backend.app.core.middleware",
      "to": "time"
    },
    {
      "from": "backend.app.core.middleware",
      "to": "typing"
    },
    {
      "from": "backend.app.core.middleware",
      "to": "uuid"
    },
    {
      "from": "backend.app.core.performance",
      "to": "app"
    },
    {
      "from": "backend.app.core.performance",
      "to": "asyncio"
    },
    {
      "from": "backend.app.core.performance",
      "to": "collections"
    },
    {
      "from": "backend.app.core.performance",
      "to": "contextlib"
    },
    {
      "from": "backend.app.core.performance",
      "to": "datetime"
    },
    {
      "from": "backend.app.core.performance",
      "to": "functools"
    },
    {
      "from": "backend.app.core.performance",
      "to": "gzip"
    },
    {
      "from": "backend.app.core.performance",
      "to": "hashlib"
    },
    {
      "from": "backend.app.core.performance",
      "to": "json"
    },
    {
      "from": "backend.app.core.performance",
      "to": "logging"
    },
    {
      "from": "backend.app.core.performance",
      "to": "numpy"
    },
    {
      "from": "backend.app.core.performance",
      "to": "pickle"
    },
    {
      "from": "backend.app.core.performance",
      "to": "psutil"
    },
    {
      "from": "backend.app.core.performance",
      "to": "redis"
    },
    {
      "from": "backend.app.core.performance",
      "to": "time"
    },
    {
      "from": "backend.app.core.performance",
      "to": "typing"
    },
    {
      "from": "backend.app.core.performance_tuning",
      "to": "asyncio"
    },
    {
      "from": "backend.app.core.performance_tuning",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.core.performance_tuning",
      "to": "enum"
    },
    {
      "from": "backend.app.core.performance_tuning",
      "to": "fastapi"
    },
    {
      "from": "backend.app.core.performance_tuning",
      "to": "gc"
    },
    {
      "from": "backend.app.core.performance_tuning",
      "to": "logging"
    },
    {
      "from": "backend.app.core.performance_tuning",
      "to": "os"
    },
    {
      "from": "backend.app.core.performance_tuning",
      "to": "psutil"
    },
    {
      "from": "backend.app.core.performance_tuning",
      "to": "time"
    },
    {
      "from": "backend.app.core.performance_tuning",
      "to": "typing"
    },
    {
      "from": "backend.app.core.security",
      "to": "asyncio"
    },
    {
      "from": "backend.app.core.security",
      "to": "base64"
    },
    {
      "from": "backend.app.core.security",
      "to": "bleach"
    },
    {
      "from": "backend.app.core.security",
      "to": "cryptography"
    },
    {
      "from": "backend.app.core.security",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.core.security",
      "to": "datetime"
    },
    {
      "from": "backend.app.core.security",
      "to": "enum"
    },
    {
      "from": "backend.app.core.security",
      "to": "fastapi"
    },
    {
      "from": "backend.app.core.security",
      "to": "hashlib"
    },
    {
      "from": "backend.app.core.security",
      "to": "html"
    },
    {
      "from": "backend.app.core.security",
      "to": "jose"
    },
    {
      "from": "backend.app.core.security",
      "to": "json"
    },
    {
      "from": "backend.app.core.security",
      "to": "jwt"
    },
    {
      "from": "backend.app.core.security",
      "to": "logging"
    },
    {
      "from": "backend.app.core.security",
      "to": "os"
    },
    {
      "from": "backend.app.core.security",
      "to": "re"
    },
    {
      "from": "backend.app.core.security",
      "to": "secrets"
    },
    {
      "from": "backend.app.core.security",
      "to": "time"
    },
    {
      "from": "backend.app.core.security",
      "to": "typing"
    },
    {
      "from": "backend.app.core.service_registry",
      "to": "aiohttp"
    },
    {
      "from": "backend.app.core.service_registry",
      "to": "asyncio"
    },
    {
      "from": "backend.app.core.service_registry",
      "to": "datetime"
    },
    {
      "from": "backend.app.core.service_registry",
      "to": "logging"
    },
    {
      "from": "backend.app.core.service_registry",
      "to": "typing"
    },
    {
      "from": "backend.app.core.xss_tester",
      "to": "html"
    },
    {
      "from": "backend.app.core.xss_tester",
      "to": "json"
    },
    {
      "from": "backend.app.core.xss_tester",
      "to": "re"
    },
    {
      "from": "backend.app.core.xss_tester",
      "to": "typing"
    },
    {
      "from": "backend.app.knowledge_manager",
      "to": "asyncio"
    },
    {
      "from": "backend.app.knowledge_manager",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.knowledge_manager",
      "to": "datetime"
    },
    {
      "from": "backend.app.knowledge_manager",
      "to": "httpx"
    },
    {
      "from": "backend.app.knowledge_manager",
      "to": "json"
    },
    {
      "from": "backend.app.knowledge_manager",
      "to": "logging"
    },
    {
      "from": "backend.app.knowledge_manager",
      "to": "neo4j"
    },
    {
      "from": "backend.app.knowledge_manager",
      "to": "os"
    },
    {
      "from": "backend.app.knowledge_manager",
      "to": "typing"
    },
    {
      "from": "backend.app.main",
      "to": "agent_orchestration"
    },
    {
      "from": "backend.app.main",
      "to": "ai_agents"
    },
    {
      "from": "backend.app.main",
      "to": "app"
    },
    {
      "from": "backend.app.main",
      "to": "asyncio"
    },
    {
      "from": "backend.app.main",
      "to": "cognitive_architecture"
    },
    {
      "from": "backend.app.main",
      "to": "datetime"
    },
    {
      "from": "backend.app.main",
      "to": "fastapi"
    },
    {
      "from": "backend.app.main",
      "to": "httpx"
    },
    {
      "from": "backend.app.main",
      "to": "json"
    },
    {
      "from": "backend.app.main",
      "to": "knowledge_graph"
    },
    {
      "from": "backend.app.main",
      "to": "logging"
    },
    {
      "from": "backend.app.main",
      "to": "monitoring"
    },
    {
      "from": "backend.app.main",
      "to": "os"
    },
    {
      "from": "backend.app.main",
      "to": "pathlib"
    },
    {
      "from": "backend.app.main",
      "to": "processing_engine"
    },
    {
      "from": "backend.app.main",
      "to": "psutil"
    },
    {
      "from": "backend.app.main",
      "to": "pydantic"
    },
    {
      "from": "backend.app.main",
      "to": "re"
    },
    {
      "from": "backend.app.main",
      "to": "routers"
    },
    {
      "from": "backend.app.main",
      "to": "sys"
    },
    {
      "from": "backend.app.main",
      "to": "time"
    },
    {
      "from": "backend.app.main",
      "to": "typing"
    },
    {
      "from": "backend.app.main",
      "to": "uuid"
    },
    {
      "from": "backend.app.main",
      "to": "uvicorn"
    },
    {
      "from": "backend.app.mesh.redis_bus",
      "to": "__future__"
    },
    {
      "from": "backend.app.mesh.redis_bus",
      "to": "json"
    },
    {
      "from": "backend.app.mesh.redis_bus",
      "to": "os"
    },
    {
      "from": "backend.app.mesh.redis_bus",
      "to": "redis"
    },
    {
      "from": "backend.app.mesh.redis_bus",
      "to": "typing"
    },
    {
      "from": "backend.app.models.__init__",
      "to": "agent"
    },
    {
      "from": "backend.app.models.agent",
      "to": "app"
    },
    {
      "from": "backend.app.models.agent",
      "to": "datetime"
    },
    {
      "from": "backend.app.models.agent",
      "to": "enum"
    },
    {
      "from": "backend.app.models.agent",
      "to": "pydantic"
    },
    {
      "from": "backend.app.models.agent",
      "to": "typing"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "aiohttp"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "asyncio"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "collections"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "datetime"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "docker"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "ipaddress"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "json"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "logging"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "redis"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "time"
    },
    {
      "from": "backend.app.orchestration.agent_discovery",
      "to": "typing"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "aiohttp"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "app"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "asyncio"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "collections"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "datetime"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "enum"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "json"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "logging"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "networkx"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "pickle"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "psycopg2"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "random"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "redis"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "time"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "typing"
    },
    {
      "from": "backend.app.orchestration.agent_orchestrator",
      "to": "uuid"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "asyncio"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "collections"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "datetime"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "enum"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "json"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "logging"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "redis"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "time"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "typing"
    },
    {
      "from": "backend.app.orchestration.coordination",
      "to": "uuid"
    },
    {
      "from": "backend.app.orchestration.event_utils",
      "to": "typing"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "asyncio"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "backend"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "collections"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "datetime"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "enum"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "json"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "logging"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "redis"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "typing"
    },
    {
      "from": "backend.app.orchestration.message_bus",
      "to": "uuid"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "app"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "asyncio"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "collections"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "datetime"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "enum"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "json"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "logging"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "psutil"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "redis"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "time"
    },
    {
      "from": "backend.app.orchestration.monitoring",
      "to": "typing"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "app"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "asyncio"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "collections"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "datetime"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "enum"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "heapq"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "json"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "logging"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "random"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "redis"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "time"
    },
    {
      "from": "backend.app.orchestration.task_router",
      "to": "typing"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "app"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "asyncio"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "collections"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "datetime"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "enum"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "json"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "logging"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "message_bus"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "networkx"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "redis"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "typing"
    },
    {
      "from": "backend.app.orchestration.workflow_engine",
      "to": "uuid"
    },
    {
      "from": "backend.app.schemas.agent_protocol",
      "to": "__future__"
    },
    {
      "from": "backend.app.schemas.agent_protocol",
      "to": "datetime"
    },
    {
      "from": "backend.app.schemas.agent_protocol",
      "to": "pydantic"
    },
    {
      "from": "backend.app.schemas.agent_protocol",
      "to": "typing"
    },
    {
      "from": "backend.app.schemas.message_adapters",
      "to": "__future__"
    },
    {
      "from": "backend.app.schemas.message_adapters",
      "to": "message_types"
    },
    {
      "from": "backend.app.schemas.message_adapters",
      "to": "typing"
    },
    {
      "from": "backend.app.schemas.message_model",
      "to": "__future__"
    },
    {
      "from": "backend.app.schemas.message_model",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.schemas.message_model",
      "to": "datetime"
    },
    {
      "from": "backend.app.schemas.message_model",
      "to": "enum"
    },
    {
      "from": "backend.app.schemas.message_model",
      "to": "message_types"
    },
    {
      "from": "backend.app.schemas.message_model",
      "to": "typing"
    },
    {
      "from": "backend.app.schemas.message_model",
      "to": "uuid"
    },
    {
      "from": "backend.app.schemas.message_types",
      "to": "__future__"
    },
    {
      "from": "backend.app.schemas.message_types",
      "to": "enum"
    },
    {
      "from": "backend.app.self_improvement",
      "to": "services"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "aiohttp"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "app"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "asyncio"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "collections"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "datetime"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "hashlib"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "json"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "logging"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "pathlib"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "pickle"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "subprocess"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "time"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "torch"
    },
    {
      "from": "backend.app.services.advanced_model_manager",
      "to": "typing"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "app"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "asyncio"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "datetime"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "json"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "logging"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "os"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "pathlib"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "requests"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "subprocess"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "typing"
    },
    {
      "from": "backend.app.services.agent_orchestrator",
      "to": "uuid"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "asyncio"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "datetime"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "json"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "logging"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "os"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "pathlib"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "psutil"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "requests"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "socket"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "subprocess"
    },
    {
      "from": "backend.app.services.agent_registry",
      "to": "typing"
    },
    {
      "from": "backend.app.services.base_service",
      "to": "abc"
    },
    {
      "from": "backend.app.services.base_service",
      "to": "datetime"
    },
    {
      "from": "backend.app.services.base_service",
      "to": "logging"
    },
    {
      "from": "backend.app.services.base_service",
      "to": "typing"
    },
    {
      "from": "backend.app.services.code_completion.__init__",
      "to": "factory"
    },
    {
      "from": "backend.app.services.code_completion.__init__",
      "to": "interfaces"
    },
    {
      "from": "backend.app.services.code_completion.factory",
      "to": "backend"
    },
    {
      "from": "backend.app.services.code_completion.factory",
      "to": "interfaces"
    },
    {
      "from": "backend.app.services.code_completion.factory",
      "to": "logging"
    },
    {
      "from": "backend.app.services.code_completion.factory",
      "to": "null_client"
    },
    {
      "from": "backend.app.services.code_completion.factory",
      "to": "tabby_client"
    },
    {
      "from": "backend.app.services.code_completion.factory",
      "to": "typing"
    },
    {
      "from": "backend.app.services.code_completion.interfaces",
      "to": "abc"
    },
    {
      "from": "backend.app.services.code_completion.interfaces",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.services.code_completion.interfaces",
      "to": "typing"
    },
    {
      "from": "backend.app.services.code_completion.null_client",
      "to": "interfaces"
    },
    {
      "from": "backend.app.services.code_completion.tabby_client",
      "to": "asyncio"
    },
    {
      "from": "backend.app.services.code_completion.tabby_client",
      "to": "httpx"
    },
    {
      "from": "backend.app.services.code_completion.tabby_client",
      "to": "interfaces"
    },
    {
      "from": "backend.app.services.code_completion.tabby_client",
      "to": "logging"
    },
    {
      "from": "backend.app.services.code_completion.tabby_client",
      "to": "typing"
    },
    {
      "from": "backend.app.services.faiss_manager",
      "to": "datetime"
    },
    {
      "from": "backend.app.services.faiss_manager",
      "to": "faiss"
    },
    {
      "from": "backend.app.services.faiss_manager",
      "to": "logging"
    },
    {
      "from": "backend.app.services.faiss_manager",
      "to": "numpy"
    },
    {
      "from": "backend.app.services.faiss_manager",
      "to": "os"
    },
    {
      "from": "backend.app.services.faiss_manager",
      "to": "pickle"
    },
    {
      "from": "backend.app.services.faiss_manager",
      "to": "typing"
    },
    {
      "from": "backend.app.services.model_manager",
      "to": "aiohttp"
    },
    {
      "from": "backend.app.services.model_manager",
      "to": "app"
    },
    {
      "from": "backend.app.services.model_manager",
      "to": "asyncio"
    },
    {
      "from": "backend.app.services.model_manager",
      "to": "datetime"
    },
    {
      "from": "backend.app.services.model_manager",
      "to": "json"
    },
    {
      "from": "backend.app.services.model_manager",
      "to": "logging"
    },
    {
      "from": "backend.app.services.model_manager",
      "to": "typing"
    },
    {
      "from": "backend.app.services.rate_limiter",
      "to": "__future__"
    },
    {
      "from": "backend.app.services.rate_limiter",
      "to": "app"
    },
    {
      "from": "backend.app.services.rate_limiter",
      "to": "os"
    },
    {
      "from": "backend.app.services.rate_limiter",
      "to": "time"
    },
    {
      "from": "backend.app.services.rate_limiter",
      "to": "typing"
    },
    {
      "from": "backend.app.services.self_improvement",
      "to": "asyncio"
    },
    {
      "from": "backend.app.services.self_improvement",
      "to": "datetime"
    },
    {
      "from": "backend.app.services.self_improvement",
      "to": "json"
    },
    {
      "from": "backend.app.services.self_improvement",
      "to": "logging"
    },
    {
      "from": "backend.app.services.self_improvement",
      "to": "time"
    },
    {
      "from": "backend.app.services.self_improvement",
      "to": "typing"
    },
    {
      "from": "backend.app.services.training.__init__",
      "to": "factory"
    },
    {
      "from": "backend.app.services.training.__init__",
      "to": "interfaces"
    },
    {
      "from": "backend.app.services.training.default_trainer",
      "to": "interfaces"
    },
    {
      "from": "backend.app.services.training.default_trainer",
      "to": "logging"
    },
    {
      "from": "backend.app.services.training.default_trainer",
      "to": "torch"
    },
    {
      "from": "backend.app.services.training.default_trainer",
      "to": "transformers"
    },
    {
      "from": "backend.app.services.training.default_trainer",
      "to": "typing"
    },
    {
      "from": "backend.app.services.training.default_trainer",
      "to": "uuid"
    },
    {
      "from": "backend.app.services.training.factory",
      "to": "backend"
    },
    {
      "from": "backend.app.services.training.factory",
      "to": "default_trainer"
    },
    {
      "from": "backend.app.services.training.factory",
      "to": "fsdp_trainer"
    },
    {
      "from": "backend.app.services.training.factory",
      "to": "interfaces"
    },
    {
      "from": "backend.app.services.training.factory",
      "to": "logging"
    },
    {
      "from": "backend.app.services.training.factory",
      "to": "typing"
    },
    {
      "from": "backend.app.services.training.fsdp_trainer",
      "to": "asyncio"
    },
    {
      "from": "backend.app.services.training.fsdp_trainer",
      "to": "httpx"
    },
    {
      "from": "backend.app.services.training.fsdp_trainer",
      "to": "interfaces"
    },
    {
      "from": "backend.app.services.training.fsdp_trainer",
      "to": "logging"
    },
    {
      "from": "backend.app.services.training.fsdp_trainer",
      "to": "typing"
    },
    {
      "from": "backend.app.services.training.fsdp_trainer",
      "to": "uuid"
    },
    {
      "from": "backend.app.services.training.interfaces",
      "to": "abc"
    },
    {
      "from": "backend.app.services.training.interfaces",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.services.training.interfaces",
      "to": "enum"
    },
    {
      "from": "backend.app.services.training.interfaces",
      "to": "typing"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "asyncio"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "chromadb"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "dataclasses"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "datetime"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "faiss"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "hashlib"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "httpx"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "json"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "logging"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "numpy"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "qdrant_client"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "time"
    },
    {
      "from": "backend.app.services.vector_context_injector",
      "to": "typing"
    },
    {
      "from": "backend.app.services.vector_db_manager",
      "to": "asyncio"
    },
    {
      "from": "backend.app.services.vector_db_manager",
      "to": "datetime"
    },
    {
      "from": "backend.app.services.vector_db_manager",
      "to": "httpx"
    },
    {
      "from": "backend.app.services.vector_db_manager",
      "to": "json"
    },
    {
      "from": "backend.app.services.vector_db_manager",
      "to": "logging"
    },
    {
      "from": "backend.app.services.vector_db_manager",
      "to": "numpy"
    },
    {
      "from": "backend.app.services.vector_db_manager",
      "to": "typing"
    },
    {
      "from": "backend.app.unified_service_controller",
      "to": "asyncio"
    },
    {
      "from": "backend.app.unified_service_controller",
      "to": "datetime"
    },
    {
      "from": "backend.app.unified_service_controller",
      "to": "docker"
    },
    {
      "from": "backend.app.unified_service_controller",
      "to": "httpx"
    },
    {
      "from": "backend.app.unified_service_controller",
      "to": "json"
    },
    {
      "from": "backend.app.unified_service_controller",
      "to": "logging"
    },
    {
      "from": "backend.app.unified_service_controller",
      "to": "psutil"
    },
    {
      "from": "backend.app.unified_service_controller",
      "to": "re"
    },
    {
      "from": "backend.app.unified_service_controller",
      "to": "typing"
    },
    {
      "from": "backend.app.utils.__init__",
      "to": "logger"
    },
    {
      "from": "backend.app.utils.logger",
      "to": "datetime"
    },
    {
      "from": "backend.app.utils.logger",
      "to": "json"
    },
    {
      "from": "backend.app.utils.logger",
      "to": "logging"
    },
    {
      "from": "backend.app.utils.logger",
      "to": "pathlib"
    },
    {
      "from": "backend.app.utils.logger",
      "to": "sys"
    },
    {
      "from": "backend.app.utils.logger",
      "to": "typing"
    },
    {
      "from": "backend.app.utils.validation",
      "to": "re"
    },
    {
      "from": "backend.app.utils.validation",
      "to": "typing"
    },
    {
      "from": "backend.core.config",
      "to": "functools"
    },
    {
      "from": "backend.core.config",
      "to": "logging"
    },
    {
      "from": "backend.core.config",
      "to": "pathlib"
    },
    {
      "from": "backend.core.config",
      "to": "pydantic"
    },
    {
      "from": "backend.core.config",
      "to": "pydantic_settings"
    },
    {
      "from": "backend.core.config",
      "to": "typing"
    },
    {
      "from": "backend.core.database",
      "to": "core"
    },
    {
      "from": "backend.core.database",
      "to": "logging"
    },
    {
      "from": "backend.core.database",
      "to": "sqlalchemy"
    },
    {
      "from": "backend.core.database",
      "to": "sqlmodel"
    },
    {
      "from": "backend.core.database",
      "to": "typing"
    },
    {
      "from": "backend.data_governance.__init__",
      "to": "audit_logger"
    },
    {
      "from": "backend.data_governance.__init__",
      "to": "compliance_manager"
    },
    {
      "from": "backend.data_governance.__init__",
      "to": "data_catalog"
    },
    {
      "from": "backend.data_governance.__init__",
      "to": "data_classifier"
    },
    {
      "from": "backend.data_governance.__init__",
      "to": "governance_framework"
    },
    {
      "from": "backend.data_governance.__init__",
      "to": "lifecycle_manager"
    },
    {
      "from": "backend.data_governance.__init__",
      "to": "lineage_tracker"
    },
    {
      "from": "backend.data_governance.__init__",
      "to": "quality_monitor"
    },
    {
      "from": "backend.data_governance.audit_logger",
      "to": "asyncio"
    },
    {
      "from": "backend.data_governance.audit_logger",
      "to": "dataclasses"
    },
    {
      "from": "backend.data_governance.audit_logger",
      "to": "datetime"
    },
    {
      "from": "backend.data_governance.audit_logger",
      "to": "enum"
    },
    {
      "from": "backend.data_governance.audit_logger",
      "to": "hashlib"
    },
    {
      "from": "backend.data_governance.audit_logger",
      "to": "json"
    },
    {
      "from": "backend.data_governance.audit_logger",
      "to": "logging"
    },
    {
      "from": "backend.data_governance.audit_logger",
      "to": "pathlib"
    },
    {
      "from": "backend.data_governance.audit_logger",
      "to": "typing"
    },
    {
      "from": "backend.data_governance.audit_logger",
      "to": "uuid"
    },
    {
      "from": "backend.data_governance.compliance_manager",
      "to": "asyncio"
    },
    {
      "from": "backend.data_governance.compliance_manager",
      "to": "data_classifier"
    },
    {
      "from": "backend.data_governance.compliance_manager",
      "to": "dataclasses"
    },
    {
      "from": "backend.data_governance.compliance_manager",
      "to": "datetime"
    },
    {
      "from": "backend.data_governance.compliance_manager",
      "to": "enum"
    },
    {
      "from": "backend.data_governance.compliance_manager",
      "to": "json"
    },
    {
      "from": "backend.data_governance.compliance_manager",
      "to": "logging"
    },
    {
      "from": "backend.data_governance.compliance_manager",
      "to": "re"
    },
    {
      "from": "backend.data_governance.compliance_manager",
      "to": "typing"
    },
    {
      "from": "backend.data_governance.data_catalog",
      "to": "asyncio"
    },
    {
      "from": "backend.data_governance.data_catalog",
      "to": "data_classifier"
    },
    {
      "from": "backend.data_governance.data_catalog",
      "to": "dataclasses"
    },
    {
      "from": "backend.data_governance.data_catalog",
      "to": "datetime"
    },
    {
      "from": "backend.data_governance.data_catalog",
      "to": "enum"
    },
    {
      "from": "backend.data_governance.data_catalog",
      "to": "hashlib"
    },
    {
      "from": "backend.data_governance.data_catalog",
      "to": "json"
    },
    {
      "from": "backend.data_governance.data_catalog",
      "to": "logging"
    },
    {
      "from": "backend.data_governance.data_catalog",
      "to": "typing"
    },
    {
      "from": "backend.data_governance.data_catalog",
      "to": "uuid"
    },
    {
      "from": "backend.data_governance.data_classifier",
      "to": "dataclasses"
    },
    {
      "from": "backend.data_governance.data_classifier",
      "to": "datetime"
    },
    {
      "from": "backend.data_governance.data_classifier",
      "to": "enum"
    },
    {
      "from": "backend.data_governance.data_classifier",
      "to": "json"
    },
    {
      "from": "backend.data_governance.data_classifier",
      "to": "logging"
    },
    {
      "from": "backend.data_governance.data_classifier",
      "to": "re"
    },
    {
      "from": "backend.data_governance.data_classifier",
      "to": "typing"
    },
    {
      "from": "backend.data_governance.data_versioning",
      "to": "asyncio"
    },
    {
      "from": "backend.data_governance.data_versioning",
      "to": "dataclasses"
    },
    {
      "from": "backend.data_governance.data_versioning",
      "to": "datetime"
    },
    {
      "from": "backend.data_governance.data_versioning",
      "to": "enum"
    },
    {
      "from": "backend.data_governance.data_versioning",
      "to": "hashlib"
    },
    {
      "from": "backend.data_governance.data_versioning",
      "to": "json"
    },
    {
      "from": "backend.data_governance.data_versioning",
      "to": "logging"
    },
    {
      "from": "backend.data_governance.data_versioning",
      "to": "typing"
    },
    {
      "from": "backend.data_governance.data_versioning",
      "to": "uuid"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "audit_logger"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "compliance_manager"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "data_catalog"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "data_classifier"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "data_versioning"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "datetime"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "fastapi"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "governance_framework"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "lifecycle_manager"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "lineage_tracker"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "logging"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "quality_monitor"
    },
    {
      "from": "backend.data_governance.governance_api",
      "to": "typing"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "asyncio"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "audit_logger"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "compliance_manager"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "data_classifier"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "dataclasses"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "datetime"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "json"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "lifecycle_manager"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "lineage_tracker"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "logging"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "pathlib"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "quality_monitor"
    },
    {
      "from": "backend.data_governance.governance_framework",
      "to": "typing"
    },
    {
      "from": "backend.data_governance.lifecycle_manager",
      "to": "asyncio"
    },
    {
      "from": "backend.data_governance.lifecycle_manager",
      "to": "data_classifier"
    },
    {
      "from": "backend.data_governance.lifecycle_manager",
      "to": "dataclasses"
    },
    {
      "from": "backend.data_governance.lifecycle_manager",
      "to": "datetime"
    },
    {
      "from": "backend.data_governance.lifecycle_manager",
      "to": "enum"
    },
    {
      "from": "backend.data_governance.lifecycle_manager",
      "to": "json"
    },
    {
      "from": "backend.data_governance.lifecycle_manager",
      "to": "logging"
    },
    {
      "from": "backend.data_governance.lifecycle_manager",
      "to": "pathlib"
    },
    {
      "from": "backend.data_governance.lifecycle_manager",
      "to": "typing"
    },
    {
      "from": "backend.data_governance.lineage_tracker",
      "to": "asyncio"
    },
    {
      "from": "backend.data_governance.lineage_tracker",
      "to": "dataclasses"
    },
    {
      "from": "backend.data_governance.lineage_tracker",
      "to": "datetime"
    },
    {
      "from": "backend.data_governance.lineage_tracker",
      "to": "enum"
    },
    {
      "from": "backend.data_governance.lineage_tracker",
      "to": "hashlib"
    },
    {
      "from": "backend.data_governance.lineage_tracker",
      "to": "json"
    },
    {
      "from": "backend.data_governance.lineage_tracker",
      "to": "knowledge_graph"
    },
    {
      "from": "backend.data_governance.lineage_tracker",
      "to": "logging"
    },
    {
      "from": "backend.data_governance.lineage_tracker",
      "to": "typing"
    },
    {
      "from": "backend.data_governance.lineage_tracker",
      "to": "uuid"
    },
    {
      "from": "backend.data_governance.quality_monitor",
      "to": "asyncio"
    },
    {
      "from": "backend.data_governance.quality_monitor",
      "to": "dataclasses"
    },
    {
      "from": "backend.data_governance.quality_monitor",
      "to": "datetime"
    },
    {
      "from": "backend.data_governance.quality_monitor",
      "to": "enum"
    },
    {
      "from": "backend.data_governance.quality_monitor",
      "to": "hashlib"
    },
    {
      "from": "backend.data_governance.quality_monitor",
      "to": "json"
    },
    {
      "from": "backend.data_governance.quality_monitor",
      "to": "logging"
    },
    {
      "from": "backend.data_governance.quality_monitor",
      "to": "re"
    },
    {
      "from": "backend.data_governance.quality_monitor",
      "to": "statistics"
    },
    {
      "from": "backend.data_governance.quality_monitor",
      "to": "typing"
    },
    {
      "from": "backend.deploy_honeypot_infrastructure",
      "to": "app"
    },
    {
      "from": "backend.deploy_honeypot_infrastructure",
      "to": "argparse"
    },
    {
      "from": "backend.deploy_honeypot_infrastructure",
      "to": "asyncio"
    },
    {
      "from": "backend.deploy_honeypot_infrastructure",
      "to": "datetime"
    },
    {
      "from": "backend.deploy_honeypot_infrastructure",
      "to": "json"
    },
    {
      "from": "backend.deploy_honeypot_infrastructure",
      "to": "logging"
    },
    {
      "from": "backend.deploy_honeypot_infrastructure",
      "to": "pathlib"
    },
    {
      "from": "backend.deploy_honeypot_infrastructure",
      "to": "security"
    },
    {
      "from": "backend.deploy_honeypot_infrastructure",
      "to": "sys"
    },
    {
      "from": "backend.deploy_honeypot_infrastructure",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.__init__",
      "to": "batch_processor"
    },
    {
      "from": "backend.edge_inference.__init__",
      "to": "deployment"
    },
    {
      "from": "backend.edge_inference.__init__",
      "to": "failover"
    },
    {
      "from": "backend.edge_inference.__init__",
      "to": "intelligent_router"
    },
    {
      "from": "backend.edge_inference.__init__",
      "to": "memory_manager"
    },
    {
      "from": "backend.edge_inference.__init__",
      "to": "model_cache"
    },
    {
      "from": "backend.edge_inference.__init__",
      "to": "proxy"
    },
    {
      "from": "backend.edge_inference.__init__",
      "to": "quantization"
    },
    {
      "from": "backend.edge_inference.__init__",
      "to": "telemetry"
    },
    {
      "from": "backend.edge_inference.api",
      "to": "asyncio"
    },
    {
      "from": "backend.edge_inference.api",
      "to": "datetime"
    },
    {
      "from": "backend.edge_inference.api",
      "to": "fastapi"
    },
    {
      "from": "backend.edge_inference.api",
      "to": "intelligent_router"
    },
    {
      "from": "backend.edge_inference.api",
      "to": "proxy"
    },
    {
      "from": "backend.edge_inference.api",
      "to": "pydantic"
    },
    {
      "from": "backend.edge_inference.api",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.api",
      "to": "uvicorn"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "asyncio"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "collections"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "concurrent"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "dataclasses"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "datetime"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "enum"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "hashlib"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "json"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "logging"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "numpy"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "threading"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "time"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.batch_processor",
      "to": "weakref"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "aiofiles"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "aiohttp"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "asyncio"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "dataclasses"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "datetime"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "enum"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "json"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "logging"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "os"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "pathlib"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "shutil"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "subprocess"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "tempfile"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.deployment",
      "to": "yaml"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "aiohttp"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "asyncio"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "collections"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "dataclasses"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "datetime"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "enum"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "json"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "logging"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "psutil"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "requests"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "threading"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "time"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.failover",
      "to": "weakref"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "asyncio"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "collections"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "concurrent"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "dataclasses"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "datetime"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "enum"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "heapq"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "logging"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "math"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "numpy"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "threading"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "time"
    },
    {
      "from": "backend.edge_inference.intelligent_router",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "asyncio"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "collections"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "dataclasses"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "datetime"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "enum"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "gc"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "logging"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "mmap"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "numpy"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "os"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "pathlib"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "psutil"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "threading"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "time"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.memory_manager",
      "to": "weakref"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "asyncio"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "collections"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "dataclasses"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "datetime"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "enum"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "hashlib"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "json"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "logging"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "mmap"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "numpy"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "os"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "pathlib"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "pickle"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "psutil"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "shutil"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "threading"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "time"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.model_cache",
      "to": "weakref"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "aiohttp"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "asyncio"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "collections"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "dataclasses"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "datetime"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "enum"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "hashlib"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "json"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "logging"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "numpy"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "psutil"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "threading"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "time"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.proxy",
      "to": "weakref"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "asyncio"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "concurrent"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "dataclasses"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "enum"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "hashlib"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "json"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "logging"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "mmap"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "numpy"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "os"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "pathlib"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "psutil"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "shutil"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "struct"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "threading"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "time"
    },
    {
      "from": "backend.edge_inference.quantization",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "aiofiles"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "app"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "asyncio"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "collections"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "dataclasses"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "datetime"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "enum"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "json"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "logging"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "numpy"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "pathlib"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "psutil"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "sqlite3"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "threading"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "time"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "typing"
    },
    {
      "from": "backend.edge_inference.telemetry",
      "to": "weakref"
    },
    {
      "from": "backend.energy.__init__",
      "to": "agent_hibernation"
    },
    {
      "from": "backend.energy.__init__",
      "to": "energy_profiler"
    },
    {
      "from": "backend.energy.__init__",
      "to": "power_optimizer"
    },
    {
      "from": "backend.energy.__init__",
      "to": "workload_scheduler"
    },
    {
      "from": "backend.energy.agent_hibernation",
      "to": "dataclasses"
    },
    {
      "from": "backend.energy.agent_hibernation",
      "to": "datetime"
    },
    {
      "from": "backend.energy.agent_hibernation",
      "to": "enum"
    },
    {
      "from": "backend.energy.agent_hibernation",
      "to": "json"
    },
    {
      "from": "backend.energy.agent_hibernation",
      "to": "logging"
    },
    {
      "from": "backend.energy.agent_hibernation",
      "to": "psutil"
    },
    {
      "from": "backend.energy.agent_hibernation",
      "to": "threading"
    },
    {
      "from": "backend.energy.agent_hibernation",
      "to": "time"
    },
    {
      "from": "backend.energy.agent_hibernation",
      "to": "typing"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "agent_hibernation"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "asyncio"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "datetime"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "energy_profiler"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "logging"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "power_optimizer"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "resource_allocator"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "sustainability_manager"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "time"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "typing"
    },
    {
      "from": "backend.energy.demo_energy_optimization",
      "to": "workload_scheduler"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "agent_hibernation"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "datetime"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "energy_profiler"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "fastapi"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "logging"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "monitoring_dashboard"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "power_optimizer"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "resource_allocator"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "sustainability_manager"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "typing"
    },
    {
      "from": "backend.energy.energy_api",
      "to": "workload_scheduler"
    },
    {
      "from": "backend.energy.energy_cli",
      "to": "asyncio"
    },
    {
      "from": "backend.energy.energy_cli",
      "to": "click"
    },
    {
      "from": "backend.energy.energy_cli",
      "to": "datetime"
    },
    {
      "from": "backend.energy.energy_cli",
      "to": "energy"
    },
    {
      "from": "backend.energy.energy_cli",
      "to": "json"
    },
    {
      "from": "backend.energy.energy_cli",
      "to": "os"
    },
    {
      "from": "backend.energy.energy_cli",
      "to": "sys"
    },
    {
      "from": "backend.energy.energy_cli",
      "to": "time"
    },
    {
      "from": "backend.energy.energy_cli",
      "to": "typing"
    },
    {
      "from": "backend.energy.energy_profiler",
      "to": "dataclasses"
    },
    {
      "from": "backend.energy.energy_profiler",
      "to": "datetime"
    },
    {
      "from": "backend.energy.energy_profiler",
      "to": "json"
    },
    {
      "from": "backend.energy.energy_profiler",
      "to": "logging"
    },
    {
      "from": "backend.energy.energy_profiler",
      "to": "numpy"
    },
    {
      "from": "backend.energy.energy_profiler",
      "to": "os"
    },
    {
      "from": "backend.energy.energy_profiler",
      "to": "psutil"
    },
    {
      "from": "backend.energy.energy_profiler",
      "to": "threading"
    },
    {
      "from": "backend.energy.energy_profiler",
      "to": "time"
    },
    {
      "from": "backend.energy.energy_profiler",
      "to": "typing"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "agent_hibernation"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "asyncio"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "dataclasses"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "datetime"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "energy_profiler"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "fastapi"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "json"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "logging"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "power_optimizer"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "resource_allocator"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "typing"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "uvicorn"
    },
    {
      "from": "backend.energy.monitoring_dashboard",
      "to": "workload_scheduler"
    },
    {
      "from": "backend.energy.power_optimizer",
      "to": "dataclasses"
    },
    {
      "from": "backend.energy.power_optimizer",
      "to": "datetime"
    },
    {
      "from": "backend.energy.power_optimizer",
      "to": "enum"
    },
    {
      "from": "backend.energy.power_optimizer",
      "to": "logging"
    },
    {
      "from": "backend.energy.power_optimizer",
      "to": "os"
    },
    {
      "from": "backend.energy.power_optimizer",
      "to": "psutil"
    },
    {
      "from": "backend.energy.power_optimizer",
      "to": "subprocess"
    },
    {
      "from": "backend.energy.power_optimizer",
      "to": "threading"
    },
    {
      "from": "backend.energy.power_optimizer",
      "to": "time"
    },
    {
      "from": "backend.energy.power_optimizer",
      "to": "typing"
    },
    {
      "from": "backend.energy.resource_allocator",
      "to": "dataclasses"
    },
    {
      "from": "backend.energy.resource_allocator",
      "to": "datetime"
    },
    {
      "from": "backend.energy.resource_allocator",
      "to": "enum"
    },
    {
      "from": "backend.energy.resource_allocator",
      "to": "json"
    },
    {
      "from": "backend.energy.resource_allocator",
      "to": "logging"
    },
    {
      "from": "backend.energy.resource_allocator",
      "to": "math"
    },
    {
      "from": "backend.energy.resource_allocator",
      "to": "psutil"
    },
    {
      "from": "backend.energy.resource_allocator",
      "to": "threading"
    },
    {
      "from": "backend.energy.resource_allocator",
      "to": "time"
    },
    {
      "from": "backend.energy.resource_allocator",
      "to": "typing"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "dataclasses"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "datetime"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "enum"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "json"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "logging"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "math"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "psutil"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "requests"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "threading"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "time"
    },
    {
      "from": "backend.energy.sustainability_manager",
      "to": "typing"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "app"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "collections"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "dataclasses"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "datetime"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "enum"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "heapq"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "json"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "logging"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "psutil"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "threading"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "time"
    },
    {
      "from": "backend.energy.workload_scheduler",
      "to": "typing"
    },
    {
      "from": "backend.federated_learning.__init__",
      "to": "aggregator"
    },
    {
      "from": "backend.federated_learning.__init__",
      "to": "client"
    },
    {
      "from": "backend.federated_learning.__init__",
      "to": "coordinator"
    },
    {
      "from": "backend.federated_learning.__init__",
      "to": "dashboard"
    },
    {
      "from": "backend.federated_learning.__init__",
      "to": "monitoring"
    },
    {
      "from": "backend.federated_learning.__init__",
      "to": "privacy"
    },
    {
      "from": "backend.federated_learning.__init__",
      "to": "versioning"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "abc"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "asyncio"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "collections"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "concurrent"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "dataclasses"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "enum"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "json"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "logging"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "numpy"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "pickle"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "scipy"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "time"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "typing"
    },
    {
      "from": "backend.federated_learning.aggregator",
      "to": "zlib"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "abc"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "aggregator"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "ai_agents"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "aioredis"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "asyncio"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "concurrent"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "dataclasses"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "datetime"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "enum"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "json"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "logging"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "numpy"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "pickle"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "privacy"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "pydantic"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "time"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "typing"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "uuid"
    },
    {
      "from": "backend.federated_learning.client",
      "to": "zlib"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "aggregator"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "ai_agents"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "aioredis"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "asyncio"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "collections"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "dataclasses"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "datetime"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "enum"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "json"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "logging"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "monitoring"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "numpy"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "privacy"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "pydantic"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "random"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "time"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "typing"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "uuid"
    },
    {
      "from": "backend.federated_learning.coordinator",
      "to": "versioning"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "aggregator"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "asyncio"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "coordinator"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "dataclasses"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "datetime"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "fastapi"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "json"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "logging"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "monitoring"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "privacy"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "pydantic"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "time"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "typing"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "uuid"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "uvicorn"
    },
    {
      "from": "backend.federated_learning.dashboard",
      "to": "versioning"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "aggregator"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "ai_agents"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "asyncio"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "client"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "coordinator"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "dashboard"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "datetime"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "json"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "logging"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "monitoring"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "numpy"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "pathlib"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "privacy"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "time"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "typing"
    },
    {
      "from": "backend.federated_learning.integration",
      "to": "versioning"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "aioredis"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "app"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "asyncio"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "collections"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "concurrent"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "dataclasses"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "datetime"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "enum"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "json"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "logging"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "numpy"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "pydantic"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "random"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "statistics"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "time"
    },
    {
      "from": "backend.federated_learning.monitoring",
      "to": "typing"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "abc"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "asyncio"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "base64"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "collections"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "cryptography"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "dataclasses"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "datetime"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "enum"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "hashlib"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "hmac"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "json"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "logging"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "numpy"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "secrets"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "time"
    },
    {
      "from": "backend.federated_learning.privacy",
      "to": "typing"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "aiofiles"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "aioredis"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "asyncio"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "collections"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "dataclasses"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "datetime"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "enum"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "hashlib"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "json"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "logging"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "numpy"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "os"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "pathlib"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "pickle"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "time"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "typing"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "uuid"
    },
    {
      "from": "backend.federated_learning.versioning",
      "to": "zlib"
    },
    {
      "from": "backend.knowledge_graph.__init__",
      "to": "schema"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "asyncio"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "datetime"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "fastapi"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "graph_builder"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "logging"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "neo4j_manager"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "pathlib"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "pydantic"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "query_engine"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "real_time_updater"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "reasoning_engine"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "schema"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "typing"
    },
    {
      "from": "backend.knowledge_graph.api",
      "to": "visualization"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "ast"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "datetime"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "json"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "logging"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "neo4j_manager"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "os"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "pathlib"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "re"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "schema"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "typing"
    },
    {
      "from": "backend.knowledge_graph.graph_builder",
      "to": "yaml"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "ai_agents"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "asyncio"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "datetime"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "graph_builder"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "logging"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "neo4j_manager"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "os"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "pathlib"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "query_engine"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "real_time_updater"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "reasoning_engine"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "schema"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "typing"
    },
    {
      "from": "backend.knowledge_graph.manager",
      "to": "visualization"
    },
    {
      "from": "backend.knowledge_graph.neo4j_manager",
      "to": "asyncio"
    },
    {
      "from": "backend.knowledge_graph.neo4j_manager",
      "to": "contextlib"
    },
    {
      "from": "backend.knowledge_graph.neo4j_manager",
      "to": "datetime"
    },
    {
      "from": "backend.knowledge_graph.neo4j_manager",
      "to": "json"
    },
    {
      "from": "backend.knowledge_graph.neo4j_manager",
      "to": "logging"
    },
    {
      "from": "backend.knowledge_graph.neo4j_manager",
      "to": "neo4j"
    },
    {
      "from": "backend.knowledge_graph.neo4j_manager",
      "to": "os"
    },
    {
      "from": "backend.knowledge_graph.neo4j_manager",
      "to": "schema"
    },
    {
      "from": "backend.knowledge_graph.neo4j_manager",
      "to": "time"
    },
    {
      "from": "backend.knowledge_graph.neo4j_manager",
      "to": "typing"
    },
    {
      "from": "backend.knowledge_graph.query_engine",
      "to": "dataclasses"
    },
    {
      "from": "backend.knowledge_graph.query_engine",
      "to": "datetime"
    },
    {
      "from": "backend.knowledge_graph.query_engine",
      "to": "logging"
    },
    {
      "from": "backend.knowledge_graph.query_engine",
      "to": "neo4j_manager"
    },
    {
      "from": "backend.knowledge_graph.query_engine",
      "to": "re"
    },
    {
      "from": "backend.knowledge_graph.query_engine",
      "to": "schema"
    },
    {
      "from": "backend.knowledge_graph.query_engine",
      "to": "typing"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "ai_agents"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "aiofiles"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "asyncio"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "dataclasses"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "datetime"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "graph_builder"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "hashlib"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "json"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "logging"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "neo4j_manager"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "pathlib"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "schema"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "time"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "typing"
    },
    {
      "from": "backend.knowledge_graph.real_time_updater",
      "to": "watchdog"
    },
    {
      "from": "backend.knowledge_graph.reasoning_engine",
      "to": "asyncio"
    },
    {
      "from": "backend.knowledge_graph.reasoning_engine",
      "to": "collections"
    },
    {
      "from": "backend.knowledge_graph.reasoning_engine",
      "to": "dataclasses"
    },
    {
      "from": "backend.knowledge_graph.reasoning_engine",
      "to": "datetime"
    },
    {
      "from": "backend.knowledge_graph.reasoning_engine",
      "to": "json"
    },
    {
      "from": "backend.knowledge_graph.reasoning_engine",
      "to": "logging"
    },
    {
      "from": "backend.knowledge_graph.reasoning_engine",
      "to": "query_engine"
    },
    {
      "from": "backend.knowledge_graph.reasoning_engine",
      "to": "schema"
    },
    {
      "from": "backend.knowledge_graph.reasoning_engine",
      "to": "statistics"
    },
    {
      "from": "backend.knowledge_graph.reasoning_engine",
      "to": "typing"
    },
    {
      "from": "backend.knowledge_graph.schema",
      "to": "dataclasses"
    },
    {
      "from": "backend.knowledge_graph.schema",
      "to": "datetime"
    },
    {
      "from": "backend.knowledge_graph.schema",
      "to": "enum"
    },
    {
      "from": "backend.knowledge_graph.schema",
      "to": "pydantic"
    },
    {
      "from": "backend.knowledge_graph.schema",
      "to": "typing"
    },
    {
      "from": "backend.knowledge_graph.schema",
      "to": "uuid"
    },
    {
      "from": "backend.knowledge_graph.visualization",
      "to": "dataclasses"
    },
    {
      "from": "backend.knowledge_graph.visualization",
      "to": "datetime"
    },
    {
      "from": "backend.knowledge_graph.visualization",
      "to": "json"
    },
    {
      "from": "backend.knowledge_graph.visualization",
      "to": "logging"
    },
    {
      "from": "backend.knowledge_graph.visualization",
      "to": "pathlib"
    },
    {
      "from": "backend.knowledge_graph.visualization",
      "to": "query_engine"
    },
    {
      "from": "backend.knowledge_graph.visualization",
      "to": "schema"
    },
    {
      "from": "backend.knowledge_graph.visualization",
      "to": "typing"
    },
    {
      "from": "backend.minimal_app",
      "to": "fastapi"
    },
    {
      "from": "backend.minimal_app",
      "to": "logging"
    },
    {
      "from": "backend.minimal_app",
      "to": "os"
    },
    {
      "from": "backend.minimal_app",
      "to": "uvicorn"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "agent_tracker"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "analysis_tools"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "asyncio"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "config"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "database"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "integration"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "logging"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "metrics"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "pipeline_automation"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "tracking_server"
    },
    {
      "from": "backend.mlflow_system.__init__",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "asyncio"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "config"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "database"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "datetime"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "inspect"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "json"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "logging"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "metrics"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "mlflow"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "numpy"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "os"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "pathlib"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "psutil"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "sys"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "time"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.agent_tracker",
      "to": "uuid"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "asyncio"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "config"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "database"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "dataclasses"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "datetime"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "json"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "logging"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "matplotlib"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "metrics"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "mlflow"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "numpy"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "os"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "pandas"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "pathlib"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "plotly"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "scipy"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "seaborn"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "sklearn"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "statistics"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "time"
    },
    {
      "from": "backend.mlflow_system.analysis_tools",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.config",
      "to": "dataclasses"
    },
    {
      "from": "backend.mlflow_system.config",
      "to": "os"
    },
    {
      "from": "backend.mlflow_system.config",
      "to": "pathlib"
    },
    {
      "from": "backend.mlflow_system.config",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.config",
      "to": "yaml"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "agent_tracker"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "analysis_tools"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "asyncio"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "config"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "datetime"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "json"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "logging"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "metrics"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "mlflow"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "numpy"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "os"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "pandas"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "pathlib"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "pipeline_automation"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "plotly"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "streamlit"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "time"
    },
    {
      "from": "backend.mlflow_system.dashboard",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.database",
      "to": "asyncio"
    },
    {
      "from": "backend.mlflow_system.database",
      "to": "asyncpg"
    },
    {
      "from": "backend.mlflow_system.database",
      "to": "config"
    },
    {
      "from": "backend.mlflow_system.database",
      "to": "logging"
    },
    {
      "from": "backend.mlflow_system.database",
      "to": "os"
    },
    {
      "from": "backend.mlflow_system.database",
      "to": "psycopg2"
    },
    {
      "from": "backend.mlflow_system.database",
      "to": "sqlalchemy"
    },
    {
      "from": "backend.mlflow_system.database",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "agent_tracker"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "aioredis"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "asyncio"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "config"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "database"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "datetime"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "httpx"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "json"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "logging"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "metrics"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "mlflow"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "os"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "pathlib"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "pipeline_automation"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "prometheus_client"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "redis"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "sqlalchemy"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "time"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "tracking_server"
    },
    {
      "from": "backend.mlflow_system.integration",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.metrics",
      "to": "asyncio"
    },
    {
      "from": "backend.mlflow_system.metrics",
      "to": "functools"
    },
    {
      "from": "backend.mlflow_system.metrics",
      "to": "prometheus_client"
    },
    {
      "from": "backend.mlflow_system.metrics",
      "to": "time"
    },
    {
      "from": "backend.mlflow_system.metrics",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "agent_tracker"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "asyncio"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "config"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "dataclasses"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "datetime"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "enum"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "itertools"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "json"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "logging"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "metrics"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "mlflow"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "numpy"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "optuna"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "os"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "pathlib"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "psutil"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "time"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "uuid"
    },
    {
      "from": "backend.mlflow_system.pipeline_automation",
      "to": "yaml"
    },
    {
      "from": "backend.mlflow_system.start_system",
      "to": "asyncio"
    },
    {
      "from": "backend.mlflow_system.start_system",
      "to": "click"
    },
    {
      "from": "backend.mlflow_system.start_system",
      "to": "logging"
    },
    {
      "from": "backend.mlflow_system.start_system",
      "to": "mlflow_system"
    },
    {
      "from": "backend.mlflow_system.start_system",
      "to": "os"
    },
    {
      "from": "backend.mlflow_system.start_system",
      "to": "pathlib"
    },
    {
      "from": "backend.mlflow_system.start_system",
      "to": "signal"
    },
    {
      "from": "backend.mlflow_system.start_system",
      "to": "subprocess"
    },
    {
      "from": "backend.mlflow_system.start_system",
      "to": "sys"
    },
    {
      "from": "backend.mlflow_system.start_system",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "asyncio"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "concurrent"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "config"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "database"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "logging"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "metrics"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "mlflow"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "os"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "pathlib"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "psutil"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "signal"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "sqlalchemy"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "sys"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "threading"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "time"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "typing"
    },
    {
      "from": "backend.mlflow_system.tracking_server",
      "to": "uvicorn"
    },
    {
      "from": "backend.monitoring.monitoring",
      "to": "app"
    },
    {
      "from": "backend.monitoring.monitoring",
      "to": "asyncio"
    },
    {
      "from": "backend.monitoring.monitoring",
      "to": "datetime"
    },
    {
      "from": "backend.monitoring.monitoring",
      "to": "fastapi"
    },
    {
      "from": "backend.monitoring.monitoring",
      "to": "functools"
    },
    {
      "from": "backend.monitoring.monitoring",
      "to": "prometheus_client"
    },
    {
      "from": "backend.monitoring.monitoring",
      "to": "time"
    },
    {
      "from": "backend.monitoring.monitoring",
      "to": "typing"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "aiohttp"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "app"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "asyncio"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "asyncio_mqtt"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "dataclasses"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "datetime"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "email"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "enum"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "json"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "logging"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "pathlib"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "smtplib"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "sqlite3"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "ssl"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "typing"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "uuid"
    },
    {
      "from": "backend.oversight.alert_notification_system",
      "to": "websockets"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "asyncio"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "dataclasses"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "datetime"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "enum"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "jinja2"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "json"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "logging"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "matplotlib"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "pandas"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "pathlib"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "seaborn"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "sqlite3"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "typing"
    },
    {
      "from": "backend.oversight.compliance_reporter",
      "to": "uuid"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "aiohttp"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "aiohttp_cors"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "asyncio"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "dataclasses"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "datetime"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "enum"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "json"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "logging"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "os"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "pandas"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "pathlib"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "plotly"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "sqlite3"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "streamlit"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "sys"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "typing"
    },
    {
      "from": "backend.oversight.human_oversight_interface",
      "to": "uuid"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "argparse"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "asyncio"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "datetime"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "json"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "logging"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "oversight"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "pathlib"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "psutil"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "random"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "signal"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "sys"
    },
    {
      "from": "backend.oversight.oversight_orchestrator",
      "to": "typing"
    },
    {
      "from": "backend.processing_engine.reasoning_engine",
      "to": "asyncio"
    },
    {
      "from": "backend.processing_engine.reasoning_engine",
      "to": "datetime"
    },
    {
      "from": "backend.processing_engine.reasoning_engine",
      "to": "json"
    },
    {
      "from": "backend.processing_engine.reasoning_engine",
      "to": "logging"
    },
    {
      "from": "backend.processing_engine.reasoning_engine",
      "to": "typing"
    },
    {
      "from": "backend.routers.agent_interaction",
      "to": "backend"
    },
    {
      "from": "backend.routers.agent_interaction",
      "to": "datetime"
    },
    {
      "from": "backend.routers.agent_interaction",
      "to": "fastapi"
    },
    {
      "from": "backend.routers.agent_interaction",
      "to": "pydantic"
    },
    {
      "from": "backend.routers.agent_interaction",
      "to": "typing"
    },
    {
      "from": "backend.routers.agent_interaction",
      "to": "uuid"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "aioredis"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "argparse"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "asyncio"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "federated_learning"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "json"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "logging"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "pathlib"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "scripts"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "sys"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "time"
    },
    {
      "from": "backend.scripts.deploy-federated-learning",
      "to": "typing"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "aiohttp"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "aiohttp_cors"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "asyncio"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "base64"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "datetime"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "hashlib"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "json"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "logging"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "pathlib"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "random"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "re"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "security"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "time"
    },
    {
      "from": "backend.security.ai_agent_honeypot",
      "to": "typing"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "asyncio"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "datetime"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "json"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "logging"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "os"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "pathlib"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "pickle"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "requests"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "security"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "shutil"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "subprocess"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "tarfile"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "typing"
    },
    {
      "from": "backend.security.cowrie_honeypot",
      "to": "yaml"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "asyncio"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "datetime"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "hashlib"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "json"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "logging"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "pathlib"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "random"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "re"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "security"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "socket"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "string"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "struct"
    },
    {
      "from": "backend.security.database_honeypot",
      "to": "typing"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "app"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "asyncio"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "concurrent"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "dataclasses"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "datetime"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "enum"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "hashlib"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "ipaddress"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "json"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "logging"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "os"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "pathlib"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "random"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "socket"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "sqlite3"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "subprocess"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "threading"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "time"
    },
    {
      "from": "backend.security.honeypot_infrastructure",
      "to": "typing"
    },
    {
      "from": "backend.security.honeypot_integration",
      "to": "app"
    },
    {
      "from": "backend.security.honeypot_integration",
      "to": "asyncio"
    },
    {
      "from": "backend.security.honeypot_integration",
      "to": "datetime"
    },
    {
      "from": "backend.security.honeypot_integration",
      "to": "json"
    },
    {
      "from": "backend.security.honeypot_integration",
      "to": "logging"
    },
    {
      "from": "backend.security.honeypot_integration",
      "to": "pathlib"
    },
    {
      "from": "backend.security.honeypot_integration",
      "to": "security"
    },
    {
      "from": "backend.security.honeypot_integration",
      "to": "threading"
    },
    {
      "from": "backend.security.honeypot_integration",
      "to": "typing"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "aiohttp"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "asyncio"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "base64"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "datetime"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "hashlib"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "jinja2"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "json"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "logging"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "pathlib"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "random"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "re"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "security"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "ssl"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "string"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "typing"
    },
    {
      "from": "backend.security.web_honeypot",
      "to": "urllib"
    },
    {
      "from": "backend.setup",
      "to": "setuptools"
    },
    {
      "from": "backend.tests.agent_compliance_fixer",
      "to": "datetime"
    },
    {
      "from": "backend.tests.agent_compliance_fixer",
      "to": "os"
    },
    {
      "from": "backend.tests.agent_compliance_fixer",
      "to": "pathlib"
    },
    {
      "from": "backend.tests.agent_compliance_fixer",
      "to": "re"
    },
    {
      "from": "backend.tests.agent_compliance_fixer",
      "to": "typing"
    },
    {
      "from": "backend.tests.agent_compliance_fixer",
      "to": "yaml"
    },
    {
      "from": "backend.tests.test_agent_hygiene_compliance",
      "to": "dataclasses"
    },
    {
      "from": "backend.tests.test_agent_hygiene_compliance",
      "to": "datetime"
    },
    {
      "from": "backend.tests.test_agent_hygiene_compliance",
      "to": "glob"
    },
    {
      "from": "backend.tests.test_agent_hygiene_compliance",
      "to": "json"
    },
    {
      "from": "backend.tests.test_agent_hygiene_compliance",
      "to": "os"
    },
    {
      "from": "backend.tests.test_agent_hygiene_compliance",
      "to": "pathlib"
    },
    {
      "from": "backend.tests.test_agent_hygiene_compliance",
      "to": "pytest"
    },
    {
      "from": "backend.tests.test_agent_hygiene_compliance",
      "to": "re"
    },
    {
      "from": "backend.tests.test_agent_hygiene_compliance",
      "to": "typing"
    },
    {
      "from": "backend.tests.test_agent_hygiene_compliance",
      "to": "yaml"
    },
    {
      "from": "backend.tests.test_api_basic",
      "to": "fastapi"
    },
    {
      "from": "backend.tests.test_api_basic",
      "to": "httpx"
    },
    {
      "from": "backend.tests.test_api_basic",
      "to": "os"
    },
    {
      "from": "backend.tests.test_api_basic",
      "to": "pytest"
    },
    {
      "from": "backend.tests.test_api_basic",
      "to": "sys"
    },
    {
      "from": "backend.tests.test_api_basic",
      "to": "unittest"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "app"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "concurrent"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "datetime"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "fastapi"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "json"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "os"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "pathlib"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "pytest"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "sys"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "tempfile"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "time"
    },
    {
      "from": "backend.tests.test_api_endpoints",
      "to": "unittest"
    },
    {
      "from": "backend.tests.test_chromadb_simple",
      "to": "json"
    },
    {
      "from": "backend.tests.test_chromadb_simple",
      "to": "pytest"
    },
    {
      "from": "backend.tests.test_chromadb_simple",
      "to": "requests"
    },
    {
      "from": "backend.tests.test_chromadb_simple",
      "to": "socket"
    },
    {
      "from": "backend.tests.test_chromadb_simple",
      "to": "time"
    },
    {
      "from": "backend.tests.test_cognitive_architecture",
      "to": "asyncio"
    },
    {
      "from": "backend.tests.test_cognitive_architecture",
      "to": "backend"
    },
    {
      "from": "backend.tests.test_cognitive_architecture",
      "to": "datetime"
    },
    {
      "from": "backend.tests.test_cognitive_architecture",
      "to": "pytest"
    },
    {
      "from": "backend.tests.test_cognitive_architecture",
      "to": "time"
    },
    {
      "from": "backend.tests.test_comprehensive_report",
      "to": "datetime"
    },
    {
      "from": "backend.tests.test_comprehensive_report",
      "to": "json"
    },
    {
      "from": "backend.tests.test_comprehensive_report",
      "to": "logging"
    },
    {
      "from": "backend.tests.test_comprehensive_report",
      "to": "os"
    },
    {
      "from": "backend.tests.test_comprehensive_report",
      "to": "time"
    },
    {
      "from": "backend.tests.test_comprehensive_report",
      "to": "typing"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "asyncio"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "chromadb"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "datetime"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "json"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "logging"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "neo4j"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "os"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "psycopg2"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "redis"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "requests"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "sys"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "time"
    },
    {
      "from": "backend.tests.test_database_connections",
      "to": "typing"
    },
    {
      "from": "backend.tests.test_deployment_validation",
      "to": "datetime"
    },
    {
      "from": "backend.tests.test_deployment_validation",
      "to": "json"
    },
    {
      "from": "backend.tests.test_deployment_validation",
      "to": "logging"
    },
    {
      "from": "backend.tests.test_deployment_validation",
      "to": "os"
    },
    {
      "from": "backend.tests.test_deployment_validation",
      "to": "subprocess"
    },
    {
      "from": "backend.tests.test_deployment_validation",
      "to": "time"
    },
    {
      "from": "backend.tests.test_deployment_validation",
      "to": "typing"
    },
    {
      "from": "backend.tests.test_main_app",
      "to": "app"
    },
    {
      "from": "backend.tests.test_main_app",
      "to": "fastapi"
    },
    {
      "from": "backend.tests.test_main_app",
      "to": "os"
    },
    {
      "from": "backend.tests.test_main_app",
      "to": "pytest"
    },
    {
      "from": "backend.tests.test_main_app",
      "to": "sys"
    },
    {
      "from": "backend.tests.test_main_app",
      "to": "unittest"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "asyncio"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "backend"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "concurrent"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "datetime"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "fastapi"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "httpx"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "json"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "psutil"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "pytest"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "time"
    },
    {
      "from": "backend.tests.test_main_comprehensive",
      "to": "unittest"
    },
    {
      "from": "backend.tests.test_network_validation",
      "to": "json"
    },
    {
      "from": "backend.tests.test_network_validation",
      "to": "logging"
    },
    {
      "from": "backend.tests.test_network_validation",
      "to": "os"
    },
    {
      "from": "backend.tests.test_network_validation",
      "to": "requests"
    },
    {
      "from": "backend.tests.test_network_validation",
      "to": "socket"
    },
    {
      "from": "backend.tests.test_network_validation",
      "to": "subprocess"
    },
    {
      "from": "backend.tests.test_network_validation",
      "to": "time"
    },
    {
      "from": "backend.tests.test_network_validation",
      "to": "typing"
    },
    {
      "from": "backend.tests.test_vector_context_injector",
      "to": "app"
    },
    {
      "from": "backend.tests.test_vector_context_injector",
      "to": "asyncio"
    },
    {
      "from": "backend.tests.test_vector_context_injector",
      "to": "datetime"
    },
    {
      "from": "backend.tests.test_vector_context_injector",
      "to": "fastapi"
    },
    {
      "from": "backend.tests.test_vector_context_injector",
      "to": "json"
    },
    {
      "from": "backend.tests.test_vector_context_injector",
      "to": "pytest"
    },
    {
      "from": "backend.tests.test_vector_context_injector",
      "to": "unittest"
    },
    {
      "from": "backend.tests.test_vector_context_integration",
      "to": "app"
    },
    {
      "from": "backend.tests.test_vector_context_integration",
      "to": "asyncio"
    },
    {
      "from": "backend.tests.test_vector_context_integration",
      "to": "concurrent"
    },
    {
      "from": "backend.tests.test_vector_context_integration",
      "to": "datetime"
    },
    {
      "from": "backend.tests.test_vector_context_integration",
      "to": "fastapi"
    },
    {
      "from": "backend.tests.test_vector_context_integration",
      "to": "json"
    },
    {
      "from": "backend.tests.test_vector_context_integration",
      "to": "pytest"
    },
    {
      "from": "backend.tests.test_vector_context_integration",
      "to": "time"
    },
    {
      "from": "backend.tests.test_vector_context_integration",
      "to": "unittest"
    },
    {
      "from": "backend.utils.cache_manager",
      "to": "json"
    },
    {
      "from": "backend.utils.cache_manager",
      "to": "logging"
    },
    {
      "from": "backend.utils.cache_manager",
      "to": "os"
    },
    {
      "from": "backend.utils.cache_manager",
      "to": "shutil"
    },
    {
      "from": "backend.utils.cache_manager",
      "to": "time"
    },
    {
      "from": "backend.utils.file_reader",
      "to": "large_file_handler"
    },
    {
      "from": "backend.utils.file_reader",
      "to": "os"
    },
    {
      "from": "backend.utils.file_reader",
      "to": "pathlib"
    },
    {
      "from": "backend.utils.file_reader",
      "to": "sys"
    },
    {
      "from": "backend.utils.file_reader",
      "to": "typing"
    },
    {
      "from": "backend.utils.large_file_handler",
      "to": "os"
    },
    {
      "from": "backend.utils.large_file_handler",
      "to": "pathlib"
    },
    {
      "from": "backend.utils.large_file_handler",
      "to": "typing"
    },
    {
      "from": "backend.utils.large_file_integration_example",
      "to": "fastapi"
    },
    {
      "from": "backend.utils.large_file_integration_example",
      "to": "file_reader"
    },
    {
      "from": "backend.utils.large_file_integration_example",
      "to": "pathlib"
    },
    {
      "from": "backend.utils.large_file_integration_example",
      "to": "typing"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "atexit"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "datetime"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "json"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "logging"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "os"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "pathlib"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "prometheus_client"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "sentry_sdk"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "socket"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "structlog"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "sys"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "threading"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "time"
    },
    {
      "from": "backend.utils.logging_setup",
      "to": "typing"
    },
    {
      "from": "backend.utils.readlarge",
      "to": "argparse"
    },
    {
      "from": "backend.utils.readlarge",
      "to": "file_reader"
    },
    {
      "from": "backend.utils.readlarge",
      "to": "pathlib"
    },
    {
      "from": "backend.utils.readlarge",
      "to": "re"
    },
    {
      "from": "backend.utils.readlarge",
      "to": "sys"
    },
    {
      "from": "backend.utils.test_large_file_handler",
      "to": "large_file_handler"
    },
    {
      "from": "backend.utils.test_large_file_handler",
      "to": "os"
    },
    {
      "from": "backend.utils.test_large_file_handler",
      "to": "sys"
    },
    {
      "from": "frontend.agent_health_dashboard",
      "to": "collections"
    },
    {
      "from": "frontend.agent_health_dashboard",
      "to": "datetime"
    },
    {
      "from": "frontend.agent_health_dashboard",
      "to": "json"
    },
    {
      "from": "frontend.agent_health_dashboard",
      "to": "pandas"
    },
    {
      "from": "frontend.agent_health_dashboard",
      "to": "pathlib"
    },
    {
      "from": "frontend.agent_health_dashboard",
      "to": "plotly"
    },
    {
      "from": "frontend.agent_health_dashboard",
      "to": "streamlit"
    },
    {
      "from": "frontend.app",
      "to": "asyncio"
    },
    {
      "from": "frontend.app",
      "to": "base64"
    },
    {
      "from": "frontend.app",
      "to": "datetime"
    },
    {
      "from": "frontend.app",
      "to": "enhanced_ui"
    },
    {
      "from": "frontend.app",
      "to": "enter_key_handler"
    },
    {
      "from": "frontend.app",
      "to": "hashlib"
    },
    {
      "from": "frontend.app",
      "to": "httpx"
    },
    {
      "from": "frontend.app",
      "to": "io"
    },
    {
      "from": "frontend.app",
      "to": "json"
    },
    {
      "from": "frontend.app",
      "to": "jwt"
    },
    {
      "from": "frontend.app",
      "to": "logging"
    },
    {
      "from": "frontend.app",
      "to": "numpy"
    },
    {
      "from": "frontend.app",
      "to": "os"
    },
    {
      "from": "frontend.app",
      "to": "pandas"
    },
    {
      "from": "frontend.app",
      "to": "pathlib"
    },
    {
      "from": "frontend.app",
      "to": "plotly"
    },
    {
      "from": "frontend.app",
      "to": "random"
    },
    {
      "from": "frontend.app",
      "to": "requests"
    },
    {
      "from": "frontend.app",
      "to": "streamlit"
    },
    {
      "from": "frontend.app",
      "to": "subprocess"
    },
    {
      "from": "frontend.app",
      "to": "sys"
    },
    {
      "from": "frontend.app",
      "to": "threading"
    },
    {
      "from": "frontend.app",
      "to": "time"
    },
    {
      "from": "frontend.app",
      "to": "traceback"
    },
    {
      "from": "frontend.app",
      "to": "typing"
    },
    {
      "from": "frontend.app",
      "to": "uuid"
    },
    {
      "from": "frontend.app",
      "to": "websocket"
    },
    {
      "from": "frontend.components.enhanced_ui",
      "to": "datetime"
    },
    {
      "from": "frontend.components.enhanced_ui",
      "to": "json"
    },
    {
      "from": "frontend.components.enhanced_ui",
      "to": "numpy"
    },
    {
      "from": "frontend.components.enhanced_ui",
      "to": "pandas"
    },
    {
      "from": "frontend.components.enhanced_ui",
      "to": "plotly"
    },
    {
      "from": "frontend.components.enhanced_ui",
      "to": "streamlit"
    },
    {
      "from": "frontend.components.enhanced_ui",
      "to": "time"
    },
    {
      "from": "frontend.components.enhanced_ui",
      "to": "typing"
    },
    {
      "from": "frontend.components.enter_key_handler",
      "to": "streamlit"
    },
    {
      "from": "frontend.components.navigation",
      "to": "asyncio"
    },
    {
      "from": "frontend.components.navigation",
      "to": "streamlit"
    },
    {
      "from": "frontend.components.navigation",
      "to": "time"
    },
    {
      "from": "frontend.components.navigation",
      "to": "typing"
    },
    {
      "from": "scripts.activate_all_agents",
      "to": "asyncio"
    },
    {
      "from": "scripts.activate_all_agents",
      "to": "datetime"
    },
    {
      "from": "scripts.activate_all_agents",
      "to": "json"
    },
    {
      "from": "scripts.activate_all_agents",
      "to": "logging"
    },
    {
      "from": "scripts.activate_all_agents",
      "to": "pathlib"
    },
    {
      "from": "scripts.activate_all_agents",
      "to": "requests"
    },
    {
      "from": "scripts.activate_all_agents",
      "to": "time"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "argparse"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "asyncio"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "concurrent"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "dataclasses"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "datetime"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "enum"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "hashlib"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "json"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "logging"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "os"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "psutil"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "shutil"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "sqlite3"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "subprocess"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "sys"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "tarfile"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "tempfile"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "threading"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "time"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "traceback"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "typing"
    },
    {
      "from": "scripts.advanced-rollback-system",
      "to": "yaml"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "agents"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "argparse"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "asyncio"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "collections"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "dataclasses"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "datetime"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "httpx"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "json"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "logging"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "os"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "statistics"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "sys"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "time"
    },
    {
      "from": "scripts.ai-performance-validator",
      "to": "typing"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "asyncio"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "chromadb"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "datetime"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "fastapi"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "gc"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "json"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "langchain"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "logging"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "os"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "pathlib"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "psutil"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "pydantic"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "qdrant_client"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "redis"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "sys"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "torch"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "transformers"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "typing"
    },
    {
      "from": "scripts.ai-runtime-init",
      "to": "uvicorn"
    },
    {
      "from": "scripts.analyze-agent-readiness",
      "to": "json"
    },
    {
      "from": "scripts.analyze-agent-readiness",
      "to": "os"
    },
    {
      "from": "scripts.analyze-agent-readiness",
      "to": "pathlib"
    },
    {
      "from": "scripts.analyze-agent-readiness",
      "to": "sys"
    },
    {
      "from": "scripts.analyze-docker-requirements",
      "to": "collections"
    },
    {
      "from": "scripts.analyze-docker-requirements",
      "to": "json"
    },
    {
      "from": "scripts.analyze-docker-requirements",
      "to": "os"
    },
    {
      "from": "scripts.analyze-docker-requirements",
      "to": "pathlib"
    },
    {
      "from": "scripts.analyze-docker-requirements",
      "to": "re"
    },
    {
      "from": "scripts.analyze-docker-requirements",
      "to": "typing"
    },
    {
      "from": "scripts.analyze-docker-requirements",
      "to": "yaml"
    },
    {
      "from": "scripts.audit_docs",
      "to": "__future__"
    },
    {
      "from": "scripts.audit_docs",
      "to": "collections"
    },
    {
      "from": "scripts.audit_docs",
      "to": "pathlib"
    },
    {
      "from": "scripts.audit_docs",
      "to": "sys"
    },
    {
      "from": "scripts.audit_docs",
      "to": "typing"
    },
    {
      "from": "scripts.automation.analyze_docker_builds",
      "to": "os"
    },
    {
      "from": "scripts.automation.analyze_docker_builds",
      "to": "sys"
    },
    {
      "from": "scripts.automation.analyze_docker_builds",
      "to": "yaml"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "docker"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "hashlib"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "logging"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "pickle"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "requests"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "shutil"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "tarfile"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "time"
    },
    {
      "from": "scripts.backup-automation.agents.agent-state-backup-system",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "email"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "logging"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "requests"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "smtplib"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "subprocess"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "time"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "twilio"
    },
    {
      "from": "scripts.backup-automation.alerts.backup-monitoring-alerting-system",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "hashlib"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "logging"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "shutil"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "tarfile"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.config.config-backup-system",
      "to": "yaml"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "gzip"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "hashlib"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "logging"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "psycopg2"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "shutil"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "sqlite3"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "subprocess"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "tarfile"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "time"
    },
    {
      "from": "scripts.backup-automation.core.database-backup-system",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "hashlib"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "logging"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "requests"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "shutil"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "subprocess"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "tarfile"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "time"
    },
    {
      "from": "scripts.backup-automation.models.ollama-model-backup-system",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "hashlib"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "logging"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "requests"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "shutil"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "sqlite3"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "subprocess"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "tarfile"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "time"
    },
    {
      "from": "scripts.backup-automation.monitoring.monitoring-data-retention-system",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "boto3"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "botocore"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "hashlib"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "logging"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "paramiko"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "requests"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "shutil"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "subprocess"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "tempfile"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "time"
    },
    {
      "from": "scripts.backup-automation.offsite.offsite-backup-replication-system",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "docker"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "gzip"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "logging"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "psycopg2"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "random"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "shutil"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "sqlite3"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "subprocess"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "tarfile"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "tempfile"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "time"
    },
    {
      "from": "scripts.backup-automation.restore.restore-testing-system",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "argparse"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "concurrent"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "logging"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "schedule"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "signal"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "subprocess"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "threading"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "time"
    },
    {
      "from": "scripts.backup-automation.sutazai-backup-orchestrator",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.utils.backup-status-checker",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.utils.backup-status-checker",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.utils.backup-status-checker",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.utils.backup-status-checker",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.utils.backup-status-checker",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.utils.backup-status-checker",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "datetime"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "gzip"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "hashlib"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "json"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "logging"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "os"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "psycopg2"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "random"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "requests"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "shutil"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "sqlite3"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "subprocess"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "sys"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "tarfile"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "tempfile"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "time"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "typing"
    },
    {
      "from": "scripts.backup-automation.verification.backup-verification-system",
      "to": "yaml"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "argparse"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "asyncio"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "collections"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "dataclasses"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "json"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "logging"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "numpy"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "os"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "pathlib"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "psutil"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "signal"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "sklearn"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "statistics"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "subprocess"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "sys"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "threading"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "time"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "typing"
    },
    {
      "from": "scripts.bottleneck-eliminator",
      "to": "weakref"
    },
    {
      "from": "scripts.check_banned_keywords",
      "to": "__future__"
    },
    {
      "from": "scripts.check_banned_keywords",
      "to": "pathlib"
    },
    {
      "from": "scripts.check_banned_keywords",
      "to": "re"
    },
    {
      "from": "scripts.check_banned_keywords",
      "to": "sys"
    },
    {
      "from": "scripts.check_banned_keywords",
      "to": "typing"
    },
    {
      "from": "scripts.check_naming",
      "to": "os"
    },
    {
      "from": "scripts.check_naming",
      "to": "pathlib"
    },
    {
      "from": "scripts.check_naming",
      "to": "re"
    },
    {
      "from": "scripts.check_naming",
      "to": "sys"
    },
    {
      "from": "scripts.check_requirements",
      "to": "collections"
    },
    {
      "from": "scripts.check_requirements",
      "to": "os"
    },
    {
      "from": "scripts.check_requirements",
      "to": "pathlib"
    },
    {
      "from": "scripts.check_requirements",
      "to": "re"
    },
    {
      "from": "scripts.check_requirements",
      "to": "sys"
    },
    {
      "from": "scripts.check_secrets",
      "to": "os"
    },
    {
      "from": "scripts.check_secrets",
      "to": "pathlib"
    },
    {
      "from": "scripts.check_secrets",
      "to": "re"
    },
    {
      "from": "scripts.check_secrets",
      "to": "sys"
    },
    {
      "from": "scripts.cleanup-old-requirements",
      "to": "logging"
    },
    {
      "from": "scripts.cleanup-old-requirements",
      "to": "os"
    },
    {
      "from": "scripts.cleanup-old-requirements",
      "to": "pathlib"
    },
    {
      "from": "scripts.cleanup-old-requirements",
      "to": "shutil"
    },
    {
      "from": "scripts.cleanup-old-requirements",
      "to": "typing"
    },
    {
      "from": "scripts.cleanup.analyze_duplicates",
      "to": "collections"
    },
    {
      "from": "scripts.cleanup.analyze_duplicates",
      "to": "json"
    },
    {
      "from": "scripts.cleanup.analyze_duplicates",
      "to": "os"
    },
    {
      "from": "scripts.cleanup.analyze_duplicates",
      "to": "pathlib"
    },
    {
      "from": "scripts.cleanup.discovery",
      "to": "__future__"
    },
    {
      "from": "scripts.cleanup.discovery",
      "to": "ast"
    },
    {
      "from": "scripts.cleanup.discovery",
      "to": "collections"
    },
    {
      "from": "scripts.cleanup.discovery",
      "to": "dataclasses"
    },
    {
      "from": "scripts.cleanup.discovery",
      "to": "json"
    },
    {
      "from": "scripts.cleanup.discovery",
      "to": "os"
    },
    {
      "from": "scripts.cleanup.discovery",
      "to": "pathlib"
    },
    {
      "from": "scripts.cleanup.discovery",
      "to": "re"
    },
    {
      "from": "scripts.cleanup.discovery",
      "to": "sys"
    },
    {
      "from": "scripts.cleanup.discovery",
      "to": "typing"
    },
    {
      "from": "scripts.cleanup.post_status",
      "to": "__future__"
    },
    {
      "from": "scripts.cleanup.post_status",
      "to": "datetime"
    },
    {
      "from": "scripts.cleanup.post_status",
      "to": "json"
    },
    {
      "from": "scripts.cleanup.post_status",
      "to": "os"
    },
    {
      "from": "scripts.cleanup.post_status",
      "to": "pathlib"
    },
    {
      "from": "scripts.cleanup.post_status",
      "to": "sys"
    },
    {
      "from": "scripts.complete-cleanup-and-prepare",
      "to": "datetime"
    },
    {
      "from": "scripts.complete-cleanup-and-prepare",
      "to": "json"
    },
    {
      "from": "scripts.complete-cleanup-and-prepare",
      "to": "os"
    },
    {
      "from": "scripts.complete-cleanup-and-prepare",
      "to": "pathlib"
    },
    {
      "from": "scripts.complete-cleanup-and-prepare",
      "to": "shutil"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "argparse"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "dataclasses"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "datetime"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "enum"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "hashlib"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "json"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "logging"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "os"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "pathlib"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "re"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "shutil"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "subprocess"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "sys"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "threading"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "time"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "typing"
    },
    {
      "from": "scripts.compliance-monitor-core",
      "to": "watchdog"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "aiohttp"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "argparse"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "asyncio"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "concurrent"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "dataclasses"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "enum"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "json"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "logging"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "os"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "socket"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "sqlite3"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "statistics"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "sys"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "threading"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "time"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "traceback"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "typing"
    },
    {
      "from": "scripts.comprehensive-agent-health-monitor",
      "to": "yaml"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "argparse"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "glob"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "json"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "logging"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "os"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "sys"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "threading"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "time"
    },
    {
      "from": "scripts.container-health-monitor",
      "to": "typing"
    },
    {
      "from": "scripts.coord_bus",
      "to": "argparse"
    },
    {
      "from": "scripts.coord_bus",
      "to": "csv"
    },
    {
      "from": "scripts.coord_bus",
      "to": "datetime"
    },
    {
      "from": "scripts.coord_bus",
      "to": "json"
    },
    {
      "from": "scripts.coord_bus",
      "to": "os"
    },
    {
      "from": "scripts.coord_bus",
      "to": "sys"
    },
    {
      "from": "scripts.coord_bus",
      "to": "uuid"
    },
    {
      "from": "scripts.coordination_tracker",
      "to": "datetime"
    },
    {
      "from": "scripts.coordination_tracker",
      "to": "json"
    },
    {
      "from": "scripts.coordination_tracker",
      "to": "os"
    },
    {
      "from": "scripts.coordination_tracker",
      "to": "pathlib"
    },
    {
      "from": "scripts.coordination_tracker",
      "to": "subprocess"
    },
    {
      "from": "scripts.coordination_tracker",
      "to": "sys"
    },
    {
      "from": "scripts.coordination_tracker",
      "to": "typing"
    },
    {
      "from": "scripts.create-base-image-strategy",
      "to": "argparse"
    },
    {
      "from": "scripts.create-base-image-strategy",
      "to": "datetime"
    },
    {
      "from": "scripts.create-base-image-strategy",
      "to": "json"
    },
    {
      "from": "scripts.create-base-image-strategy",
      "to": "logging"
    },
    {
      "from": "scripts.create-base-image-strategy",
      "to": "os"
    },
    {
      "from": "scripts.create-base-image-strategy",
      "to": "pathlib"
    },
    {
      "from": "scripts.create-base-image-strategy",
      "to": "shutil"
    },
    {
      "from": "scripts.create-base-image-strategy",
      "to": "subprocess"
    },
    {
      "from": "scripts.create-base-image-strategy",
      "to": "sys"
    },
    {
      "from": "scripts.create-base-image-strategy",
      "to": "typing"
    },
    {
      "from": "scripts.create-container-requirements-map",
      "to": "collections"
    },
    {
      "from": "scripts.create-container-requirements-map",
      "to": "json"
    },
    {
      "from": "scripts.create-container-requirements-map",
      "to": "os"
    },
    {
      "from": "scripts.create-container-requirements-map",
      "to": "pathlib"
    },
    {
      "from": "scripts.create-container-requirements-map",
      "to": "re"
    },
    {
      "from": "scripts.create-container-requirements-map",
      "to": "yaml"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "argparse"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "datetime"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "docker"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "json"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "logging"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "os"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "pathlib"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "psutil"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "requests"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "sqlite3"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "statistics"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "subprocess"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "time"
    },
    {
      "from": "scripts.create-performance-baseline",
      "to": "typing"
    },
    {
      "from": "scripts.database_connection_pool_setup",
      "to": "contextlib"
    },
    {
      "from": "scripts.database_connection_pool_setup",
      "to": "logging"
    },
    {
      "from": "scripts.database_connection_pool_setup",
      "to": "psycopg2"
    },
    {
      "from": "scripts.database_connection_pool_setup",
      "to": "typing"
    },
    {
      "from": "scripts.database_health_check",
      "to": "datetime"
    },
    {
      "from": "scripts.database_health_check",
      "to": "json"
    },
    {
      "from": "scripts.database_health_check",
      "to": "psycopg2"
    },
    {
      "from": "scripts.database_health_check",
      "to": "sys"
    },
    {
      "from": "scripts.database_health_check",
      "to": "typing"
    },
    {
      "from": "scripts.database_operations",
      "to": "datetime"
    },
    {
      "from": "scripts.database_operations",
      "to": "json"
    },
    {
      "from": "scripts.database_operations",
      "to": "logging"
    },
    {
      "from": "scripts.database_operations",
      "to": "os"
    },
    {
      "from": "scripts.database_operations",
      "to": "pathlib"
    },
    {
      "from": "scripts.database_operations",
      "to": "psycopg2"
    },
    {
      "from": "scripts.database_operations",
      "to": "subprocess"
    },
    {
      "from": "scripts.database_operations",
      "to": "sys"
    },
    {
      "from": "scripts.database_operations",
      "to": "typing"
    },
    {
      "from": "scripts.demo-hygiene-tests",
      "to": "pathlib"
    },
    {
      "from": "scripts.demo-hygiene-tests",
      "to": "subprocess"
    },
    {
      "from": "scripts.demo-hygiene-tests",
      "to": "sys"
    },
    {
      "from": "scripts.demo-hygiene-tests",
      "to": "time"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "argparse"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "dataclasses"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "datetime"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "json"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "logging"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "os"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "pathlib"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "requests"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "socket"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "subprocess"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "sys"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "time"
    },
    {
      "from": "scripts.deploy.manage-environments",
      "to": "typing"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "argparse"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "asyncio"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "dataclasses"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "docker"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "json"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "logging"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "os"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "prometheus_client"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "redis"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "requests"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "sys"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "time"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "typing"
    },
    {
      "from": "scripts.deployment-monitor",
      "to": "yaml"
    },
    {
      "from": "scripts.devops.check_services_health",
      "to": "__future__"
    },
    {
      "from": "scripts.devops.check_services_health",
      "to": "argparse"
    },
    {
      "from": "scripts.devops.check_services_health",
      "to": "socket"
    },
    {
      "from": "scripts.devops.check_services_health",
      "to": "sys"
    },
    {
      "from": "scripts.devops.check_services_health",
      "to": "time"
    },
    {
      "from": "scripts.devops.check_services_health",
      "to": "typing"
    },
    {
      "from": "scripts.devops.check_services_health",
      "to": "urllib"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "argparse"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "base64"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "datetime"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "json"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "logging"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "scripts"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "socket"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "sys"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "time"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "typing"
    },
    {
      "from": "scripts.devops.health_check_dataservices",
      "to": "urllib"
    },
    {
      "from": "scripts.devops.health_check_gateway",
      "to": "argparse"
    },
    {
      "from": "scripts.devops.health_check_gateway",
      "to": "datetime"
    },
    {
      "from": "scripts.devops.health_check_gateway",
      "to": "json"
    },
    {
      "from": "scripts.devops.health_check_gateway",
      "to": "logging"
    },
    {
      "from": "scripts.devops.health_check_gateway",
      "to": "scripts"
    },
    {
      "from": "scripts.devops.health_check_gateway",
      "to": "socket"
    },
    {
      "from": "scripts.devops.health_check_gateway",
      "to": "sys"
    },
    {
      "from": "scripts.devops.health_check_gateway",
      "to": "time"
    },
    {
      "from": "scripts.devops.health_check_gateway",
      "to": "typing"
    },
    {
      "from": "scripts.devops.health_check_gateway",
      "to": "urllib"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "argparse"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "base64"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "datetime"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "json"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "logging"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "scripts"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "socket"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "sys"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "time"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "typing"
    },
    {
      "from": "scripts.devops.health_check_monitoring",
      "to": "urllib"
    },
    {
      "from": "scripts.devops.health_check_ollama",
      "to": "argparse"
    },
    {
      "from": "scripts.devops.health_check_ollama",
      "to": "datetime"
    },
    {
      "from": "scripts.devops.health_check_ollama",
      "to": "json"
    },
    {
      "from": "scripts.devops.health_check_ollama",
      "to": "logging"
    },
    {
      "from": "scripts.devops.health_check_ollama",
      "to": "scripts"
    },
    {
      "from": "scripts.devops.health_check_ollama",
      "to": "socket"
    },
    {
      "from": "scripts.devops.health_check_ollama",
      "to": "sys"
    },
    {
      "from": "scripts.devops.health_check_ollama",
      "to": "time"
    },
    {
      "from": "scripts.devops.health_check_ollama",
      "to": "typing"
    },
    {
      "from": "scripts.devops.health_check_ollama",
      "to": "urllib"
    },
    {
      "from": "scripts.devops.health_check_vectordb",
      "to": "argparse"
    },
    {
      "from": "scripts.devops.health_check_vectordb",
      "to": "datetime"
    },
    {
      "from": "scripts.devops.health_check_vectordb",
      "to": "json"
    },
    {
      "from": "scripts.devops.health_check_vectordb",
      "to": "logging"
    },
    {
      "from": "scripts.devops.health_check_vectordb",
      "to": "scripts"
    },
    {
      "from": "scripts.devops.health_check_vectordb",
      "to": "socket"
    },
    {
      "from": "scripts.devops.health_check_vectordb",
      "to": "sys"
    },
    {
      "from": "scripts.devops.health_check_vectordb",
      "to": "time"
    },
    {
      "from": "scripts.devops.health_check_vectordb",
      "to": "typing"
    },
    {
      "from": "scripts.devops.health_check_vectordb",
      "to": "urllib"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "argparse"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "asyncio"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "concurrent"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "datetime"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "json"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "logging"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "os"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "pathlib"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "scripts"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "subprocess"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "sys"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "time"
    },
    {
      "from": "scripts.devops.infrastructure_health_check",
      "to": "typing"
    },
    {
      "from": "scripts.direct_agent_activation",
      "to": "asyncio"
    },
    {
      "from": "scripts.direct_agent_activation",
      "to": "datetime"
    },
    {
      "from": "scripts.direct_agent_activation",
      "to": "json"
    },
    {
      "from": "scripts.direct_agent_activation",
      "to": "logging"
    },
    {
      "from": "scripts.direct_agent_activation",
      "to": "os"
    },
    {
      "from": "scripts.direct_agent_activation",
      "to": "pathlib"
    },
    {
      "from": "scripts.direct_agent_activation",
      "to": "requests"
    },
    {
      "from": "scripts.direct_agent_activation",
      "to": "subprocess"
    },
    {
      "from": "scripts.direct_agent_activation",
      "to": "sys"
    },
    {
      "from": "scripts.direct_agent_activation",
      "to": "time"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "argparse"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "consul"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "dataclasses"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "datetime"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "docker"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "enum"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "logging"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "os"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "prometheus_api_client"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "prometheus_client"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "signal"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "socket"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "sys"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "threading"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "time"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "typing"
    },
    {
      "from": "scripts.distributed-autoscaler",
      "to": "yaml"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "aiohttp"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "aioredis"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "asyncio"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "collections"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "consul"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "dataclasses"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "enum"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "json"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "logging"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "os"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "prometheus_client"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "pynvml"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "time"
    },
    {
      "from": "scripts.distributed-health-monitor",
      "to": "typing"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "argparse"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "celery"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "consul"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "dataclasses"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "datetime"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "docker"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "enum"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "flower"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "json"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "kombu"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "logging"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "os"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "prometheus_client"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "redis"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "requests"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "sys"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "time"
    },
    {
      "from": "scripts.distributed-task-queue",
      "to": "typing"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "argparse"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "asyncio"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "collections"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "dataclasses"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "enum"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "hashlib"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "json"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "logging"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "math"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "numpy"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "os"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "pathlib"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "psutil"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "random"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "sklearn"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "statistics"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "sys"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "threading"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "time"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "typing"
    },
    {
      "from": "scripts.dynamic-load-balancer",
      "to": "weakref"
    },
    {
      "from": "scripts.emergency-compliance-fix",
      "to": "datetime"
    },
    {
      "from": "scripts.emergency-compliance-fix",
      "to": "json"
    },
    {
      "from": "scripts.emergency-compliance-fix",
      "to": "os"
    },
    {
      "from": "scripts.emergency-compliance-fix",
      "to": "pathlib"
    },
    {
      "from": "scripts.emergency-compliance-fix",
      "to": "re"
    },
    {
      "from": "scripts.emergency-compliance-fix",
      "to": "shutil"
    },
    {
      "from": "scripts.emergency-compliance-fix",
      "to": "typing"
    },
    {
      "from": "scripts.enforce_claude_md_rules",
      "to": "argparse"
    },
    {
      "from": "scripts.enforce_claude_md_rules",
      "to": "json"
    },
    {
      "from": "scripts.enforce_claude_md_rules",
      "to": "os"
    },
    {
      "from": "scripts.enforce_claude_md_rules",
      "to": "pathlib"
    },
    {
      "from": "scripts.enforce_claude_md_rules",
      "to": "typing"
    },
    {
      "from": "scripts.enforce_claude_md_rules",
      "to": "yaml"
    },
    {
      "from": "scripts.enforce_claude_md_simple",
      "to": "os"
    },
    {
      "from": "scripts.enforce_claude_md_simple",
      "to": "pathlib"
    },
    {
      "from": "scripts.enforce_claude_md_simple",
      "to": "shutil"
    },
    {
      "from": "scripts.enforce_claude_md_simple",
      "to": "typing"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "argparse"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "asyncio"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "datetime"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "fnmatch"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "json"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "logging"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "os"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "pathlib"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "re"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "shutil"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "sys"
    },
    {
      "from": "scripts.enforcement.rule13_garbage_collector",
      "to": "typing"
    },
    {
      "from": "scripts.export_openapi",
      "to": "backend"
    },
    {
      "from": "scripts.export_openapi",
      "to": "json"
    },
    {
      "from": "scripts.export_openapi",
      "to": "os"
    },
    {
      "from": "scripts.export_openapi",
      "to": "pathlib"
    },
    {
      "from": "scripts.export_openapi",
      "to": "sys"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "argparse"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "datetime"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "docker"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "json"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "psutil"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "requests"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "socket"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "subprocess"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "sys"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "typing"
    },
    {
      "from": "scripts.external-service-discovery",
      "to": "yaml"
    },
    {
      "from": "scripts.extract_port_mappings",
      "to": "glob"
    },
    {
      "from": "scripts.extract_port_mappings",
      "to": "json"
    },
    {
      "from": "scripts.extract_port_mappings",
      "to": "pathlib"
    },
    {
      "from": "scripts.extract_port_mappings",
      "to": "yaml"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "aiohttp"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "argparse"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "asyncio"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "concurrent"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "dataclasses"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "datetime"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "hashlib"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "json"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "logging"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "os"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "pathlib"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "pkg_resources"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "psutil"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "statistics"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "subprocess"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "sys"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "time"
    },
    {
      "from": "scripts.final-system-validation",
      "to": "typing"
    },
    {
      "from": "scripts.fix-agent-app-files",
      "to": "os"
    },
    {
      "from": "scripts.fix-agent-app-files",
      "to": "pathlib"
    },
    {
      "from": "scripts.fix-agent-app-files",
      "to": "re"
    },
    {
      "from": "scripts.fix-agent-deployment-issues",
      "to": "os"
    },
    {
      "from": "scripts.fix-agent-deployment-issues",
      "to": "pathlib"
    },
    {
      "from": "scripts.fix-agent-deployment-issues",
      "to": "shutil"
    },
    {
      "from": "scripts.fix-agent-dockerfiles",
      "to": "os"
    },
    {
      "from": "scripts.fix-agent-dockerfiles",
      "to": "pathlib"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "argparse"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "datetime"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "docker"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "json"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "logging"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "os"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "pathlib"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "requests"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "subprocess"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "sys"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "time"
    },
    {
      "from": "scripts.fix-agent-health-checks",
      "to": "typing"
    },
    {
      "from": "scripts.fix-agent-startup",
      "to": "os"
    },
    {
      "from": "scripts.fix-agent-startup",
      "to": "pathlib"
    },
    {
      "from": "scripts.fix-critical-agents",
      "to": "os"
    },
    {
      "from": "scripts.fix-critical-agents",
      "to": "pathlib"
    },
    {
      "from": "scripts.fix-critical-agents",
      "to": "shutil"
    },
    {
      "from": "scripts.fix-hygiene-memory-leak",
      "to": "asyncio"
    },
    {
      "from": "scripts.fix-hygiene-memory-leak",
      "to": "datetime"
    },
    {
      "from": "scripts.fix-hygiene-memory-leak",
      "to": "logging"
    },
    {
      "from": "scripts.fix-hygiene-memory-leak",
      "to": "pathlib"
    },
    {
      "from": "scripts.fix-hygiene-memory-leak",
      "to": "psutil"
    },
    {
      "from": "scripts.fix-hygiene-memory-leak",
      "to": "signal"
    },
    {
      "from": "scripts.fix-hygiene-memory-leak",
      "to": "subprocess"
    },
    {
      "from": "scripts.fix-hygiene-memory-leak",
      "to": "sys"
    },
    {
      "from": "scripts.fix-memory-limits",
      "to": "json"
    },
    {
      "from": "scripts.fix-memory-limits",
      "to": "os"
    },
    {
      "from": "scripts.fix-memory-limits",
      "to": "pathlib"
    },
    {
      "from": "scripts.fix-memory-limits",
      "to": "subprocess"
    },
    {
      "from": "scripts.fix-memory-limits",
      "to": "typing"
    },
    {
      "from": "scripts.fix-memory-limits",
      "to": "yaml"
    },
    {
      "from": "scripts.fix_container_security",
      "to": "os"
    },
    {
      "from": "scripts.fix_container_security",
      "to": "pathlib"
    },
    {
      "from": "scripts.fix_container_security",
      "to": "re"
    },
    {
      "from": "scripts.garbage-collection-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.garbage-collection-monitor",
      "to": "json"
    },
    {
      "from": "scripts.garbage-collection-monitor",
      "to": "logging"
    },
    {
      "from": "scripts.garbage-collection-monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.garbage-collection-monitor",
      "to": "sqlite3"
    },
    {
      "from": "scripts.garbage-collection-monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "argparse"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "dataclasses"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "datetime"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "enum"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "gzip"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "hashlib"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "json"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "logging"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "os"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "psutil"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "schedule"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "shutil"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "signal"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "sqlite3"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "sys"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "tarfile"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "threading"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "time"
    },
    {
      "from": "scripts.garbage-collection-system",
      "to": "typing"
    },
    {
      "from": "scripts.generate_docs_inventory",
      "to": "datetime"
    },
    {
      "from": "scripts.generate_docs_inventory",
      "to": "hashlib"
    },
    {
      "from": "scripts.generate_docs_inventory",
      "to": "json"
    },
    {
      "from": "scripts.generate_docs_inventory",
      "to": "os"
    },
    {
      "from": "scripts.generate_secure_secrets",
      "to": "hashlib"
    },
    {
      "from": "scripts.generate_secure_secrets",
      "to": "os"
    },
    {
      "from": "scripts.generate_secure_secrets",
      "to": "pathlib"
    },
    {
      "from": "scripts.generate_secure_secrets",
      "to": "secrets"
    },
    {
      "from": "scripts.generate_secure_secrets",
      "to": "string"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "argparse"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "asyncio"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "collections"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "concurrent"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "dataclasses"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "gc"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "json"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "logging"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "mmap"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "multiprocessing"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "os"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "pathlib"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "pickle"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "psutil"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "resource"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "signal"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "subprocess"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "sys"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "threading"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "time"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "typing"
    },
    {
      "from": "scripts.hardware-optimization-master",
      "to": "weakref"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "aiohttp"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "argparse"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "asyncio"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "dataclasses"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "datetime"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "enum"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "json"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "logging"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "os"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "pathlib"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "psutil"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "subprocess"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "sys"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "time"
    },
    {
      "from": "scripts.hygiene-enforcement-coordinator",
      "to": "typing"
    },
    {
      "from": "scripts.hygiene-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.hygiene-monitor",
      "to": "json"
    },
    {
      "from": "scripts.hygiene-monitor",
      "to": "logging"
    },
    {
      "from": "scripts.hygiene-monitor",
      "to": "os"
    },
    {
      "from": "scripts.hygiene-monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.hygiene-monitor",
      "to": "re"
    },
    {
      "from": "scripts.hygiene-monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.hygiene-monitor",
      "to": "sys"
    },
    {
      "from": "scripts.hygiene-monitor",
      "to": "time"
    },
    {
      "from": "scripts.hygiene-monitor",
      "to": "watchdog"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "aiohttp"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "argparse"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "asyncio"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "concurrent"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "dataclasses"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "datetime"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "json"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "logging"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "os"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "pathlib"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "psutil"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "signal"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "socket"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "subprocess"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "sys"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "threading"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "time"
    },
    {
      "from": "scripts.hygiene-system-orchestrator",
      "to": "typing"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "concurrent"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "docker"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "json"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "logging"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "os"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "signal"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "sys"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "time"
    },
    {
      "from": "scripts.infrastructure-monitor",
      "to": "typing"
    },
    {
      "from": "scripts.infrastructure.resource-enforcer",
      "to": "argparse"
    },
    {
      "from": "scripts.infrastructure.resource-enforcer",
      "to": "datetime"
    },
    {
      "from": "scripts.infrastructure.resource-enforcer",
      "to": "docker"
    },
    {
      "from": "scripts.infrastructure.resource-enforcer",
      "to": "json"
    },
    {
      "from": "scripts.infrastructure.resource-enforcer",
      "to": "logging"
    },
    {
      "from": "scripts.infrastructure.resource-enforcer",
      "to": "subprocess"
    },
    {
      "from": "scripts.infrastructure.resource-enforcer",
      "to": "time"
    },
    {
      "from": "scripts.infrastructure.resource-enforcer",
      "to": "typing"
    },
    {
      "from": "scripts.infrastructure.resource-enforcer",
      "to": "yaml"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "argparse"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "collections"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "dataclasses"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "enum"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "gzip"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "hashlib"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "json"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "logging"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "math"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "multiprocessing"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "numpy"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "os"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "pickle"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "psutil"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "random"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "sklearn"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "statistics"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "sys"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "threading"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "time"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "typing"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "weakref"
    },
    {
      "from": "scripts.intelligent-cache-system",
      "to": "zlib"
    },
    {
      "from": "scripts.launch_local_agents",
      "to": "agents"
    },
    {
      "from": "scripts.launch_local_agents",
      "to": "argparse"
    },
    {
      "from": "scripts.launch_local_agents",
      "to": "asyncio"
    },
    {
      "from": "scripts.launch_local_agents",
      "to": "dataclasses"
    },
    {
      "from": "scripts.launch_local_agents",
      "to": "multiprocessing"
    },
    {
      "from": "scripts.launch_local_agents",
      "to": "os"
    },
    {
      "from": "scripts.launch_local_agents",
      "to": "signal"
    },
    {
      "from": "scripts.launch_local_agents",
      "to": "sys"
    },
    {
      "from": "scripts.launch_local_agents",
      "to": "typing"
    },
    {
      "from": "scripts.lib.file_utils",
      "to": "hashlib"
    },
    {
      "from": "scripts.lib.file_utils",
      "to": "pathlib"
    },
    {
      "from": "scripts.lib.file_utils",
      "to": "typing"
    },
    {
      "from": "scripts.lib.logging_utils",
      "to": "logging"
    },
    {
      "from": "scripts.lib.logging_utils",
      "to": "typing"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "argparse"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "collections"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "dataclasses"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "enum"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "gzip"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "hashlib"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "json"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "logging"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "mmap"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "multiprocessing"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "os"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "pathlib"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "pickle"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "psutil"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "struct"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "sys"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "threading"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "time"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "typing"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "uuid"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "weakref"
    },
    {
      "from": "scripts.memory-pool-manager",
      "to": "zlib"
    },
    {
      "from": "scripts.mesh.agent_stream_consumer",
      "to": "agents"
    },
    {
      "from": "scripts.mesh.agent_stream_consumer",
      "to": "argparse"
    },
    {
      "from": "scripts.mesh.agent_stream_consumer",
      "to": "asyncio"
    },
    {
      "from": "scripts.mesh.agent_stream_consumer",
      "to": "backend"
    },
    {
      "from": "scripts.mesh.agent_stream_consumer",
      "to": "json"
    },
    {
      "from": "scripts.mesh.agent_stream_consumer",
      "to": "os"
    },
    {
      "from": "scripts.mesh.agent_stream_consumer",
      "to": "signal"
    },
    {
      "from": "scripts.mesh.agent_stream_consumer",
      "to": "sys"
    },
    {
      "from": "scripts.mesh.agent_stream_consumer",
      "to": "time"
    },
    {
      "from": "scripts.mesh.agent_stream_consumer",
      "to": "typing"
    },
    {
      "from": "scripts.mesh.enqueue_task",
      "to": "argparse"
    },
    {
      "from": "scripts.mesh.enqueue_task",
      "to": "backend"
    },
    {
      "from": "scripts.mesh.enqueue_task",
      "to": "json"
    },
    {
      "from": "scripts.mesh.enqueue_task",
      "to": "os"
    },
    {
      "from": "scripts.mesh.enqueue_task",
      "to": "sys"
    },
    {
      "from": "scripts.mesh.tail_results",
      "to": "argparse"
    },
    {
      "from": "scripts.mesh.tail_results",
      "to": "backend"
    },
    {
      "from": "scripts.mesh.tail_results",
      "to": "json"
    },
    {
      "from": "scripts.mesh.tail_results",
      "to": "sys"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "agents"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "argparse"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "asyncio"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "datetime"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "json"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "os"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "pathlib"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "re"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "shutil"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "sys"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "typing"
    },
    {
      "from": "scripts.migrate-agents-to-ollama",
      "to": "yaml"
    },
    {
      "from": "scripts.migrate_agent_ports",
      "to": "argparse"
    },
    {
      "from": "scripts.migrate_agent_ports",
      "to": "datetime"
    },
    {
      "from": "scripts.migrate_agent_ports",
      "to": "glob"
    },
    {
      "from": "scripts.migrate_agent_ports",
      "to": "os"
    },
    {
      "from": "scripts.migrate_agent_ports",
      "to": "pathlib"
    },
    {
      "from": "scripts.migrate_agent_ports",
      "to": "shutil"
    },
    {
      "from": "scripts.migrate_agent_ports",
      "to": "sys"
    },
    {
      "from": "scripts.migrate_agent_ports",
      "to": "typing"
    },
    {
      "from": "scripts.migrate_agent_ports",
      "to": "yaml"
    },
    {
      "from": "scripts.models.ollama.update_agent_configs_to_gpt-oss",
      "to": "glob"
    },
    {
      "from": "scripts.models.ollama.update_agent_configs_to_gpt-oss",
      "to": "json"
    },
    {
      "from": "scripts.models.ollama.update_agent_configs_to_gpt-oss",
      "to": "os"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "aiohttp"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "argparse"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "asyncio"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "datetime"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "json"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "logging"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "sys"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "tabulate"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "typing"
    },
    {
      "from": "scripts.monitor-ai-services",
      "to": "yaml"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "argparse"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "asyncio"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "dataclasses"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "docker"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "requests"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "threading"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.agent-activation-monitor",
      "to": "typing"
    },
    {
      "from": "scripts.monitoring.check-python-headers",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.check-python-headers",
      "to": "re"
    },
    {
      "from": "scripts.monitoring.check-python-headers",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "http"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "re"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "socket"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "socketserver"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "tempfile"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "threading"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "typing"
    },
    {
      "from": "scripts.monitoring.comprehensive_monitor_validation",
      "to": "unittest"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "argparse"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "collections"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "dataclasses"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "logging"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.continuous-compliance-monitor",
      "to": "typing"
    },
    {
      "from": "scripts.monitoring.debug_hardware_optimizer",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.debug_hardware_optimizer",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.debug_hardware_optimizer",
      "to": "requests"
    },
    {
      "from": "scripts.monitoring.debug_hardware_optimizer",
      "to": "socket"
    },
    {
      "from": "scripts.monitoring.debug_hardware_optimizer",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.debug_hardware_optimizer",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.debug_hardware_optimizer",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.demo_enhanced_monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.demo_enhanced_monitor",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.demo_enhanced_monitor",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.demo_enhanced_monitor",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "argparse"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "collections"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "concurrent"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "contextlib"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "dataclasses"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "hashlib"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "logging"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "re"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "shutil"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "signal"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "sqlite3"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "tempfile"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "threading"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "traceback"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "typing"
    },
    {
      "from": "scripts.monitoring.enhanced-compliance-monitor",
      "to": "yaml"
    },
    {
      "from": "scripts.monitoring.final_validation",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.final_validation",
      "to": "requests"
    },
    {
      "from": "scripts.monitoring.final_validation",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.final_validation",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.final_validation",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.identify_working_method",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.identify_working_method",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.identify_working_method",
      "to": "pynvml"
    },
    {
      "from": "scripts.monitoring.identify_working_method",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.identify_working_method",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.identify_working_method",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "argparse"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "concurrent"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "datetime"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "logging"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "psutil"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "shutil"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "sqlite3"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "tempfile"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "threading"
    },
    {
      "from": "scripts.monitoring.integration-test",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.monthly-cleanup",
      "to": "argparse"
    },
    {
      "from": "scripts.monitoring.monthly-cleanup",
      "to": "datetime"
    },
    {
      "from": "scripts.monitoring.monthly-cleanup",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.monthly-cleanup",
      "to": "logging"
    },
    {
      "from": "scripts.monitoring.monthly-cleanup",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.monthly-cleanup",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.monthly-cleanup",
      "to": "shutil"
    },
    {
      "from": "scripts.monitoring.monthly-cleanup",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.monthly-cleanup",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "argparse"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "asyncio"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "collections"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "concurrent"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "contextlib"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "dataclasses"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "datetime"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "docker"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "enum"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "hashlib"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "kubernetes"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "logging"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "neo4j"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "prometheus_client"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "psutil"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "psycopg2"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "redis"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "requests"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "sqlite3"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "statistics"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "threading"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "traceback"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "typing"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "websocket"
    },
    {
      "from": "scripts.monitoring.multi-system-integration-framework",
      "to": "yaml"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "argparse"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "concurrent"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "datetime"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "enhanced_compliance_monitor"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "logging"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "psutil"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "queue"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "shutil"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "sqlite3"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "tempfile"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "threading"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.production-readiness-validator",
      "to": "typing"
    },
    {
      "from": "scripts.monitoring.simple_validation",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.simple_validation",
      "to": "requests"
    },
    {
      "from": "scripts.monitoring.simple_validation",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.simple_validation",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.simple_validation",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "collections"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "concurrent"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "logging"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "pynvml"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "re"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "requests"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "select"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "socket"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "termios"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "threading"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "tty"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "typing"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "urllib3"
    },
    {
      "from": "scripts.monitoring.static_monitor",
      "to": "xml"
    },
    {
      "from": "scripts.monitoring.test_agent_detection",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.test_agent_detection",
      "to": "socket"
    },
    {
      "from": "scripts.monitoring.test_agent_detection",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.test_agent_detection",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.test_agent_detection",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.test_agent_detection",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.test_enhanced_monitor",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.test_enhanced_monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.test_enhanced_monitor",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.test_enhanced_monitor",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.test_enhanced_monitor",
      "to": "tempfile"
    },
    {
      "from": "scripts.monitoring.test_enhanced_monitor",
      "to": "traceback"
    },
    {
      "from": "scripts.monitoring.test_gpu_detection",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.test_gpu_detection",
      "to": "pynvml"
    },
    {
      "from": "scripts.monitoring.test_gpu_detection",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.test_gpu_detection",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.test_hardware_agent_detection",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.test_hardware_agent_detection",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.test_hardware_optimizer_detection",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.test_hardware_optimizer_detection",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.test_hardware_optimizer_detection",
      "to": "requests"
    },
    {
      "from": "scripts.monitoring.test_hardware_optimizer_detection",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.test_hardware_optimizer_detection",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.test_hardware_optimizer_detection",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "collections"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "http"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "io"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "shutil"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "socket"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "socketserver"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "tempfile"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "threading"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "typing"
    },
    {
      "from": "scripts.monitoring.test_static_monitor",
      "to": "unittest"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "collections"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "http"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "os"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "socket"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "socketserver"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "threading"
    },
    {
      "from": "scripts.monitoring.test_static_monitor_simple",
      "to": "time"
    },
    {
      "from": "scripts.monitoring.validation_report",
      "to": "json"
    },
    {
      "from": "scripts.monitoring.validation_report",
      "to": "pathlib"
    },
    {
      "from": "scripts.monitoring.validation_report",
      "to": "requests"
    },
    {
      "from": "scripts.monitoring.validation_report",
      "to": "static_monitor"
    },
    {
      "from": "scripts.monitoring.validation_report",
      "to": "subprocess"
    },
    {
      "from": "scripts.monitoring.validation_report",
      "to": "sys"
    },
    {
      "from": "scripts.monitoring.validation_report",
      "to": "time"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "argparse"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "asyncio"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "base64"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "concurrent"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "cryptography"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "dataclasses"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "datetime"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "enum"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "hashlib"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "jinja2"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "json"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "logging"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "os"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "pathlib"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "re"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "secrets"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "shutil"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "sqlite3"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "string"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "subprocess"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "sys"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "tempfile"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "threading"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "time"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "traceback"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "typing"
    },
    {
      "from": "scripts.multi-environment-config-manager",
      "to": "yaml"
    },
    {
      "from": "scripts.neo4j-performance-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.neo4j-performance-monitor",
      "to": "json"
    },
    {
      "from": "scripts.neo4j-performance-monitor",
      "to": "os"
    },
    {
      "from": "scripts.neo4j-performance-monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.neo4j-performance-monitor",
      "to": "time"
    },
    {
      "from": "scripts.onboarding.generate_kickoff_deck",
      "to": "__future__"
    },
    {
      "from": "scripts.onboarding.generate_kickoff_deck",
      "to": "pathlib"
    },
    {
      "from": "scripts.onboarding.generate_kickoff_deck",
      "to": "pptx"
    },
    {
      "from": "scripts.onboarding.generate_kickoff_deck",
      "to": "sys"
    },
    {
      "from": "scripts.optimization-validator",
      "to": "argparse"
    },
    {
      "from": "scripts.optimization-validator",
      "to": "datetime"
    },
    {
      "from": "scripts.optimization-validator",
      "to": "docker"
    },
    {
      "from": "scripts.optimization-validator",
      "to": "json"
    },
    {
      "from": "scripts.optimization-validator",
      "to": "psutil"
    },
    {
      "from": "scripts.optimization-validator",
      "to": "subprocess"
    },
    {
      "from": "scripts.optimization-validator",
      "to": "sys"
    },
    {
      "from": "scripts.optimization-validator",
      "to": "threading"
    },
    {
      "from": "scripts.optimization-validator",
      "to": "time"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "argparse"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "datetime"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "docker"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "json"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "logging"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "os"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "pathlib"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "psutil"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "subprocess"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "sys"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "time"
    },
    {
      "from": "scripts.optimize-agent-utilization",
      "to": "typing"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "argparse"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "asyncio"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "datetime"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "httpx"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "json"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "logging"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "ollama_batch_processor"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "ollama_context_optimizer"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "ollama_model_manager"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "ollama_performance_optimizer"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "os"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "pathlib"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "redis"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "sys"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "time"
    },
    {
      "from": "scripts.optimize-ollama-performance",
      "to": "typing"
    },
    {
      "from": "scripts.optimize_ollama",
      "to": "argparse"
    },
    {
      "from": "scripts.optimize_ollama",
      "to": "json"
    },
    {
      "from": "scripts.optimize_ollama",
      "to": "os"
    },
    {
      "from": "scripts.optimize_ollama",
      "to": "pathlib"
    },
    {
      "from": "scripts.optimize_ollama",
      "to": "subprocess"
    },
    {
      "from": "scripts.optimize_ollama",
      "to": "sys"
    },
    {
      "from": "scripts.optimize_ollama",
      "to": "time"
    },
    {
      "from": "scripts.optimize_ollama",
      "to": "typing"
    },
    {
      "from": "scripts.optimize_ollama",
      "to": "yaml"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "argparse"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "asyncio"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "celery"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "concurrent"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "dataclasses"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "datetime"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "enum"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "json"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "logging"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "os"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "pathlib"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "redis"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "sys"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "time"
    },
    {
      "from": "scripts.orchestration.master-orchestrator",
      "to": "typing"
    },
    {
      "from": "scripts.performance-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.performance-monitor",
      "to": "docker"
    },
    {
      "from": "scripts.performance-monitor",
      "to": "json"
    },
    {
      "from": "scripts.performance-monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.performance-monitor",
      "to": "time"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "aiohttp"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "argparse"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "asyncio"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "collections"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "dataclasses"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "datetime"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "docker"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "json"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "logging"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "psutil"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "redis"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "time"
    },
    {
      "from": "scripts.performance-optimization",
      "to": "typing"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "argparse"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "asyncio"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "cProfile"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "collections"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "contextlib"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "dataclasses"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "docker"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "gc"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "io"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "json"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "logging"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "multiprocessing"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "os"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "pathlib"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "pstats"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "psutil"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "resource"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "signal"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "statistics"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "subprocess"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "sys"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "threading"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "time"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "tracemalloc"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "typing"
    },
    {
      "from": "scripts.performance-profiler-suite",
      "to": "weakref"
    },
    {
      "from": "scripts.permanent-health-monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.permanent-health-monitor",
      "to": "docker"
    },
    {
      "from": "scripts.permanent-health-monitor",
      "to": "json"
    },
    {
      "from": "scripts.permanent-health-monitor",
      "to": "logging"
    },
    {
      "from": "scripts.permanent-health-monitor",
      "to": "os"
    },
    {
      "from": "scripts.permanent-health-monitor",
      "to": "signal"
    },
    {
      "from": "scripts.permanent-health-monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.permanent-health-monitor",
      "to": "sys"
    },
    {
      "from": "scripts.permanent-health-monitor",
      "to": "time"
    },
    {
      "from": "scripts.permanent-health-monitor",
      "to": "typing"
    },
    {
      "from": "scripts.pin_all_dependencies",
      "to": "datetime"
    },
    {
      "from": "scripts.pin_all_dependencies",
      "to": "os"
    },
    {
      "from": "scripts.pin_all_dependencies",
      "to": "pathlib"
    },
    {
      "from": "scripts.pin_all_dependencies",
      "to": "re"
    },
    {
      "from": "scripts.pin_all_dependencies",
      "to": "shutil"
    },
    {
      "from": "scripts.pre-commit.check-agent-usage",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-agent-usage",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-agent-usage",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-agent-usage",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-breaking-changes",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-breaking-changes",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-breaking-changes",
      "to": "subprocess"
    },
    {
      "from": "scripts.pre-commit.check-breaking-changes",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-breaking-changes",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-changelog-updated",
      "to": "__future__"
    },
    {
      "from": "scripts.pre-commit.check-changelog-updated",
      "to": "os"
    },
    {
      "from": "scripts.pre-commit.check-changelog-updated",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-changelog-updated",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-changelog-updated",
      "to": "subprocess"
    },
    {
      "from": "scripts.pre-commit.check-changelog-updated",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-deployment-scripts",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-deployment-scripts",
      "to": "subprocess"
    },
    {
      "from": "scripts.pre-commit.check-deployment-scripts",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-deployment-scripts",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-directory-duplication",
      "to": "os"
    },
    {
      "from": "scripts.pre-commit.check-directory-duplication",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-directory-duplication",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-directory-duplication",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-directory-duplication",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-doc-duplication",
      "to": "hashlib"
    },
    {
      "from": "scripts.pre-commit.check-doc-duplication",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-doc-duplication",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-doc-duplication",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-doc-duplication",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-doc-structure",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-doc-structure",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-doc-structure",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-doc-structure",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-docker-structure",
      "to": "json"
    },
    {
      "from": "scripts.pre-commit.check-docker-structure",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-docker-structure",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-docker-structure",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-docker-structure",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-docker-structure",
      "to": "yaml"
    },
    {
      "from": "scripts.pre-commit.check-conceptual-elements",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-conceptual-elements",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-conceptual-elements",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-conceptual-elements",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-garbage-files",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-garbage-files",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-garbage-files",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-garbage-files",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-llm-usage",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-llm-usage",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-llm-usage",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-llm-usage",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-python-docs",
      "to": "ast"
    },
    {
      "from": "scripts.pre-commit.check-python-docs",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-python-docs",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-python-docs",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-python-docs",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-safe-deletion",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-safe-deletion",
      "to": "subprocess"
    },
    {
      "from": "scripts.pre-commit.check-safe-deletion",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-safe-deletion",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-script-duplication",
      "to": "ast"
    },
    {
      "from": "scripts.pre-commit.check-script-duplication",
      "to": "hashlib"
    },
    {
      "from": "scripts.pre-commit.check-script-duplication",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-script-duplication",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-script-duplication",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-script-duplication",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.check-script-organization",
      "to": "os"
    },
    {
      "from": "scripts.pre-commit.check-script-organization",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.check-script-organization",
      "to": "re"
    },
    {
      "from": "scripts.pre-commit.check-script-organization",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.check-script-organization",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.quick-system-check",
      "to": "ast"
    },
    {
      "from": "scripts.pre-commit.quick-system-check",
      "to": "json"
    },
    {
      "from": "scripts.pre-commit.quick-system-check",
      "to": "pathlib"
    },
    {
      "from": "scripts.pre-commit.quick-system-check",
      "to": "subprocess"
    },
    {
      "from": "scripts.pre-commit.quick-system-check",
      "to": "sys"
    },
    {
      "from": "scripts.pre-commit.quick-system-check",
      "to": "typing"
    },
    {
      "from": "scripts.pre-commit.quick-system-check",
      "to": "yaml"
    },
    {
      "from": "scripts.prepare-20-agents",
      "to": "os"
    },
    {
      "from": "scripts.prepare-20-agents",
      "to": "pathlib"
    },
    {
      "from": "scripts.prepare-20-agents",
      "to": "shutil"
    },
    {
      "from": "scripts.profile-hygiene-memory",
      "to": "asyncio"
    },
    {
      "from": "scripts.profile-hygiene-memory",
      "to": "datetime"
    },
    {
      "from": "scripts.profile-hygiene-memory",
      "to": "json"
    },
    {
      "from": "scripts.profile-hygiene-memory",
      "to": "matplotlib"
    },
    {
      "from": "scripts.profile-hygiene-memory",
      "to": "pathlib"
    },
    {
      "from": "scripts.profile-hygiene-memory",
      "to": "psutil"
    },
    {
      "from": "scripts.profile-hygiene-memory",
      "to": "subprocess"
    },
    {
      "from": "scripts.profile-hygiene-memory",
      "to": "time"
    },
    {
      "from": "scripts.profile-hygiene-memory",
      "to": "tracemalloc"
    },
    {
      "from": "scripts.quick-container-analysis",
      "to": "collections"
    },
    {
      "from": "scripts.quick-container-analysis",
      "to": "datetime"
    },
    {
      "from": "scripts.quick-container-analysis",
      "to": "json"
    },
    {
      "from": "scripts.quick-container-analysis",
      "to": "logging"
    },
    {
      "from": "scripts.quick-container-analysis",
      "to": "os"
    },
    {
      "from": "scripts.quick-container-analysis",
      "to": "pathlib"
    },
    {
      "from": "scripts.quick-container-analysis",
      "to": "yaml"
    },
    {
      "from": "scripts.register_with_consul",
      "to": "__future__"
    },
    {
      "from": "scripts.register_with_consul",
      "to": "argparse"
    },
    {
      "from": "scripts.register_with_consul",
      "to": "consul"
    },
    {
      "from": "scripts.register_with_consul",
      "to": "os"
    },
    {
      "from": "scripts.register_with_consul",
      "to": "random"
    },
    {
      "from": "scripts.register_with_consul",
      "to": "sys"
    },
    {
      "from": "scripts.register_with_consul",
      "to": "time"
    },
    {
      "from": "scripts.register_with_consul",
      "to": "typing"
    },
    {
      "from": "scripts.remove_hardcoded_secrets",
      "to": "os"
    },
    {
      "from": "scripts.remove_hardcoded_secrets",
      "to": "pathlib"
    },
    {
      "from": "scripts.remove_hardcoded_secrets",
      "to": "re"
    },
    {
      "from": "scripts.requirements_analyzer",
      "to": "collections"
    },
    {
      "from": "scripts.requirements_analyzer",
      "to": "datetime"
    },
    {
      "from": "scripts.requirements_analyzer",
      "to": "json"
    },
    {
      "from": "scripts.requirements_analyzer",
      "to": "os"
    },
    {
      "from": "scripts.requirements_analyzer",
      "to": "pathlib"
    },
    {
      "from": "scripts.requirements_analyzer",
      "to": "re"
    },
    {
      "from": "scripts.requirements_analyzer",
      "to": "requests"
    },
    {
      "from": "scripts.requirements_analyzer",
      "to": "typing"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "aiohttp"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "argparse"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "asyncio"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "collections"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "concurrent"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "dataclasses"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "enum"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "gc"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "json"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "logging"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "math"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "multiprocessing"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "os"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "pathlib"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "psutil"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "signal"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "statistics"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "sys"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "threading"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "time"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "typing"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "uuid"
    },
    {
      "from": "scripts.resource-pool-coordinator",
      "to": "weakref"
    },
    {
      "from": "scripts.run_hygiene_suite",
      "to": "datetime"
    },
    {
      "from": "scripts.run_hygiene_suite",
      "to": "json"
    },
    {
      "from": "scripts.run_hygiene_suite",
      "to": "pathlib"
    },
    {
      "from": "scripts.run_hygiene_suite",
      "to": "subprocess"
    },
    {
      "from": "scripts.run_hygiene_suite",
      "to": "sys"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "argparse"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "collections"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "datetime"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "hashlib"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "json"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "logging"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "os"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "pathlib"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "shutil"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "sys"
    },
    {
      "from": "scripts.safe-requirements-cleanup",
      "to": "typing"
    },
    {
      "from": "scripts.scan_localhost",
      "to": "__future__"
    },
    {
      "from": "scripts.scan_localhost",
      "to": "pathlib"
    },
    {
      "from": "scripts.scan_localhost",
      "to": "re"
    },
    {
      "from": "scripts.scan_localhost",
      "to": "sys"
    },
    {
      "from": "scripts.scan_localhost",
      "to": "typing"
    },
    {
      "from": "scripts.service-mesh.configure-fault-tolerance",
      "to": "argparse"
    },
    {
      "from": "scripts.service-mesh.configure-fault-tolerance",
      "to": "json"
    },
    {
      "from": "scripts.service-mesh.configure-fault-tolerance",
      "to": "logging"
    },
    {
      "from": "scripts.service-mesh.configure-fault-tolerance",
      "to": "requests"
    },
    {
      "from": "scripts.service-mesh.configure-fault-tolerance",
      "to": "typing"
    },
    {
      "from": "scripts.service-mesh.configure-kong",
      "to": "argparse"
    },
    {
      "from": "scripts.service-mesh.configure-kong",
      "to": "json"
    },
    {
      "from": "scripts.service-mesh.configure-kong",
      "to": "logging"
    },
    {
      "from": "scripts.service-mesh.configure-kong",
      "to": "requests"
    },
    {
      "from": "scripts.service-mesh.configure-kong",
      "to": "time"
    },
    {
      "from": "scripts.service-mesh.configure-kong",
      "to": "typing"
    },
    {
      "from": "scripts.service-mesh.configure-kong",
      "to": "yaml"
    },
    {
      "from": "scripts.service-mesh.configure-rabbitmq",
      "to": "argparse"
    },
    {
      "from": "scripts.service-mesh.configure-rabbitmq",
      "to": "json"
    },
    {
      "from": "scripts.service-mesh.configure-rabbitmq",
      "to": "logging"
    },
    {
      "from": "scripts.service-mesh.configure-rabbitmq",
      "to": "os"
    },
    {
      "from": "scripts.service-mesh.configure-rabbitmq",
      "to": "requests"
    },
    {
      "from": "scripts.service-mesh.configure-rabbitmq",
      "to": "typing"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "aiohttp"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "asyncio"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "dataclasses"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "datetime"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "json"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "logging"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "os"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "psutil"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "redis"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "sys"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "time"
    },
    {
      "from": "scripts.service-mesh.health-check-server",
      "to": "typing"
    },
    {
      "from": "scripts.service-mesh.optimize-load-balancing",
      "to": "argparse"
    },
    {
      "from": "scripts.service-mesh.optimize-load-balancing",
      "to": "json"
    },
    {
      "from": "scripts.service-mesh.optimize-load-balancing",
      "to": "logging"
    },
    {
      "from": "scripts.service-mesh.optimize-load-balancing",
      "to": "requests"
    },
    {
      "from": "scripts.service-mesh.optimize-load-balancing",
      "to": "typing"
    },
    {
      "from": "scripts.service-mesh.register-services",
      "to": "argparse"
    },
    {
      "from": "scripts.service-mesh.register-services",
      "to": "json"
    },
    {
      "from": "scripts.service-mesh.register-services",
      "to": "logging"
    },
    {
      "from": "scripts.service-mesh.register-services",
      "to": "requests"
    },
    {
      "from": "scripts.service-mesh.register-services",
      "to": "time"
    },
    {
      "from": "scripts.service-mesh.register-services",
      "to": "typing"
    },
    {
      "from": "scripts.service-mesh.service-discovery-client",
      "to": "asyncio"
    },
    {
      "from": "scripts.service-mesh.service-discovery-client",
      "to": "consul"
    },
    {
      "from": "scripts.service-mesh.service-discovery-client",
      "to": "dataclasses"
    },
    {
      "from": "scripts.service-mesh.service-discovery-client",
      "to": "json"
    },
    {
      "from": "scripts.service-mesh.service-discovery-client",
      "to": "logging"
    },
    {
      "from": "scripts.service-mesh.service-discovery-client",
      "to": "os"
    },
    {
      "from": "scripts.service-mesh.service-discovery-client",
      "to": "pathlib"
    },
    {
      "from": "scripts.service-mesh.service-discovery-client",
      "to": "sys"
    },
    {
      "from": "scripts.service-mesh.service-discovery-client",
      "to": "time"
    },
    {
      "from": "scripts.service-mesh.service-discovery-client",
      "to": "typing"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "aiohttp"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "asyncio"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "json"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "logging"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "os"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "pathlib"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "signal"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "subprocess"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "sys"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "time"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "typing"
    },
    {
      "from": "scripts.service-mesh.service-mesh-orchestrator",
      "to": "yaml"
    },
    {
      "from": "scripts.service-mesh.test-service-communication",
      "to": "argparse"
    },
    {
      "from": "scripts.service-mesh.test-service-communication",
      "to": "concurrent"
    },
    {
      "from": "scripts.service-mesh.test-service-communication",
      "to": "json"
    },
    {
      "from": "scripts.service-mesh.test-service-communication",
      "to": "logging"
    },
    {
      "from": "scripts.service-mesh.test-service-communication",
      "to": "requests"
    },
    {
      "from": "scripts.service-mesh.test-service-communication",
      "to": "time"
    },
    {
      "from": "scripts.service-mesh.test-service-communication",
      "to": "typing"
    },
    {
      "from": "scripts.service-mesh.validate-service-mesh",
      "to": "aiohttp"
    },
    {
      "from": "scripts.service-mesh.validate-service-mesh",
      "to": "argparse"
    },
    {
      "from": "scripts.service-mesh.validate-service-mesh",
      "to": "asyncio"
    },
    {
      "from": "scripts.service-mesh.validate-service-mesh",
      "to": "dataclasses"
    },
    {
      "from": "scripts.service-mesh.validate-service-mesh",
      "to": "json"
    },
    {
      "from": "scripts.service-mesh.validate-service-mesh",
      "to": "logging"
    },
    {
      "from": "scripts.service-mesh.validate-service-mesh",
      "to": "os"
    },
    {
      "from": "scripts.service-mesh.validate-service-mesh",
      "to": "sys"
    },
    {
      "from": "scripts.service-mesh.validate-service-mesh",
      "to": "time"
    },
    {
      "from": "scripts.service-mesh.validate-service-mesh",
      "to": "typing"
    },
    {
      "from": "scripts.smoke_test_jarvis",
      "to": "contextlib"
    },
    {
      "from": "scripts.smoke_test_jarvis",
      "to": "fastapi"
    },
    {
      "from": "scripts.smoke_test_jarvis",
      "to": "json"
    },
    {
      "from": "scripts.smoke_test_jarvis",
      "to": "os"
    },
    {
      "from": "scripts.smoke_test_jarvis",
      "to": "pathlib"
    },
    {
      "from": "scripts.smoke_test_jarvis",
      "to": "services"
    },
    {
      "from": "scripts.smoke_test_jarvis",
      "to": "sys"
    },
    {
      "from": "scripts.standardize-requirements",
      "to": "glob"
    },
    {
      "from": "scripts.standardize-requirements",
      "to": "os"
    },
    {
      "from": "scripts.standardize-requirements",
      "to": "pathlib"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "asyncio"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "collections"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "concurrent"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "dataclasses"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "docker"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "json"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "logging"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "os"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "pathlib"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "psutil"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "subprocess"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "sys"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "time"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "typing"
    },
    {
      "from": "scripts.startup_optimizer",
      "to": "yaml"
    },
    {
      "from": "scripts.startup_validator",
      "to": "asyncio"
    },
    {
      "from": "scripts.startup_validator",
      "to": "docker"
    },
    {
      "from": "scripts.startup_validator",
      "to": "json"
    },
    {
      "from": "scripts.startup_validator",
      "to": "logging"
    },
    {
      "from": "scripts.startup_validator",
      "to": "pathlib"
    },
    {
      "from": "scripts.startup_validator",
      "to": "psutil"
    },
    {
      "from": "scripts.startup_validator",
      "to": "requests"
    },
    {
      "from": "scripts.startup_validator",
      "to": "statistics"
    },
    {
      "from": "scripts.startup_validator",
      "to": "subprocess"
    },
    {
      "from": "scripts.startup_validator",
      "to": "time"
    },
    {
      "from": "scripts.startup_validator",
      "to": "typing"
    },
    {
      "from": "scripts.static_discovery",
      "to": "ast"
    },
    {
      "from": "scripts.static_discovery",
      "to": "datetime"
    },
    {
      "from": "scripts.static_discovery",
      "to": "hashlib"
    },
    {
      "from": "scripts.static_discovery",
      "to": "json"
    },
    {
      "from": "scripts.static_discovery",
      "to": "os"
    },
    {
      "from": "scripts.static_discovery",
      "to": "re"
    },
    {
      "from": "scripts.static_discovery",
      "to": "typing"
    },
    {
      "from": "scripts.summarize_openapi",
      "to": "json"
    },
    {
      "from": "scripts.summarize_openapi",
      "to": "pathlib"
    },
    {
      "from": "scripts.synthetic-load-test",
      "to": "aiohttp"
    },
    {
      "from": "scripts.synthetic-load-test",
      "to": "argparse"
    },
    {
      "from": "scripts.synthetic-load-test",
      "to": "asyncio"
    },
    {
      "from": "scripts.synthetic-load-test",
      "to": "datetime"
    },
    {
      "from": "scripts.synthetic-load-test",
      "to": "json"
    },
    {
      "from": "scripts.synthetic-load-test",
      "to": "random"
    },
    {
      "from": "scripts.synthetic-load-test",
      "to": "time"
    },
    {
      "from": "scripts.synthetic-load-test",
      "to": "typing"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "datetime"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "docker"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "json"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "os"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "psutil"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "requests"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "socket"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "subprocess"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "sys"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "time"
    },
    {
      "from": "scripts.system-health-validator",
      "to": "typing"
    },
    {
      "from": "scripts.system-resource-analyzer",
      "to": "argparse"
    },
    {
      "from": "scripts.system-resource-analyzer",
      "to": "collections"
    },
    {
      "from": "scripts.system-resource-analyzer",
      "to": "datetime"
    },
    {
      "from": "scripts.system-resource-analyzer",
      "to": "docker"
    },
    {
      "from": "scripts.system-resource-analyzer",
      "to": "json"
    },
    {
      "from": "scripts.system-resource-analyzer",
      "to": "psutil"
    },
    {
      "from": "scripts.system-resource-analyzer",
      "to": "subprocess"
    },
    {
      "from": "scripts.system-resource-analyzer",
      "to": "sys"
    },
    {
      "from": "scripts.system-resource-analyzer",
      "to": "time"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "advanced_rollback_system"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "aiohttp"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "argparse"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "asyncio"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "concurrent"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "dataclasses"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "datetime"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "enum"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "importlib"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "json"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "logging"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "os"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "pathlib"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "platform"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "psutil"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "signal"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "sqlite3"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "subprocess"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "sys"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "threading"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "time"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "traceback"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "typing"
    },
    {
      "from": "scripts.ultimate-deployment-master",
      "to": "websockets"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "aiohttp"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "argparse"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "asyncio"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "concurrent"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "dataclasses"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "datetime"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "enum"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "json"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "logging"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "os"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "pathlib"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "psutil"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "signal"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "sqlite3"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "subprocess"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "sys"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "threading"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "time"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "traceback"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "typing"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "websockets"
    },
    {
      "from": "scripts.ultimate-deployment-orchestrator",
      "to": "yaml"
    },
    {
      "from": "scripts.update-agent-auth",
      "to": "asyncio"
    },
    {
      "from": "scripts.update-agent-auth",
      "to": "httpx"
    },
    {
      "from": "scripts.update-agent-auth",
      "to": "json"
    },
    {
      "from": "scripts.update-agent-auth",
      "to": "logging"
    },
    {
      "from": "scripts.update-agent-auth",
      "to": "os"
    },
    {
      "from": "scripts.update-agent-auth",
      "to": "pathlib"
    },
    {
      "from": "scripts.update-agent-auth",
      "to": "structlog"
    },
    {
      "from": "scripts.update-agent-auth",
      "to": "typing"
    },
    {
      "from": "scripts.update-restart-policies",
      "to": "json"
    },
    {
      "from": "scripts.update-restart-policies",
      "to": "subprocess"
    },
    {
      "from": "scripts.update_approved_ports",
      "to": "datetime"
    },
    {
      "from": "scripts.update_approved_ports",
      "to": "json"
    },
    {
      "from": "scripts.update_approved_ports",
      "to": "os"
    },
    {
      "from": "scripts.update_approved_ports",
      "to": "shutil"
    },
    {
      "from": "scripts.update_approved_ports",
      "to": "yaml"
    },
    {
      "from": "scripts.utils.add_claude_md_directive",
      "to": "glob"
    },
    {
      "from": "scripts.utils.add_claude_md_directive",
      "to": "json"
    },
    {
      "from": "scripts.utils.add_claude_md_directive",
      "to": "os"
    },
    {
      "from": "scripts.utils.add_claude_md_directive",
      "to": "pathlib"
    },
    {
      "from": "scripts.utils.compact_monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.utils.compact_monitor",
      "to": "os"
    },
    {
      "from": "scripts.utils.compact_monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.utils.compact_monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.utils.compact_monitor",
      "to": "sys"
    },
    {
      "from": "scripts.utils.compact_monitor",
      "to": "time"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "click"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "coverage"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "datetime"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "json"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "os"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "pathlib"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "rich"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "subprocess"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "sys"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "typing"
    },
    {
      "from": "scripts.utils.coverage_reporter",
      "to": "xml"
    },
    {
      "from": "scripts.utils.dependency_analyzer",
      "to": "collections"
    },
    {
      "from": "scripts.utils.dependency_analyzer",
      "to": "json"
    },
    {
      "from": "scripts.utils.dependency_analyzer",
      "to": "logging"
    },
    {
      "from": "scripts.utils.dependency_analyzer",
      "to": "packaging"
    },
    {
      "from": "scripts.utils.dependency_analyzer",
      "to": "pathlib"
    },
    {
      "from": "scripts.utils.dependency_analyzer",
      "to": "re"
    },
    {
      "from": "scripts.utils.dependency_analyzer",
      "to": "subprocess"
    },
    {
      "from": "scripts.utils.dependency_analyzer",
      "to": "typing"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "aiohttp"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "asyncio"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "docker"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "json"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "logging"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "os"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "pathlib"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "pkg_resources"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "psutil"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "psycopg2"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "requests"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "subprocess"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "sys"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "time"
    },
    {
      "from": "scripts.utils.docs_fix_all_issues",
      "to": "typing"
    },
    {
      "from": "scripts.utils.ensure_changelogs",
      "to": "argparse"
    },
    {
      "from": "scripts.utils.ensure_changelogs",
      "to": "os"
    },
    {
      "from": "scripts.utils.ensure_changelogs",
      "to": "pathlib"
    },
    {
      "from": "scripts.utils.generate_architecture_diagram",
      "to": "matplotlib"
    },
    {
      "from": "scripts.utils.generate_architecture_diagram",
      "to": "numpy"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "datetime"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "docker"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "json"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "logging"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "os"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "psutil"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "requests"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "subprocess"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "sys"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "time"
    },
    {
      "from": "scripts.utils.health_monitor",
      "to": "typing"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "gc"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "json"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "logging"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "os"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "psutil"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "requests"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "signal"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "subprocess"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "sys"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "threading"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "time"
    },
    {
      "from": "scripts.utils.memory_cleanup_service",
      "to": "typing"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "gc"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "json"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "logging"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "os"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "psutil"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "requests"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "sys"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "threading"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "time"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "typing"
    },
    {
      "from": "scripts.utils.ollama_memory_optimizer",
      "to": "yaml"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "argparse"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "cpuinfo"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "gc"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "json"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "logging"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "numpy"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "optimum"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "os"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "platform"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "psutil"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "sys"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "time"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "torch"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "transformers"
    },
    {
      "from": "scripts.utils.optimize_transformers",
      "to": "typing"
    },
    {
      "from": "scripts.utils.otp_override",
      "to": "argparse"
    },
    {
      "from": "scripts.utils.otp_override",
      "to": "hashlib"
    },
    {
      "from": "scripts.utils.otp_override",
      "to": "json"
    },
    {
      "from": "scripts.utils.otp_override",
      "to": "logging"
    },
    {
      "from": "scripts.utils.otp_override",
      "to": "os"
    },
    {
      "from": "scripts.utils.otp_override",
      "to": "pathlib"
    },
    {
      "from": "scripts.utils.otp_override",
      "to": "random"
    },
    {
      "from": "scripts.utils.otp_override",
      "to": "sys"
    },
    {
      "from": "scripts.utils.otp_override",
      "to": "time"
    },
    {
      "from": "scripts.utils.remove_litellm_from_registry",
      "to": "json"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "aiohttp"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "argparse"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "asyncio"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "dataclasses"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "datetime"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "json"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "logging"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "os"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "psutil"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "socket"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "subprocess"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "sys"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "time"
    },
    {
      "from": "scripts.validate-complete-system",
      "to": "typing"
    },
    {
      "from": "scripts.validate-compliance",
      "to": "datetime"
    },
    {
      "from": "scripts.validate-compliance",
      "to": "json"
    },
    {
      "from": "scripts.validate-compliance",
      "to": "os"
    },
    {
      "from": "scripts.validate-compliance",
      "to": "pathlib"
    },
    {
      "from": "scripts.validate-compliance",
      "to": "re"
    },
    {
      "from": "scripts.validate-compliance",
      "to": "typing"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "argparse"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "collections"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "datetime"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "hashlib"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "json"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "logging"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "os"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "pathlib"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "shutil"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "subprocess"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "sys"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "time"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "typing"
    },
    {
      "from": "scripts.validate-container-infrastructure",
      "to": "yaml"
    },
    {
      "from": "scripts.validate-production-health",
      "to": "datetime"
    },
    {
      "from": "scripts.validate-production-health",
      "to": "docker"
    },
    {
      "from": "scripts.validate-production-health",
      "to": "json"
    },
    {
      "from": "scripts.validate-production-health",
      "to": "sys"
    },
    {
      "from": "scripts.validate-production-health",
      "to": "typing"
    },
    {
      "from": "scripts.validate_agents",
      "to": "os"
    },
    {
      "from": "scripts.validate_agents",
      "to": "pathlib"
    },
    {
      "from": "scripts.validate_agents",
      "to": "re"
    },
    {
      "from": "scripts.validate_agents",
      "to": "sys"
    },
    {
      "from": "scripts.validate_agents",
      "to": "yaml"
    },
    {
      "from": "scripts.validate_ports",
      "to": "__future__"
    },
    {
      "from": "scripts.validate_ports",
      "to": "argparse"
    },
    {
      "from": "scripts.validate_ports",
      "to": "collections"
    },
    {
      "from": "scripts.validate_ports",
      "to": "glob"
    },
    {
      "from": "scripts.validate_ports",
      "to": "json"
    },
    {
      "from": "scripts.validate_ports",
      "to": "pathlib"
    },
    {
      "from": "scripts.validate_ports",
      "to": "sys"
    },
    {
      "from": "scripts.validate_ports",
      "to": "typing"
    },
    {
      "from": "scripts.validate_ports",
      "to": "yaml"
    },
    {
      "from": "scripts.validate_security_improvements",
      "to": "datetime"
    },
    {
      "from": "scripts.validate_security_improvements",
      "to": "json"
    },
    {
      "from": "scripts.validate_security_improvements",
      "to": "os"
    },
    {
      "from": "scripts.validate_security_improvements",
      "to": "pathlib"
    },
    {
      "from": "scripts.validate_security_improvements",
      "to": "re"
    },
    {
      "from": "scripts.validate_security_improvements",
      "to": "subprocess"
    },
    {
      "from": "scripts.validate_security_remediation",
      "to": "json"
    },
    {
      "from": "scripts.validate_security_remediation",
      "to": "os"
    },
    {
      "from": "scripts.validate_security_remediation",
      "to": "pathlib"
    },
    {
      "from": "scripts.validate_security_remediation",
      "to": "re"
    },
    {
      "from": "scripts.validate_security_remediation",
      "to": "subprocess"
    },
    {
      "from": "scripts.validate_security_remediation",
      "to": "typing"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "aiofiles"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "argparse"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "asyncio"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "dataclasses"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "datetime"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "httpx"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "json"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "logging"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "pathlib"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "sys"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "time"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "traceback"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "typing"
    },
    {
      "from": "scripts.verify-hygiene-monitoring-system",
      "to": "websockets"
    },
    {
      "from": "scripts.verify_claude_rules",
      "to": "os"
    },
    {
      "from": "scripts.verify_claude_rules",
      "to": "pathlib"
    },
    {
      "from": "scripts.verify_claude_rules",
      "to": "subprocess"
    },
    {
      "from": "services.adapters.__init__",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.agent_systems.__init__",
      "to": "autogpt_adapter"
    },
    {
      "from": "services.adapters.agent_systems.__init__",
      "to": "letta_adapter"
    },
    {
      "from": "services.adapters.agent_systems.autogpt_adapter",
      "to": "asyncio"
    },
    {
      "from": "services.adapters.agent_systems.autogpt_adapter",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.agent_systems.autogpt_adapter",
      "to": "json"
    },
    {
      "from": "services.adapters.agent_systems.autogpt_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.agent_systems.autogpt_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.agent_systems.letta_adapter",
      "to": "aiohttp"
    },
    {
      "from": "services.adapters.agent_systems.letta_adapter",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.agent_systems.letta_adapter",
      "to": "json"
    },
    {
      "from": "services.adapters.agent_systems.letta_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.agent_systems.letta_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.ai_frameworks.__init__",
      "to": "pytorch_adapter"
    },
    {
      "from": "services.adapters.ai_frameworks.__init__",
      "to": "tensorflow_adapter"
    },
    {
      "from": "services.adapters.ai_frameworks.pytorch_adapter",
      "to": "asyncio"
    },
    {
      "from": "services.adapters.ai_frameworks.pytorch_adapter",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.ai_frameworks.pytorch_adapter",
      "to": "concurrent"
    },
    {
      "from": "services.adapters.ai_frameworks.pytorch_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.ai_frameworks.pytorch_adapter",
      "to": "numpy"
    },
    {
      "from": "services.adapters.ai_frameworks.pytorch_adapter",
      "to": "torch"
    },
    {
      "from": "services.adapters.ai_frameworks.pytorch_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.ai_frameworks.tensorflow_adapter",
      "to": "asyncio"
    },
    {
      "from": "services.adapters.ai_frameworks.tensorflow_adapter",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.ai_frameworks.tensorflow_adapter",
      "to": "concurrent"
    },
    {
      "from": "services.adapters.ai_frameworks.tensorflow_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.ai_frameworks.tensorflow_adapter",
      "to": "numpy"
    },
    {
      "from": "services.adapters.ai_frameworks.tensorflow_adapter",
      "to": "tensorflow"
    },
    {
      "from": "services.adapters.ai_frameworks.tensorflow_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.base_adapter",
      "to": "abc"
    },
    {
      "from": "services.adapters.base_adapter",
      "to": "aiohttp"
    },
    {
      "from": "services.adapters.base_adapter",
      "to": "asyncio"
    },
    {
      "from": "services.adapters.base_adapter",
      "to": "datetime"
    },
    {
      "from": "services.adapters.base_adapter",
      "to": "json"
    },
    {
      "from": "services.adapters.base_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.base_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.specialized_tools.__init__",
      "to": "finrobot_adapter"
    },
    {
      "from": "services.adapters.specialized_tools.finrobot_adapter",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.specialized_tools.finrobot_adapter",
      "to": "datetime"
    },
    {
      "from": "services.adapters.specialized_tools.finrobot_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.specialized_tools.finrobot_adapter",
      "to": "pandas"
    },
    {
      "from": "services.adapters.specialized_tools.finrobot_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.vector_db.__init__",
      "to": "chromadb_adapter"
    },
    {
      "from": "services.adapters.vector_db.__init__",
      "to": "faiss_adapter"
    },
    {
      "from": "services.adapters.vector_db.__init__",
      "to": "qdrant_adapter"
    },
    {
      "from": "services.adapters.vector_db.chromadb_adapter",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.vector_db.chromadb_adapter",
      "to": "chromadb"
    },
    {
      "from": "services.adapters.vector_db.chromadb_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.vector_db.chromadb_adapter",
      "to": "numpy"
    },
    {
      "from": "services.adapters.vector_db.chromadb_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.vector_db.faiss_adapter",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.vector_db.faiss_adapter",
      "to": "faiss"
    },
    {
      "from": "services.adapters.vector_db.faiss_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.vector_db.faiss_adapter",
      "to": "numpy"
    },
    {
      "from": "services.adapters.vector_db.faiss_adapter",
      "to": "os"
    },
    {
      "from": "services.adapters.vector_db.faiss_adapter",
      "to": "pickle"
    },
    {
      "from": "services.adapters.vector_db.faiss_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.vector_db.qdrant_adapter",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.vector_db.qdrant_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.vector_db.qdrant_adapter",
      "to": "qdrant_client"
    },
    {
      "from": "services.adapters.vector_db.qdrant_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.vector_db.qdrant_adapter",
      "to": "uuid"
    },
    {
      "from": "services.adapters.workflow_tools.__init__",
      "to": "dify_adapter"
    },
    {
      "from": "services.adapters.workflow_tools.__init__",
      "to": "langflow_adapter"
    },
    {
      "from": "services.adapters.workflow_tools.dify_adapter",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.workflow_tools.dify_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.workflow_tools.dify_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.workflow_tools.langflow_adapter",
      "to": "base_adapter"
    },
    {
      "from": "services.adapters.workflow_tools.langflow_adapter",
      "to": "logging"
    },
    {
      "from": "services.adapters.workflow_tools.langflow_adapter",
      "to": "typing"
    },
    {
      "from": "services.adapters.workflow_tools.langflow_adapter",
      "to": "uuid"
    },
    {
      "from": "services.ai-metrics.main",
      "to": "asyncio"
    },
    {
      "from": "services.ai-metrics.main",
      "to": "datetime"
    },
    {
      "from": "services.ai-metrics.main",
      "to": "json"
    },
    {
      "from": "services.ai-metrics.main",
      "to": "logging"
    },
    {
      "from": "services.ai-metrics.main",
      "to": "neo4j"
    },
    {
      "from": "services.ai-metrics.main",
      "to": "os"
    },
    {
      "from": "services.ai-metrics.main",
      "to": "prometheus_client"
    },
    {
      "from": "services.ai-metrics.main",
      "to": "requests"
    },
    {
      "from": "services.ai-metrics.main",
      "to": "time"
    },
    {
      "from": "services.ai-metrics.main",
      "to": "typing"
    },
    {
      "from": "services.api-adapter.unified_ai_client",
      "to": "consul"
    },
    {
      "from": "services.api-adapter.unified_ai_client",
      "to": "dataclasses"
    },
    {
      "from": "services.api-adapter.unified_ai_client",
      "to": "enum"
    },
    {
      "from": "services.api-adapter.unified_ai_client",
      "to": "json"
    },
    {
      "from": "services.api-adapter.unified_ai_client",
      "to": "logging"
    },
    {
      "from": "services.api-adapter.unified_ai_client",
      "to": "os"
    },
    {
      "from": "services.api-adapter.unified_ai_client",
      "to": "redis"
    },
    {
      "from": "services.api-adapter.unified_ai_client",
      "to": "requests"
    },
    {
      "from": "services.api-adapter.unified_ai_client",
      "to": "time"
    },
    {
      "from": "services.api-adapter.unified_ai_client",
      "to": "typing"
    },
    {
      "from": "services.automation.browser_use_service",
      "to": "datetime"
    },
    {
      "from": "services.automation.browser_use_service",
      "to": "fastapi"
    },
    {
      "from": "services.automation.browser_use_service",
      "to": "json"
    },
    {
      "from": "services.automation.browser_use_service",
      "to": "uvicorn"
    },
    {
      "from": "services.automation.skyvern_service",
      "to": "datetime"
    },
    {
      "from": "services.automation.skyvern_service",
      "to": "fastapi"
    },
    {
      "from": "services.automation.skyvern_service",
      "to": "json"
    },
    {
      "from": "services.automation.skyvern_service",
      "to": "uvicorn"
    },
    {
      "from": "services.chainlit.chainlit_app",
      "to": "chainlit"
    },
    {
      "from": "services.chainlit.chainlit_app",
      "to": "httpx"
    },
    {
      "from": "services.chainlit.chainlit_app",
      "to": "os"
    },
    {
      "from": "services.chainlit.chainlit_app",
      "to": "typing"
    },
    {
      "from": "services.codegen.aider_service",
      "to": "datetime"
    },
    {
      "from": "services.codegen.aider_service",
      "to": "fastapi"
    },
    {
      "from": "services.codegen.aider_service",
      "to": "json"
    },
    {
      "from": "services.codegen.aider_service",
      "to": "uvicorn"
    },
    {
      "from": "services.codegen.gpt_engineer_service",
      "to": "datetime"
    },
    {
      "from": "services.codegen.gpt_engineer_service",
      "to": "fastapi"
    },
    {
      "from": "services.codegen.gpt_engineer_service",
      "to": "json"
    },
    {
      "from": "services.codegen.gpt_engineer_service",
      "to": "os"
    },
    {
      "from": "services.codegen.gpt_engineer_service",
      "to": "tempfile"
    },
    {
      "from": "services.codegen.gpt_engineer_service",
      "to": "uvicorn"
    },
    {
      "from": "services.external-service-registry",
      "to": "argparse"
    },
    {
      "from": "services.external-service-registry",
      "to": "consul"
    },
    {
      "from": "services.external-service-registry",
      "to": "datetime"
    },
    {
      "from": "services.external-service-registry",
      "to": "json"
    },
    {
      "from": "services.external-service-registry",
      "to": "redis"
    },
    {
      "from": "services.external-service-registry",
      "to": "sys"
    },
    {
      "from": "services.external-service-registry",
      "to": "typing"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "asyncio"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "datetime"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "faiss"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "fastapi"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "json"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "logging"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "numpy"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "os"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "pickle"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "prometheus_client"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "pydantic"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "redis"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "typing"
    },
    {
      "from": "services.faiss-vector.main",
      "to": "uvicorn"
    },
    {
      "from": "services.jarvis.core.agent_coordinator",
      "to": "aiohttp"
    },
    {
      "from": "services.jarvis.core.agent_coordinator",
      "to": "asyncio"
    },
    {
      "from": "services.jarvis.core.agent_coordinator",
      "to": "datetime"
    },
    {
      "from": "services.jarvis.core.agent_coordinator",
      "to": "json"
    },
    {
      "from": "services.jarvis.core.agent_coordinator",
      "to": "logging"
    },
    {
      "from": "services.jarvis.core.agent_coordinator",
      "to": "typing"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "aioredis"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "asyncio"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "datetime"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "hashlib"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "json"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "logging"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "numpy"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "pathlib"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "sentence_transformers"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "sqlite3"
    },
    {
      "from": "services.jarvis.core.memory_manager",
      "to": "typing"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "agent_coordinator"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "asyncio"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "datetime"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "json"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "logging"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "memory_manager"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "pathlib"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "plugin_manager"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "task_planner"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "time"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "typing"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "voice_interface"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "voice_interface_minimal"
    },
    {
      "from": "services.jarvis.core.orchestrator",
      "to": "yaml"
    },
    {
      "from": "services.jarvis.core.plugin_manager",
      "to": "asyncio"
    },
    {
      "from": "services.jarvis.core.plugin_manager",
      "to": "datetime"
    },
    {
      "from": "services.jarvis.core.plugin_manager",
      "to": "importlib"
    },
    {
      "from": "services.jarvis.core.plugin_manager",
      "to": "json"
    },
    {
      "from": "services.jarvis.core.plugin_manager",
      "to": "logging"
    },
    {
      "from": "services.jarvis.core.plugin_manager",
      "to": "pathlib"
    },
    {
      "from": "services.jarvis.core.plugin_manager",
      "to": "platform"
    },
    {
      "from": "services.jarvis.core.plugin_manager",
      "to": "psutil"
    },
    {
      "from": "services.jarvis.core.plugin_manager",
      "to": "sys"
    },
    {
      "from": "services.jarvis.core.plugin_manager",
      "to": "typing"
    },
    {
      "from": "services.jarvis.core.task_planner",
      "to": "asyncio"
    },
    {
      "from": "services.jarvis.core.task_planner",
      "to": "datetime"
    },
    {
      "from": "services.jarvis.core.task_planner",
      "to": "httpx"
    },
    {
      "from": "services.jarvis.core.task_planner",
      "to": "json"
    },
    {
      "from": "services.jarvis.core.task_planner",
      "to": "logging"
    },
    {
      "from": "services.jarvis.core.task_planner",
      "to": "typing"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "asyncio"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "datetime"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "json"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "logging"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "numpy"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "os"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "pathlib"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "pyaudio"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "pyttsx3"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "scipy"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "soundfile"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "speech_recognition"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "tempfile"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "torch"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "transformers"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "typing"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "wave"
    },
    {
      "from": "services.jarvis.core.voice_interface",
      "to": "webrtcvad"
    },
    {
      "from": "services.jarvis.core.voice_interface_minimal",
      "to": "asyncio"
    },
    {
      "from": "services.jarvis.core.voice_interface_minimal",
      "to": "datetime"
    },
    {
      "from": "services.jarvis.core.voice_interface_minimal",
      "to": "json"
    },
    {
      "from": "services.jarvis.core.voice_interface_minimal",
      "to": "logging"
    },
    {
      "from": "services.jarvis.core.voice_interface_minimal",
      "to": "os"
    },
    {
      "from": "services.jarvis.core.voice_interface_minimal",
      "to": "pathlib"
    },
    {
      "from": "services.jarvis.core.voice_interface_minimal",
      "to": "pyttsx3"
    },
    {
      "from": "services.jarvis.core.voice_interface_minimal",
      "to": "speech_recognition"
    },
    {
      "from": "services.jarvis.core.voice_interface_minimal",
      "to": "tempfile"
    },
    {
      "from": "services.jarvis.core.voice_interface_minimal",
      "to": "typing"
    },
    {
      "from": "services.jarvis.main",
      "to": "asyncio"
    },
    {
      "from": "services.jarvis.main",
      "to": "consul"
    },
    {
      "from": "services.jarvis.main",
      "to": "core"
    },
    {
      "from": "services.jarvis.main",
      "to": "datetime"
    },
    {
      "from": "services.jarvis.main",
      "to": "fastapi"
    },
    {
      "from": "services.jarvis.main",
      "to": "json"
    },
    {
      "from": "services.jarvis.main",
      "to": "logging"
    },
    {
      "from": "services.jarvis.main",
      "to": "multipart"
    },
    {
      "from": "services.jarvis.main",
      "to": "os"
    },
    {
      "from": "services.jarvis.main",
      "to": "prometheus_client"
    },
    {
      "from": "services.jarvis.main",
      "to": "pydantic"
    },
    {
      "from": "services.jarvis.main",
      "to": "pydub"
    },
    {
      "from": "services.jarvis.main",
      "to": "pyttsx3"
    },
    {
      "from": "services.jarvis.main",
      "to": "services"
    },
    {
      "from": "services.jarvis.main",
      "to": "signal"
    },
    {
      "from": "services.jarvis.main",
      "to": "speech_recognition"
    },
    {
      "from": "services.jarvis.main",
      "to": "starlette"
    },
    {
      "from": "services.jarvis.main",
      "to": "sys"
    },
    {
      "from": "services.jarvis.main",
      "to": "typing"
    },
    {
      "from": "services.jarvis.main",
      "to": "uvicorn"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "asyncio"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "datetime"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "fastapi"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "httpx"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "json"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "logging"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "os"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "pydantic"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "services"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "starlette"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "typing"
    },
    {
      "from": "services.jarvis.main_basic",
      "to": "uvicorn"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "asyncio"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "datetime"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "fastapi"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "httpx"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "json"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "logging"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "os"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "prometheus_client"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "pydantic"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "services"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "starlette"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "sys"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "typing"
    },
    {
      "from": "services.jarvis.main_simple",
      "to": "uvicorn"
    },
    {
      "from": "services.jarvis.schemas",
      "to": "pydantic"
    },
    {
      "from": "services.jarvis.schemas",
      "to": "typing"
    },
    {
      "from": "services.jarvis.tests.test_routes_minimal",
      "to": "fastapi"
    },
    {
      "from": "services.jarvis.tests.test_routes_minimal",
      "to": "os"
    },
    {
      "from": "services.jarvis.tests.test_routes_minimal",
      "to": "pathlib"
    },
    {
      "from": "services.jarvis.tests.test_routes_minimal",
      "to": "pytest"
    },
    {
      "from": "services.jarvis.tests.test_routes_minimal",
      "to": "services"
    },
    {
      "from": "services.jarvis.tests.test_routes_minimal",
      "to": "sys"
    },
    {
      "from": "services.langchain.main",
      "to": "consul"
    },
    {
      "from": "services.langchain.main",
      "to": "datetime"
    },
    {
      "from": "services.langchain.main",
      "to": "fastapi"
    },
    {
      "from": "services.langchain.main",
      "to": "json"
    },
    {
      "from": "services.langchain.main",
      "to": "langchain"
    },
    {
      "from": "services.langchain.main",
      "to": "logging"
    },
    {
      "from": "services.langchain.main",
      "to": "os"
    },
    {
      "from": "services.langchain.main",
      "to": "pydantic"
    },
    {
      "from": "services.langchain.main",
      "to": "redis"
    },
    {
      "from": "services.langchain.main",
      "to": "requests"
    },
    {
      "from": "services.langchain.main",
      "to": "typing"
    },
    {
      "from": "services.langchain.main",
      "to": "uvicorn"
    },
    {
      "from": "services.llamaindex.app",
      "to": "fastapi"
    },
    {
      "from": "services.llamaindex.app",
      "to": "llama_index"
    },
    {
      "from": "services.llamaindex.app",
      "to": "logging"
    },
    {
      "from": "services.llamaindex.app",
      "to": "os"
    },
    {
      "from": "services.llamaindex.app",
      "to": "pydantic"
    },
    {
      "from": "services.llamaindex.app",
      "to": "typing"
    },
    {
      "from": "services.llamaindex.app",
      "to": "uvicorn"
    },
    {
      "from": "services.ml.jax_service",
      "to": "datetime"
    },
    {
      "from": "services.ml.jax_service",
      "to": "fastapi"
    },
    {
      "from": "services.ml.jax_service",
      "to": "jax"
    },
    {
      "from": "services.ml.jax_service",
      "to": "json"
    },
    {
      "from": "services.ml.jax_service",
      "to": "uvicorn"
    },
    {
      "from": "services.ml.pytorch_service",
      "to": "datetime"
    },
    {
      "from": "services.ml.pytorch_service",
      "to": "fastapi"
    },
    {
      "from": "services.ml.pytorch_service",
      "to": "json"
    },
    {
      "from": "services.ml.pytorch_service",
      "to": "torch"
    },
    {
      "from": "services.ml.pytorch_service",
      "to": "uvicorn"
    },
    {
      "from": "services.ml.tensorflow_service",
      "to": "datetime"
    },
    {
      "from": "services.ml.tensorflow_service",
      "to": "fastapi"
    },
    {
      "from": "services.ml.tensorflow_service",
      "to": "json"
    },
    {
      "from": "services.ml.tensorflow_service",
      "to": "tensorflow"
    },
    {
      "from": "services.ml.tensorflow_service",
      "to": "uvicorn"
    },
    {
      "from": "services.ollama_service",
      "to": "asyncio"
    },
    {
      "from": "services.ollama_service",
      "to": "backoff"
    },
    {
      "from": "services.ollama_service",
      "to": "datetime"
    },
    {
      "from": "services.ollama_service",
      "to": "functools"
    },
    {
      "from": "services.ollama_service",
      "to": "hashlib"
    },
    {
      "from": "services.ollama_service",
      "to": "httpx"
    },
    {
      "from": "services.ollama_service",
      "to": "json"
    },
    {
      "from": "services.ollama_service",
      "to": "logging"
    },
    {
      "from": "services.ollama_service",
      "to": "pydantic"
    },
    {
      "from": "services.ollama_service",
      "to": "redis"
    },
    {
      "from": "services.ollama_service",
      "to": "typing"
    },
    {
      "from": "services.resource-manager.main",
      "to": "asyncio"
    },
    {
      "from": "services.resource-manager.main",
      "to": "consul"
    },
    {
      "from": "services.resource-manager.main",
      "to": "contextlib"
    },
    {
      "from": "services.resource-manager.main",
      "to": "datetime"
    },
    {
      "from": "services.resource-manager.main",
      "to": "fastapi"
    },
    {
      "from": "services.resource-manager.main",
      "to": "json"
    },
    {
      "from": "services.resource-manager.main",
      "to": "os"
    },
    {
      "from": "services.resource-manager.main",
      "to": "pika"
    },
    {
      "from": "services.resource-manager.main",
      "to": "prometheus_client"
    },
    {
      "from": "services.resource-manager.main",
      "to": "psutil"
    },
    {
      "from": "services.resource-manager.main",
      "to": "psycopg2"
    },
    {
      "from": "services.resource-manager.main",
      "to": "pydantic"
    },
    {
      "from": "services.resource-manager.main",
      "to": "redis"
    },
    {
      "from": "services.resource-manager.main",
      "to": "typing"
    },
    {
      "from": "services.resource-manager.main",
      "to": "uvicorn"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "asyncio"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "consul"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "datetime"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "docker"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "json"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "logging"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "os"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "prometheus_client"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "redis"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "requests"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "time"
    },
    {
      "from": "services.scaler.service_scaler",
      "to": "typing"
    }
  ],
  "summary": {
    "files_scanned": 599,
    "modules": 599,
    "edges": 5328
  }
}