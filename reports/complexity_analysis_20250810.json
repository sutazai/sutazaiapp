{
  "analysis_summary": {
    "total_functions": 13585,
    "high_complexity_functions": 505,
    "files_analyzed": 0,
    "average_complexity": 4.801324990798675,
    "top_violators": [
      {
        "file": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
        "violation_count": 16,
        "functions": [
          {
            "name": "_handle_keyboard_input",
            "complexity": 22,
            "lines_of_code": 29,
            "line_number": 155,
            "issues": [
              "High cyclomatic complexity: 22",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "get_ai_agents_status",
            "complexity": 33,
            "lines_of_code": 118,
            "line_number": 423,
            "issues": [
              "High cyclomatic complexity: 33",
              "Too many lines of code: 118",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_check_agent_health",
            "complexity": 49,
            "lines_of_code": 122,
            "line_number": 542,
            "issues": [
              "High cyclomatic complexity: 49",
              "Too many lines of code: 122",
              "Deep nesting level: 7"
            ]
          },
          {
            "name": "_parse_health_response",
            "complexity": 18,
            "lines_of_code": 31,
            "line_number": 665,
            "issues": [
              "High cyclomatic complexity: 18",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_get_agent_endpoint",
            "complexity": 31,
            "lines_of_code": 74,
            "line_number": 697,
            "issues": [
              "High cyclomatic complexity: 31",
              "Too many lines of code: 74",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_get_container_info",
            "complexity": 41,
            "lines_of_code": 100,
            "line_number": 772,
            "issues": [
              "High cyclomatic complexity: 41",
              "Too many lines of code: 100",
              "Deep nesting level: 8"
            ]
          },
          {
            "name": "_is_agent_deployed",
            "complexity": 20,
            "lines_of_code": 43,
            "line_number": 1064,
            "issues": [
              "High cyclomatic complexity: 20",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_get_display_name",
            "complexity": 17,
            "lines_of_code": 27,
            "line_number": 1108,
            "issues": [
              "High cyclomatic complexity: 17"
            ]
          },
          {
            "name": "_detect_wsl_environment",
            "complexity": 20,
            "lines_of_code": 41,
            "line_number": 1169,
            "issues": [
              "High cyclomatic complexity: 20",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "get_gpu_stats",
            "complexity": 18,
            "lines_of_code": 51,
            "line_number": 1579,
            "issues": [
              "High cyclomatic complexity: 18",
              "Too many lines of code: 51",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_parse_nvidia_xml_stats",
            "complexity": 25,
            "lines_of_code": 67,
            "line_number": 1658,
            "issues": [
              "High cyclomatic complexity: 25",
              "Too many lines of code: 67"
            ]
          },
          {
            "name": "_get_nvidia_stats_csv",
            "complexity": 18,
            "lines_of_code": 39,
            "line_number": 1726,
            "issues": [
              "High cyclomatic complexity: 18"
            ]
          },
          {
            "name": "_get_amd_stats",
            "complexity": 18,
            "lines_of_code": 39,
            "line_number": 1766,
            "issues": [
              "High cyclomatic complexity: 18",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_get_wsl2_directx_stats",
            "complexity": 17,
            "lines_of_code": 53,
            "line_number": 2034,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 53",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "run",
            "complexity": 39,
            "lines_of_code": 175,
            "line_number": 2146,
            "issues": [
              "High cyclomatic complexity: 39",
              "Too many lines of code: 175",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_generate_alert_message",
            "complexity": 26,
            "lines_of_code": 40,
            "line_number": 2322,
            "issues": [
              "High cyclomatic complexity: 26"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/enhanced-compliance-monitor.py",
        "violation_count": 8,
        "functions": [
          {
            "name": "_build_dependency_graph",
            "complexity": 18,
            "lines_of_code": 42,
            "line_number": 245,
            "issues": [
              "High cyclomatic complexity: 18",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "check_rule_7_script_organization",
            "complexity": 21,
            "lines_of_code": 69,
            "line_number": 734,
            "issues": [
              "High cyclomatic complexity: 21",
              "Too many lines of code: 69",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "auto_fix_violations",
            "complexity": 16,
            "lines_of_code": 78,
            "line_number": 1059,
            "issues": [
              "High cyclomatic complexity: 16",
              "Too many lines of code: 78"
            ]
          },
          {
            "name": "_generate_recommendations",
            "complexity": 17,
            "lines_of_code": 35,
            "line_number": 1557,
            "issues": [
              "High cyclomatic complexity: 17"
            ]
          },
          {
            "name": "run_daemon_mode",
            "complexity": 21,
            "lines_of_code": 70,
            "line_number": 1618,
            "issues": [
              "High cyclomatic complexity: 21",
              "Too many lines of code: 70",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "validate_system_integrity",
            "complexity": 17,
            "lines_of_code": 76,
            "line_number": 1689,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 76"
            ]
          },
          {
            "name": "cleanup_old_data",
            "complexity": 18,
            "lines_of_code": 62,
            "line_number": 1766,
            "issues": [
              "High cyclomatic complexity: 18",
              "Too many lines of code: 62",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "main",
            "complexity": 22,
            "lines_of_code": 136,
            "line_number": 1829,
            "issues": [
              "High cyclomatic complexity: 22",
              "Too many lines of code: 136",
              "Deep nesting level: 7"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/tests/test_integration.py",
        "violation_count": 6,
        "functions": [
          {
            "name": "test_agent_connection_pool_integration",
            "complexity": 16,
            "lines_of_code": 38,
            "line_number": 129,
            "issues": [
              "High cyclomatic complexity: 16"
            ]
          },
          {
            "name": "test_agent_circuit_breaker_integration",
            "complexity": 17,
            "lines_of_code": 41,
            "line_number": 169,
            "issues": [
              "High cyclomatic complexity: 17"
            ]
          },
          {
            "name": "test_multiple_agents_different_models",
            "complexity": 19,
            "lines_of_code": 57,
            "line_number": 246,
            "issues": [
              "High cyclomatic complexity: 19",
              "Too many lines of code: 57"
            ]
          },
          {
            "name": "test_agent_backend_integration",
            "complexity": 21,
            "lines_of_code": 72,
            "line_number": 356,
            "issues": [
              "High cyclomatic complexity: 21",
              "Too many lines of code: 72"
            ]
          },
          {
            "name": "test_full_system_workflow",
            "complexity": 19,
            "lines_of_code": 90,
            "line_number": 430,
            "issues": [
              "High cyclomatic complexity: 19",
              "Too many lines of code: 90"
            ]
          },
          {
            "name": "test_agent_config_integration",
            "complexity": 19,
            "lines_of_code": 52,
            "line_number": 526,
            "issues": [
              "High cyclomatic complexity: 19",
              "Too many lines of code: 52"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/tests/qa_comprehensive_test_suite.py",
        "violation_count": 6,
        "functions": [
          {
            "name": "_test_all_endpoints",
            "complexity": 21,
            "lines_of_code": 79,
            "line_number": 167,
            "issues": [
              "High cyclomatic complexity: 21",
              "Too many lines of code: 79",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_test_security_vulnerabilities",
            "complexity": 21,
            "lines_of_code": 69,
            "line_number": 247,
            "issues": [
              "High cyclomatic complexity: 21",
              "Too many lines of code: 69",
              "Deep nesting level: 8"
            ]
          },
          {
            "name": "_test_performance_requirements",
            "complexity": 17,
            "lines_of_code": 65,
            "line_number": 317,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 65"
            ]
          },
          {
            "name": "_test_error_handling",
            "complexity": 18,
            "lines_of_code": 62,
            "line_number": 471,
            "issues": [
              "High cyclomatic complexity: 18",
              "Too many lines of code: 62",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_test_integration_points",
            "complexity": 29,
            "lines_of_code": 64,
            "line_number": 687,
            "issues": [
              "High cyclomatic complexity: 29",
              "Too many lines of code: 64",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_generate_final_report",
            "complexity": 21,
            "lines_of_code": 106,
            "line_number": 770,
            "issues": [
              "High cyclomatic complexity: 21",
              "Too many lines of code: 106"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/disaster-recovery/emergency-shutdown-coordinator.py",
        "violation_count": 6,
        "functions": [
          {
            "name": "_monitor_system",
            "complexity": 21,
            "lines_of_code": 61,
            "line_number": 253,
            "issues": [
              "High cyclomatic complexity: 21",
              "Too many lines of code: 61",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_shutdown_services",
            "complexity": 26,
            "lines_of_code": 73,
            "line_number": 405,
            "issues": [
              "High cyclomatic complexity: 26",
              "Too many lines of code: 73",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_shutdown_application_service",
            "complexity": 21,
            "lines_of_code": 57,
            "line_number": 551,
            "issues": [
              "High cyclomatic complexity: 21",
              "Too many lines of code: 57",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_drain_queues_and_connections",
            "complexity": 16,
            "lines_of_code": 49,
            "line_number": 647,
            "issues": [
              "High cyclomatic complexity: 16",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_graceful_process_termination",
            "complexity": 18,
            "lines_of_code": 47,
            "line_number": 775,
            "issues": [
              "High cyclomatic complexity: 18"
            ]
          },
          {
            "name": "main",
            "complexity": 17,
            "lines_of_code": 56,
            "line_number": 1031,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 56",
              "Deep nesting level: 6"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/final-system-validation.py",
        "violation_count": 6,
        "functions": [
          {
            "name": "_score_to_grade",
            "complexity": 21,
            "lines_of_code": 24,
            "line_number": 300,
            "issues": [
              "High cyclomatic complexity: 21",
              "Deep nesting level: 10"
            ]
          },
          {
            "name": "_generate_ai_insights",
            "complexity": 21,
            "lines_of_code": 36,
            "line_number": 325,
            "issues": [
              "High cyclomatic complexity: 21"
            ]
          },
          {
            "name": "_validate_reliability_excellence",
            "complexity": 17,
            "lines_of_code": 76,
            "line_number": 652,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 76"
            ]
          },
          {
            "name": "_validate_documentation_excellence",
            "complexity": 18,
            "lines_of_code": 75,
            "line_number": 964,
            "issues": [
              "High cyclomatic complexity: 18",
              "Too many lines of code: 75",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_validate_load_performance",
            "complexity": 17,
            "lines_of_code": 70,
            "line_number": 1135,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 70"
            ]
          },
          {
            "name": "main",
            "complexity": 29,
            "lines_of_code": 135,
            "line_number": 1372,
            "issues": [
              "High cyclomatic complexity: 29",
              "Too many lines of code: 135",
              "Deep nesting level: 5"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/localagi/workflows/self_improving_workflow_engine.py",
        "violation_count": 6,
        "functions": [
          {
            "name": "_calculate_performance_metrics",
            "complexity": 21,
            "lines_of_code": 44,
            "line_number": 334,
            "issues": [
              "High cyclomatic complexity: 21"
            ]
          },
          {
            "name": "_detect_performance_patterns",
            "complexity": 28,
            "lines_of_code": 53,
            "line_number": 399,
            "issues": [
              "High cyclomatic complexity: 28",
              "Too many lines of code: 53"
            ]
          },
          {
            "name": "_learn_parameter_optimizations",
            "complexity": 22,
            "lines_of_code": 51,
            "line_number": 453,
            "issues": [
              "High cyclomatic complexity: 22",
              "Too many lines of code: 51",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_should_adapt",
            "complexity": 17,
            "lines_of_code": 33,
            "line_number": 505,
            "issues": [
              "High cyclomatic complexity: 17"
            ]
          },
          {
            "name": "_apply_structural_adaptations",
            "complexity": 17,
            "lines_of_code": 35,
            "line_number": 587,
            "issues": [
              "High cyclomatic complexity: 17"
            ]
          },
          {
            "name": "add_performance_feedback",
            "complexity": 16,
            "lines_of_code": 44,
            "line_number": 647,
            "issues": [
              "High cyclomatic complexity: 16"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/localagi/engine/task_decomposer.py",
        "violation_count": 6,
        "functions": [
          {
            "name": "_select_decomposition_strategy",
            "complexity": 19,
            "lines_of_code": 42,
            "line_number": 262,
            "issues": [
              "High cyclomatic complexity: 19",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_generate_subtasks",
            "complexity": 16,
            "lines_of_code": 138,
            "line_number": 350,
            "issues": [
              "High cyclomatic complexity: 16",
              "Too many lines of code: 138",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_identify_optimizations",
            "complexity": 17,
            "lines_of_code": 45,
            "line_number": 629,
            "issues": [
              "High cyclomatic complexity: 17"
            ]
          },
          {
            "name": "_optimize_critical_path",
            "complexity": 19,
            "lines_of_code": 75,
            "line_number": 834,
            "issues": [
              "High cyclomatic complexity: 19",
              "Too many lines of code: 75"
            ]
          },
          {
            "name": "_optimize_resource_usage",
            "complexity": 21,
            "lines_of_code": 47,
            "line_number": 910,
            "issues": [
              "High cyclomatic complexity: 21"
            ]
          },
          {
            "name": "learn_from_execution_feedback",
            "complexity": 21,
            "lines_of_code": 53,
            "line_number": 958,
            "issues": [
              "High cyclomatic complexity: 21",
              "Too many lines of code: 53"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/multi-system-integration-framework.py",
        "violation_count": 5,
        "functions": [
          {
            "name": "_resolve_conflicts",
            "complexity": 17,
            "lines_of_code": 47,
            "line_number": 818,
            "issues": [
              "High cyclomatic complexity: 17",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_analyze_performance_trends",
            "complexity": 17,
            "lines_of_code": 58,
            "line_number": 1971,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 58"
            ]
          },
          {
            "name": "_generate_recommendations",
            "complexity": 20,
            "lines_of_code": 43,
            "line_number": 2167,
            "issues": [
              "High cyclomatic complexity: 20"
            ]
          },
          {
            "name": "_check_metric_anomaly",
            "complexity": 27,
            "lines_of_code": 75,
            "line_number": 2249,
            "issues": [
              "High cyclomatic complexity: 27",
              "Too many lines of code: 75",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "main",
            "complexity": 40,
            "lines_of_code": 165,
            "line_number": 2513,
            "issues": [
              "High cyclomatic complexity: 40",
              "Too many lines of code: 165",
              "Deep nesting level: 10"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/agents/hardware-resource-optimizer/app.py",
        "violation_count": 5,
        "functions": [
          {
            "name": "_analyze_storage",
            "complexity": 18,
            "lines_of_code": 67,
            "line_number": 216,
            "issues": [
              "High cyclomatic complexity: 18",
              "Too many lines of code: 67",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_optimize_storage_comprehensive",
            "complexity": 27,
            "lines_of_code": 89,
            "line_number": 443,
            "issues": [
              "High cyclomatic complexity: 27",
              "Too many lines of code: 89",
              "Deep nesting level: 9"
            ]
          },
          {
            "name": "_optimize_compress",
            "complexity": 17,
            "lines_of_code": 63,
            "line_number": 631,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 63",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_optimize_logs",
            "complexity": 26,
            "lines_of_code": 85,
            "line_number": 695,
            "issues": [
              "High cyclomatic complexity: 26",
              "Too many lines of code: 85",
              "Deep nesting level: 9"
            ]
          },
          {
            "name": "process_task",
            "complexity": 32,
            "lines_of_code": 74,
            "line_number": 1339,
            "issues": [
              "High cyclomatic complexity: 32",
              "Too many lines of code: 74",
              "Deep nesting level: 16"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/backend/data_governance/quality_monitor.py",
        "violation_count": 5,
        "functions": [
          {
            "name": "_perform_quality_assessment",
            "complexity": 18,
            "lines_of_code": 77,
            "line_number": 332,
            "issues": [
              "High cyclomatic complexity: 18",
              "Too many lines of code: 77",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_evaluate_quality_rule",
            "complexity": 18,
            "lines_of_code": 56,
            "line_number": 474,
            "issues": [
              "High cyclomatic complexity: 18",
              "Too many lines of code: 56",
              "Deep nesting level: 7"
            ]
          },
          {
            "name": "_evaluate_regex_rule",
            "complexity": 20,
            "lines_of_code": 38,
            "line_number": 556,
            "issues": [
              "High cyclomatic complexity: 20",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_evaluate_numeric_range_rule",
            "complexity": 22,
            "lines_of_code": 50,
            "line_number": 628,
            "issues": [
              "High cyclomatic complexity: 22",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "_evaluate_freshness_rule",
            "complexity": 20,
            "lines_of_code": 60,
            "line_number": 732,
            "issues": [
              "High cyclomatic complexity: 20",
              "Too many lines of code: 60",
              "Deep nesting level: 5"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/tests/test_enhanced_compliance_monitor.py",
        "violation_count": 4,
        "functions": [
          {
            "name": "test_system_metrics_collection",
            "complexity": 18,
            "lines_of_code": 11,
            "line_number": 210,
            "issues": [
              "High cyclomatic complexity: 18"
            ]
          },
          {
            "name": "test_compliance_check_integration",
            "complexity": 20,
            "lines_of_code": 23,
            "line_number": 339,
            "issues": [
              "High cyclomatic complexity: 20"
            ]
          },
          {
            "name": "test_system_integrity_validation",
            "complexity": 18,
            "lines_of_code": 17,
            "line_number": 533,
            "issues": [
              "High cyclomatic complexity: 18"
            ]
          },
          {
            "name": "test_individual_rule_checks",
            "complexity": 16,
            "lines_of_code": 20,
            "line_number": 716,
            "issues": [
              "High cyclomatic complexity: 16"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/tests/backend_hardware_integration_ultra_corrected_test.py",
        "violation_count": 4,
        "functions": [
          {
            "name": "test_data_transformation_analysis",
            "complexity": 22,
            "lines_of_code": 126,
            "line_number": 399,
            "issues": [
              "High cyclomatic complexity: 22",
              "Too many lines of code: 126"
            ]
          },
          {
            "name": "test_performance_analysis",
            "complexity": 18,
            "lines_of_code": 76,
            "line_number": 530,
            "issues": [
              "High cyclomatic complexity: 18",
              "Too many lines of code: 76"
            ]
          },
          {
            "name": "run_all_tests",
            "complexity": 23,
            "lines_of_code": 113,
            "line_number": 777,
            "issues": [
              "High cyclomatic complexity: 23",
              "Too many lines of code: 113"
            ]
          },
          {
            "name": "main",
            "complexity": 19,
            "lines_of_code": 72,
            "line_number": 891,
            "issues": [
              "High cyclomatic complexity: 19",
              "Too many lines of code: 72"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/tests/advanced_health_scenarios.py",
        "violation_count": 4,
        "functions": [
          {
            "name": "test_sustained_load",
            "complexity": 16,
            "lines_of_code": 78,
            "line_number": 98,
            "issues": [
              "High cyclomatic complexity: 16",
              "Too many lines of code: 78"
            ]
          },
          {
            "name": "test_memory_leak_detection",
            "complexity": 18,
            "lines_of_code": 69,
            "line_number": 177,
            "issues": [
              "High cyclomatic complexity: 18",
              "Too many lines of code: 69",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "test_service_restart_recovery",
            "complexity": 23,
            "lines_of_code": 85,
            "line_number": 361,
            "issues": [
              "High cyclomatic complexity: 23",
              "Too many lines of code: 85",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "test_edge_cases",
            "complexity": 19,
            "lines_of_code": 88,
            "line_number": 448,
            "issues": [
              "High cyclomatic complexity: 19",
              "Too many lines of code: 88",
              "Deep nesting level: 7"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/tests/comprehensive_test_report_final.py",
        "violation_count": 4,
        "functions": [
          {
            "name": "calculate_overall_system_score",
            "complexity": 17,
            "lines_of_code": 76,
            "line_number": 120,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 76"
            ]
          },
          {
            "name": "generate_recommendations",
            "complexity": 18,
            "lines_of_code": 49,
            "line_number": 197,
            "issues": [
              "High cyclomatic complexity: 18"
            ]
          },
          {
            "name": "generate_detailed_analysis",
            "complexity": 29,
            "lines_of_code": 84,
            "line_number": 247,
            "issues": [
              "High cyclomatic complexity: 29",
              "Too many lines of code: 84",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_generate_markdown_report",
            "complexity": 20,
            "lines_of_code": 93,
            "line_number": 400,
            "issues": [
              "High cyclomatic complexity: 20",
              "Too many lines of code: 93"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/tests/security/test_security_comprehensive.py",
        "violation_count": 4,
        "functions": [
          {
            "name": "test_session_management",
            "complexity": 16,
            "lines_of_code": 35,
            "line_number": 120,
            "issues": [
              "High cyclomatic complexity: 16"
            ]
          },
          {
            "name": "test_xss_protection",
            "complexity": 16,
            "lines_of_code": 41,
            "line_number": 255,
            "issues": [
              "High cyclomatic complexity: 16",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "test_file_upload_security",
            "complexity": 16,
            "lines_of_code": 44,
            "line_number": 384,
            "issues": [
              "High cyclomatic complexity: 16",
              "Deep nesting level: 5"
            ]
          },
          {
            "name": "test_security_headers_presence",
            "complexity": 16,
            "lines_of_code": 34,
            "line_number": 507,
            "issues": [
              "High cyclomatic complexity: 16",
              "Deep nesting level: 5"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/validate_ports.py",
        "violation_count": 4,
        "functions": [
          {
            "name": "extract_ports_from_compose",
            "complexity": 16,
            "lines_of_code": 32,
            "line_number": 246,
            "issues": [
              "High cyclomatic complexity: 16",
              "Deep nesting level: 10"
            ]
          },
          {
            "name": "validate_port_range",
            "complexity": 22,
            "lines_of_code": 57,
            "line_number": 295,
            "issues": [
              "High cyclomatic complexity: 22",
              "Too many lines of code: 57"
            ]
          },
          {
            "name": "validate_all",
            "complexity": 27,
            "lines_of_code": 103,
            "line_number": 385,
            "issues": [
              "High cyclomatic complexity: 27",
              "Too many lines of code: 103"
            ]
          },
          {
            "name": "fix_docker_compose",
            "complexity": 26,
            "lines_of_code": 64,
            "line_number": 506,
            "issues": [
              "High cyclomatic complexity: 26",
              "Too many lines of code: 64",
              "Deep nesting level: 9"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/requirements_analyzer.py",
        "violation_count": 4,
        "functions": [
          {
            "name": "parse_requirements_txt",
            "complexity": 22,
            "lines_of_code": 39,
            "line_number": 48,
            "issues": [
              "High cyclomatic complexity: 22",
              "Deep nesting level: 8"
            ]
          },
          {
            "name": "parse_pyproject_toml",
            "complexity": 17,
            "lines_of_code": 44,
            "line_number": 88,
            "issues": [
              "High cyclomatic complexity: 17",
              "Deep nesting level: 9"
            ]
          },
          {
            "name": "find_version_conflicts",
            "complexity": 16,
            "lines_of_code": 40,
            "line_number": 146,
            "issues": [
              "High cyclomatic complexity: 16"
            ]
          },
          {
            "name": "find_duplicate_files",
            "complexity": 22,
            "lines_of_code": 54,
            "line_number": 187,
            "issues": [
              "High cyclomatic complexity: 22",
              "Too many lines of code: 54"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/backend/oversight/compliance_reporter.py",
        "violation_count": 4,
        "functions": [
          {
            "name": "collect_compliance_metrics",
            "complexity": 16,
            "lines_of_code": 47,
            "line_number": 325,
            "issues": [
              "High cyclomatic complexity: 16",
              "Deep nesting level: 8"
            ]
          },
          {
            "name": "generate_compliance_report",
            "complexity": 22,
            "lines_of_code": 92,
            "line_number": 620,
            "issues": [
              "High cyclomatic complexity: 22",
              "Too many lines of code: 92",
              "Deep nesting level: 6"
            ]
          },
          {
            "name": "_generate_recommendations",
            "complexity": 42,
            "lines_of_code": 52,
            "line_number": 713,
            "issues": [
              "High cyclomatic complexity: 42",
              "Too many lines of code: 52"
            ]
          },
          {
            "name": "schedule_reports",
            "complexity": 18,
            "lines_of_code": 29,
            "line_number": 1157,
            "issues": [
              "High cyclomatic complexity: 18"
            ]
          }
        ]
      },
      {
        "file": "/opt/sutazaiapp/backend/tests/test_deployment_validation.py",
        "violation_count": 4,
        "functions": [
          {
            "name": "check_container_health",
            "complexity": 17,
            "lines_of_code": 54,
            "line_number": 80,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 54"
            ]
          },
          {
            "name": "parse_logs",
            "complexity": 21,
            "lines_of_code": 64,
            "line_number": 169,
            "issues": [
              "High cyclomatic complexity: 21",
              "Too many lines of code: 64"
            ]
          },
          {
            "name": "check_resource_usage",
            "complexity": 17,
            "lines_of_code": 60,
            "line_number": 255,
            "issues": [
              "High cyclomatic complexity: 17",
              "Too many lines of code: 60"
            ]
          },
          {
            "name": "generate_report",
            "complexity": 26,
            "lines_of_code": 91,
            "line_number": 344,
            "issues": [
              "High cyclomatic complexity: 26",
              "Too many lines of code: 91"
            ]
          }
        ]
      }
    ]
  },
  "all_high_complexity_functions": [
    {
      "file_path": "/opt/sutazaiapp/hardware_api_validation_test.py",
      "function_name": "_test_endpoint",
      "line_number": 196,
      "complexity": 19,
      "lines_of_code": 79,
      "parameters_count": 6,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test a single endpoint and record results",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 79"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/hardware_api_validation_test.py",
      "function_name": "_validate_response",
      "line_number": 276,
      "complexity": 20,
      "lines_of_code": 24,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Validate response data structure",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/hardware_api_validation_test.py",
      "function_name": "_generate_final_report",
      "line_number": 301,
      "complexity": 19,
      "lines_of_code": 55,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive validation report",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 55"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/ULTRA_DOCKERFILE_ANALYSIS.py",
      "function_name": "categorize_dockerfiles",
      "line_number": 98,
      "complexity": 29,
      "lines_of_code": 52,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Categorize Dockerfiles by purpose and technology",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 52",
        "Deep nesting level: 10"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/ultra_migration_test_suite.py",
      "function_name": "generate_report",
      "line_number": 448,
      "complexity": 19,
      "lines_of_code": 85,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive test report",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 85"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/scripts/consolidation_analysis.py",
      "function_name": "_extract_description",
      "line_number": 169,
      "complexity": 20,
      "lines_of_code": 32,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Extract script description from docstring or comments",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/scripts/update_dockerfiles.py",
      "function_name": "update_dockerfile",
      "line_number": 12,
      "complexity": 16,
      "lines_of_code": 61,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Update a single Dockerfile to use new requirements structure.",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 61"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/self-healing/api_server.py",
      "function_name": "update_config",
      "line_number": 247,
      "complexity": 19,
      "lines_of_code": 39,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Update configuration",
      "issues": [
        "High cyclomatic complexity: 19"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/self-healing/hygiene_orchestrator.py",
      "function_name": "_scan_and_heal",
      "line_number": 1010,
      "complexity": 16,
      "lines_of_code": 67,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Perform a scan and healing cycle",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 67"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/agent_health_dashboard.py",
      "function_name": "main",
      "line_number": 88,
      "complexity": 41,
      "lines_of_code": 229,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 41",
        "Too many lines of code: 229",
        "Missing docstring",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/test_accessibility.py",
      "function_name": "generate_accessibility_report",
      "line_number": 409,
      "complexity": 20,
      "lines_of_code": 63,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive accessibility report",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 63"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/test_runtime_issues.py",
      "function_name": "analyze_potential_runtime_issues",
      "line_number": 10,
      "complexity": 47,
      "lines_of_code": 165,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze code for potential runtime issues",
      "issues": [
        "High cyclomatic complexity: 47",
        "Too many lines of code: 165"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/test_caching_logic.py",
      "function_name": "test_caching_system",
      "line_number": 34,
      "complexity": 48,
      "lines_of_code": 213,
      "parameters_count": 0,
      "nested_functions": 15,
      "is_async": false,
      "docstring": "Test the caching system functionality",
      "issues": [
        "High cyclomatic complexity: 48",
        "Too many lines of code: 213"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/test_caching_logic.py",
      "function_name": "test_cache_size_management",
      "line_number": 121,
      "complexity": 20,
      "lines_of_code": 51,
      "parameters_count": 0,
      "nested_functions": 3,
      "is_async": false,
      "docstring": "Test cache size limits",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 51"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/test_optimization_debug.py",
      "function_name": "analyze_import_structure",
      "line_number": 81,
      "complexity": 17,
      "lines_of_code": 49,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze import structure of Python file",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/test_optimization_debug.py",
      "function_name": "analyze_optimization_features",
      "line_number": 189,
      "complexity": 28,
      "lines_of_code": 40,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze optimization features in app file",
      "issues": [
        "High cyclomatic complexity: 28"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/test_optimization_debug.py",
      "function_name": "run_comprehensive_debug",
      "line_number": 282,
      "complexity": 16,
      "lines_of_code": 91,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Run all debugging tests",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 91"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/app_optimized.py",
      "function_name": "render_optimized_sidebar",
      "line_number": 158,
      "complexity": 28,
      "lines_of_code": 132,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Render optimized sidebar with smart loading",
      "issues": [
        "High cyclomatic complexity: 28",
        "Too many lines of code: 132",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/app.py",
      "function_name": "render_navigation",
      "line_number": 90,
      "complexity": 24,
      "lines_of_code": 120,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Render modern sidebar navigation",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 120",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/workflows/code_improvement_workflow.py",
      "function_name": "analyze",
      "line_number": 299,
      "complexity": 21,
      "lines_of_code": 80,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze code from DevOps perspective",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 80"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/workflows/code_improvement_workflow.py",
      "function_name": "generate_report_text",
      "line_number": 523,
      "complexity": 18,
      "lines_of_code": 59,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate human-readable report",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 59"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/workflows/test_code_improvement.py",
      "function_name": "test_workflow",
      "line_number": 19,
      "complexity": 27,
      "lines_of_code": 154,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test the code improvement workflow via API",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 154",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/workflows/demo_workflow.py",
      "function_name": "demonstrate_workflow",
      "line_number": 23,
      "complexity": 29,
      "lines_of_code": 129,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Demonstrate the code improvement workflow",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 129",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/workflows/security_scan_workflow.py",
      "function_name": "_scan_for_secrets",
      "line_number": 140,
      "complexity": 23,
      "lines_of_code": 48,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Scan for hardcoded secrets and credentials",
      "issues": [
        "High cyclomatic complexity: 23",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/workflows/security_scan_workflow.py",
      "function_name": "_scan_docker_files",
      "line_number": 189,
      "complexity": 19,
      "lines_of_code": 59,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Scan Docker files for security issues",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 59"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/workflows/security_scan_workflow.py",
      "function_name": "generate_report",
      "line_number": 334,
      "complexity": 26,
      "lines_of_code": 79,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Generate a comprehensive security report",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 79",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_integration.py",
      "function_name": "test_agent_connection_pool_integration",
      "line_number": 129,
      "complexity": 16,
      "lines_of_code": 38,
      "parameters_count": 2,
      "nested_functions": 1,
      "is_async": true,
      "docstring": "Test agent integration with connection pool",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_integration.py",
      "function_name": "test_agent_circuit_breaker_integration",
      "line_number": 169,
      "complexity": 17,
      "lines_of_code": 41,
      "parameters_count": 2,
      "nested_functions": 1,
      "is_async": true,
      "docstring": "Test agent integration with circuit breaker",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_integration.py",
      "function_name": "test_multiple_agents_different_models",
      "line_number": 246,
      "complexity": 19,
      "lines_of_code": 57,
      "parameters_count": 2,
      "nested_functions": 2,
      "is_async": true,
      "docstring": "Test multiple agents using different models concurrently",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 57"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_integration.py",
      "function_name": "test_agent_backend_integration",
      "line_number": 356,
      "complexity": 21,
      "lines_of_code": 72,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test agent integration with backend coordinator",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 72"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_integration.py",
      "function_name": "test_full_system_workflow",
      "line_number": 430,
      "complexity": 19,
      "lines_of_code": 90,
      "parameters_count": 1,
      "nested_functions": 8,
      "is_async": true,
      "docstring": "Test complete system workflow from task receipt to completion",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 90"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_integration.py",
      "function_name": "test_agent_config_integration",
      "line_number": 526,
      "complexity": 19,
      "lines_of_code": 52,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test agent behavior with different configurations",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 52"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/execute_ultra_testing_strategy.py",
      "function_name": "run_infrastructure_tests",
      "line_number": 382,
      "complexity": 17,
      "lines_of_code": 94,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Run infrastructure stability tests",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 94"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/execute_ultra_testing_strategy.py",
      "function_name": "generate_report",
      "line_number": 873,
      "complexity": 21,
      "lines_of_code": 67,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive test report",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 67"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_failure_scenarios.py",
      "function_name": "test_agent_health_check_failures",
      "line_number": 413,
      "complexity": 17,
      "lines_of_code": 30,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test agent health check with various failure conditions",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_live_monitoring_validation.py",
      "function_name": "run_live_validation",
      "line_number": 317,
      "complexity": 22,
      "lines_of_code": 69,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Run live validation tests",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 69"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/dockerfile_security_validator.py",
      "function_name": "run_comprehensive_security_validation",
      "line_number": 508,
      "complexity": 19,
      "lines_of_code": 66,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Run comprehensive security validation.",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 66"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_monitoring_system_comprehensive.py",
      "function_name": "test_agent_health_status_mapping",
      "line_number": 165,
      "complexity": 16,
      "lines_of_code": 36,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test that Docker status strings are correctly mapped to health status",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_ollama_integration.py",
      "function_name": "run_comprehensive_test",
      "line_number": 269,
      "complexity": 20,
      "lines_of_code": 78,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Run comprehensive integration test",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 78"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/frontend_final_validation.py",
      "function_name": "validate_frontend_health",
      "line_number": 18,
      "complexity": 22,
      "lines_of_code": 145,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Complete frontend health validation",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 145"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_connection_pool.py",
      "function_name": "test_initialization",
      "line_number": 47,
      "complexity": 16,
      "lines_of_code": 10,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test pool initialization",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_connection_pool.py",
      "function_name": "test_get_stats",
      "line_number": 544,
      "complexity": 19,
      "lines_of_code": 22,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test statistics retrieval",
      "issues": [
        "High cyclomatic complexity: 19"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_connection_pool.py",
      "function_name": "test_pool_stats_defaults",
      "line_number": 643,
      "complexity": 21,
      "lines_of_code": 14,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test PoolStats default values",
      "issues": [
        "High cyclomatic complexity: 21"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/hardware_optimizer_load_runner.py",
      "function_name": "_analyze_load_test_results",
      "line_number": 110,
      "complexity": 19,
      "lines_of_code": 92,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze load test results for comprehensive insights",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 92"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/ultra_comprehensive_system_test_suite.py",
      "function_name": "test_container_security",
      "line_number": 336,
      "complexity": 16,
      "lines_of_code": 77,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test container security configurations",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 77"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_enhanced_compliance_monitor.py",
      "function_name": "test_system_metrics_collection",
      "line_number": 210,
      "complexity": 18,
      "lines_of_code": 11,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test system health metrics collection",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_enhanced_compliance_monitor.py",
      "function_name": "test_compliance_check_integration",
      "line_number": 339,
      "complexity": 20,
      "lines_of_code": 23,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test full compliance check integration",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_enhanced_compliance_monitor.py",
      "function_name": "test_system_integrity_validation",
      "line_number": 533,
      "complexity": 18,
      "lines_of_code": 17,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test comprehensive system integrity validation",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_enhanced_compliance_monitor.py",
      "function_name": "test_individual_rule_checks",
      "line_number": 716,
      "complexity": 16,
      "lines_of_code": 20,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test individual rule checks in isolation",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/dockerfile_performance_validator.py",
      "function_name": "run_concurrent_load_test",
      "line_number": 120,
      "complexity": 16,
      "lines_of_code": 85,
      "parameters_count": 6,
      "nested_functions": 1,
      "is_async": true,
      "docstring": "Run concurrent load test on a service.",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 85"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/dockerfile_performance_validator.py",
      "function_name": "validate_service_performance",
      "line_number": 311,
      "complexity": 36,
      "lines_of_code": 115,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Validate performance for multiple services.",
      "issues": [
        "High cyclomatic complexity: 36",
        "Too many lines of code: 115",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/dockerfile_consolidation_test_suite.py",
      "function_name": "test_security_compliance",
      "line_number": 129,
      "complexity": 18,
      "lines_of_code": 38,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test Dockerfile security compliance.",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/frontend_performance_ultra_test.py",
      "function_name": "_generate_validation_summary",
      "line_number": 332,
      "complexity": 36,
      "lines_of_code": 93,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate validation summary for claimed improvements",
      "issues": [
        "High cyclomatic complexity: 36",
        "Too many lines of code: 93"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/simplified_load_test.py",
      "function_name": "analyze_results",
      "line_number": 516,
      "complexity": 16,
      "lines_of_code": 64,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze all test results",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/master_dockerfile_validator.py",
      "function_name": "calculate_final_assessment",
      "line_number": 248,
      "complexity": 43,
      "lines_of_code": 121,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Calculate final assessment based on all validation results.",
      "issues": [
        "High cyclomatic complexity: 43",
        "Too many lines of code: 121"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_jwt_vulnerability_fix.py",
      "function_name": "check_jwt_service_file",
      "line_number": 10,
      "complexity": 32,
      "lines_of_code": 85,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check that jwt-service/main.py no longer has verify=False",
      "issues": [
        "High cyclomatic complexity: 32",
        "Too many lines of code: 85"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/backend_hardware_integration_ultra_corrected_test.py",
      "function_name": "test_data_transformation_analysis",
      "line_number": 399,
      "complexity": 22,
      "lines_of_code": 126,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze data transformation between hardware service and backend proxy",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 126"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/backend_hardware_integration_ultra_corrected_test.py",
      "function_name": "test_performance_analysis",
      "line_number": 530,
      "complexity": 18,
      "lines_of_code": 76,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Comprehensive performance analysis",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 76"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/backend_hardware_integration_ultra_corrected_test.py",
      "function_name": "run_all_tests",
      "line_number": 777,
      "complexity": 23,
      "lines_of_code": 113,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Execute complete ultra-corrected test suite",
      "issues": [
        "High cyclomatic complexity: 23",
        "Too many lines of code: 113"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/backend_hardware_integration_ultra_corrected_test.py",
      "function_name": "main",
      "line_number": 891,
      "complexity": 19,
      "lines_of_code": 72,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Execute the corrected integration test suite",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 72"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/qa_comprehensive_test_suite.py",
      "function_name": "_test_all_endpoints",
      "line_number": 167,
      "complexity": 21,
      "lines_of_code": 79,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test 2: All Endpoint Functionality",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 79",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/qa_comprehensive_test_suite.py",
      "function_name": "_test_security_vulnerabilities",
      "line_number": 247,
      "complexity": 21,
      "lines_of_code": 69,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test 3: Security Vulnerability Tests",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 69",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/qa_comprehensive_test_suite.py",
      "function_name": "_test_performance_requirements",
      "line_number": 317,
      "complexity": 17,
      "lines_of_code": 65,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test 4: Performance Tests (<200ms requirement)",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 65"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/qa_comprehensive_test_suite.py",
      "function_name": "_test_error_handling",
      "line_number": 471,
      "complexity": 18,
      "lines_of_code": 62,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test 6: Error Handling and Edge Cases",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 62",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/qa_comprehensive_test_suite.py",
      "function_name": "_test_integration_points",
      "line_number": 687,
      "complexity": 29,
      "lines_of_code": 64,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test 10: Integration Testing",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 64",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/qa_comprehensive_test_suite.py",
      "function_name": "_generate_final_report",
      "line_number": 770,
      "complexity": 21,
      "lines_of_code": 106,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive final test report",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 106"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/monitoring_system_validation.py",
      "function_name": "test_performance_monitoring_accuracy",
      "line_number": 280,
      "complexity": 25,
      "lines_of_code": 81,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test accuracy of performance monitoring",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 81"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_enhanced_detection.py",
      "function_name": "_get_container_info_enhanced",
      "line_number": 39,
      "complexity": 41,
      "lines_of_code": 101,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get Docker container information for an agent with enhanced matching",
      "issues": [
        "High cyclomatic complexity: 41",
        "Too many lines of code: 101",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/security_test_suite.py",
      "function_name": "test_input_validation",
      "line_number": 62,
      "complexity": 23,
      "lines_of_code": 134,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test input validation and sanitization",
      "issues": [
        "High cyclomatic complexity: 23",
        "Too many lines of code: 134"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/security_test_suite.py",
      "function_name": "_generate_security_summary",
      "line_number": 519,
      "complexity": 28,
      "lines_of_code": 100,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate security summary and score",
      "issues": [
        "High cyclomatic complexity: 28",
        "Too many lines of code: 100"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/advanced_health_scenarios.py",
      "function_name": "test_sustained_load",
      "line_number": 98,
      "complexity": 16,
      "lines_of_code": 78,
      "parameters_count": 2,
      "nested_functions": 1,
      "is_async": false,
      "docstring": "Test service under sustained load for extended period",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 78"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/advanced_health_scenarios.py",
      "function_name": "test_memory_leak_detection",
      "line_number": 177,
      "complexity": 18,
      "lines_of_code": 69,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test for memory leaks during extended operation",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 69",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/advanced_health_scenarios.py",
      "function_name": "test_service_restart_recovery",
      "line_number": 361,
      "complexity": 23,
      "lines_of_code": 85,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test service recovery after restart",
      "issues": [
        "High cyclomatic complexity: 23",
        "Too many lines of code: 85",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/advanced_health_scenarios.py",
      "function_name": "test_edge_cases",
      "line_number": 448,
      "complexity": 19,
      "lines_of_code": 88,
      "parameters_count": 1,
      "nested_functions": 1,
      "is_async": false,
      "docstring": "Test edge cases and boundary conditions",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 88",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/corrected_security_test.py",
      "function_name": "test_path_traversal_protection",
      "line_number": 17,
      "complexity": 26,
      "lines_of_code": 122,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test path traversal protection on vulnerable endpoints",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 122",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/system_baseline_test.py",
      "function_name": "test_databases",
      "line_number": 229,
      "complexity": 17,
      "lines_of_code": 62,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test database connectivity and basic operations",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 62"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_agent_detection_validation.py",
      "function_name": "test_health_status_parsing",
      "line_number": 94,
      "complexity": 17,
      "lines_of_code": 44,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test parsing of Docker health status strings",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_agent_detection_validation.py",
      "function_name": "test_combined_status_reporting",
      "line_number": 204,
      "complexity": 21,
      "lines_of_code": 69,
      "parameters_count": 3,
      "nested_functions": 1,
      "is_async": false,
      "docstring": "Test that Docker status and health checks are combined correctly",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 69"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_agent_detection_validation.py",
      "function_name": "_determine_final_status",
      "line_number": 399,
      "complexity": 23,
      "lines_of_code": 15,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Helper method to determine final agent status",
      "issues": [
        "High cyclomatic complexity: 23",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/comprehensive_test_report_final.py",
      "function_name": "calculate_overall_system_score",
      "line_number": 120,
      "complexity": 17,
      "lines_of_code": 76,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Calculate overall system score based on all test results",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 76"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/comprehensive_test_report_final.py",
      "function_name": "generate_recommendations",
      "line_number": 197,
      "complexity": 18,
      "lines_of_code": 49,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive recommendations based on all test results",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/comprehensive_test_report_final.py",
      "function_name": "generate_detailed_analysis",
      "line_number": 247,
      "complexity": 29,
      "lines_of_code": 84,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate detailed analysis of all test results",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 84",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/comprehensive_test_report_final.py",
      "function_name": "_generate_markdown_report",
      "line_number": 400,
      "complexity": 20,
      "lines_of_code": 93,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Generate markdown version of the final report",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 93"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/run_monitoring_validation.py",
      "function_name": "run_validation",
      "line_number": 60,
      "complexity": 35,
      "lines_of_code": 147,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Run complete validation suite",
      "issues": [
        "High cyclomatic complexity: 35",
        "Too many lines of code: 147",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/health_validation_comprehensive.py",
      "function_name": "test_performance_thresholds",
      "line_number": 442,
      "complexity": 16,
      "lines_of_code": 69,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test performance meets required thresholds",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 69"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_base_agent_v2.py",
      "function_name": "test_initialization",
      "line_number": 65,
      "complexity": 16,
      "lines_of_code": 10,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test agent initialization",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_base_agent_v2.py",
      "function_name": "test_agent_metrics_defaults",
      "line_number": 581,
      "complexity": 24,
      "lines_of_code": 16,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test AgentMetrics default values",
      "issues": [
        "High cyclomatic complexity: 24"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/ai_powered_test_suite.py",
      "function_name": "_generate_test_report",
      "line_number": 1174,
      "complexity": 20,
      "lines_of_code": 62,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate a comprehensive test report",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 62",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/ai_powered_test_suite.py",
      "function_name": "_generate_recommendations",
      "line_number": 1237,
      "complexity": 18,
      "lines_of_code": 26,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate recommendations based on test results",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/ai_powered_test_suite.py",
      "function_name": "_calculate_health_score",
      "line_number": 1264,
      "complexity": 18,
      "lines_of_code": 46,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Calculate overall system health score",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/backend_hardware_integration_ultra_test.py",
      "function_name": "run_all_tests",
      "line_number": 751,
      "complexity": 18,
      "lines_of_code": 91,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Run all ultra-comprehensive tests",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 91"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_resource_arbitration_agent.py",
      "function_name": "test_discover_system_resources",
      "line_number": 67,
      "complexity": 25,
      "lines_of_code": 24,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test system resource discovery",
      "issues": [
        "High cyclomatic complexity: 25"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/test_resource_arbitration_agent.py",
      "function_name": "test_full_resource_lifecycle",
      "line_number": 494,
      "complexity": 17,
      "lines_of_code": 84,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test complete resource allocation lifecycle",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 84",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/hardware_optimizer_ultra_test_suite.py",
      "function_name": "run_error_injection_tests",
      "line_number": 1206,
      "complexity": 18,
      "lines_of_code": 127,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Run error injection and recovery tests",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 127"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/frontend_stress_ultra_validation.py",
      "function_name": "extreme_load_test",
      "line_number": 35,
      "complexity": 16,
      "lines_of_code": 106,
      "parameters_count": 3,
      "nested_functions": 2,
      "is_async": false,
      "docstring": "Extreme concurrent load testing",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 106"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/frontend_stress_ultra_validation.py",
      "function_name": "_generate_stress_analysis",
      "line_number": 309,
      "complexity": 43,
      "lines_of_code": 102,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive stress test analysis",
      "issues": [
        "High cyclomatic complexity: 43",
        "Too many lines of code: 102"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/security/security_orchestrator.py",
      "function_name": "_check_system_health",
      "line_number": 301,
      "complexity": 22,
      "lines_of_code": 81,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Check health of all security systems",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 81"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/security/security_orchestrator.py",
      "function_name": "_scheduled_tasks_loop",
      "line_number": 558,
      "complexity": 19,
      "lines_of_code": 33,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Handle scheduled security tasks",
      "issues": [
        "High cyclomatic complexity: 19",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/freeze_prevention.py",
      "function_name": "_calculate_freeze_risk",
      "line_number": 270,
      "complexity": 37,
      "lines_of_code": 54,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Calculate system freeze risk score (0-100)",
      "issues": [
        "High cyclomatic complexity: 37",
        "Too many lines of code: 54"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/freeze_prevention.py",
      "function_name": "_determine_severity",
      "line_number": 350,
      "complexity": 25,
      "lines_of_code": 25,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Determine severity level based on system state",
      "issues": [
        "High cyclomatic complexity: 25"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/freeze_prevention.py",
      "function_name": "_execute_action",
      "line_number": 446,
      "complexity": 29,
      "lines_of_code": 62,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Execute a specific preventive action",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 62",
        "Deep nesting level: 14"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/system_performance_benchmark_suite.py",
      "function_name": "analyze_sla_compliance",
      "line_number": 745,
      "complexity": 16,
      "lines_of_code": 63,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze SLA compliance based on benchmark results",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 63"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/system_performance_benchmark_suite.py",
      "function_name": "generate_recommendations",
      "line_number": 809,
      "complexity": 24,
      "lines_of_code": 94,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate optimization recommendations based on benchmark results",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 94"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/system_performance_benchmark_suite.py",
      "function_name": "generate_markdown_report",
      "line_number": 1009,
      "complexity": 34,
      "lines_of_code": 154,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Generate detailed markdown report",
      "issues": [
        "High cyclomatic complexity: 34",
        "Too many lines of code: 154",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/enhanced-hygiene-backend.py",
      "function_name": "default",
      "line_number": 47,
      "complexity": 16,
      "lines_of_code": 42,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 16",
        "Missing docstring",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/enhanced-hygiene-backend.py",
      "function_name": "_safe_serialize",
      "line_number": 524,
      "complexity": 23,
      "lines_of_code": 60,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Safely serialize objects with circular reference and depth protection",
      "issues": [
        "High cyclomatic complexity: 23",
        "Too many lines of code: 60",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/ollama_performance_monitor.py",
      "function_name": "check_alerts",
      "line_number": 406,
      "complexity": 44,
      "lines_of_code": 74,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Check for alert conditions and send notifications.",
      "issues": [
        "High cyclomatic complexity: 44",
        "Too many lines of code: 74"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/websocket-cleanup-patch.py",
      "function_name": "broadcast_to_websockets_safe",
      "line_number": 67,
      "complexity": 16,
      "lines_of_code": 69,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Broadcast message to all WebSocket clients with better error handling",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 69"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/sutazai_realtime_monitor.py",
      "function_name": "print_summary",
      "line_number": 436,
      "complexity": 16,
      "lines_of_code": 52,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Print monitoring summary to console",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 52"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/continuous_performance_monitor.py",
      "function_name": "check_sla_violation",
      "line_number": 392,
      "complexity": 21,
      "lines_of_code": 65,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if a metric violates SLA",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 65"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/ollama_agent_monitor.py",
      "function_name": "_calculate_freeze_risk",
      "line_number": 612,
      "complexity": 29,
      "lines_of_code": 51,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Calculate system freeze risk score (0-100)",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 51"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/performance_forecasting_models.py",
      "function_name": "generate_recommendations",
      "line_number": 665,
      "complexity": 25,
      "lines_of_code": 58,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate actionable recommendations based on forecasts",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 58"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/comprehensive_report_generator.py",
      "function_name": "_generate_component_insights",
      "line_number": 242,
      "complexity": 24,
      "lines_of_code": 100,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate insights for a specific component metric",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 100"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/comprehensive_report_generator.py",
      "function_name": "generate_comprehensive_report",
      "line_number": 576,
      "complexity": 22,
      "lines_of_code": 102,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive performance report",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 102",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/service_health_checker.py",
      "function_name": "check_ollama_health",
      "line_number": 57,
      "complexity": 16,
      "lines_of_code": 84,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Check Ollama service health and available models",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 84",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/monitoring/service_health_checker.py",
      "function_name": "print_health_report",
      "line_number": 437,
      "complexity": 26,
      "lines_of_code": 63,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Print a formatted health report",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 63"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/test_cors_security.py",
      "function_name": "check_cors_configuration",
      "line_number": 10,
      "complexity": 25,
      "lines_of_code": 92,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if CORS is properly configured without wildcards",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 92"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/emergency-shutdown-coordinator.py",
      "function_name": "_monitor_system",
      "line_number": 253,
      "complexity": 21,
      "lines_of_code": 61,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Monitor system conditions for automatic shutdown triggers",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 61",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/emergency-shutdown-coordinator.py",
      "function_name": "_shutdown_services",
      "line_number": 405,
      "complexity": 26,
      "lines_of_code": 73,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Shutdown services in priority order",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 73",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/emergency-shutdown-coordinator.py",
      "function_name": "_shutdown_application_service",
      "line_number": 551,
      "complexity": 21,
      "lines_of_code": 57,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Shutdown application services",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 57",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/emergency-shutdown-coordinator.py",
      "function_name": "_drain_queues_and_connections",
      "line_number": 647,
      "complexity": 16,
      "lines_of_code": 49,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Drain message queues and close connections",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/emergency-shutdown-coordinator.py",
      "function_name": "_graceful_process_termination",
      "line_number": 775,
      "complexity": 18,
      "lines_of_code": 47,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Gracefully terminate remaining processes",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/emergency-shutdown-coordinator.py",
      "function_name": "main",
      "line_number": 1031,
      "complexity": 17,
      "lines_of_code": 56,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main entry point",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 56",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/validate-disaster-recovery.py",
      "function_name": "check_monitoring_systems",
      "line_number": 529,
      "complexity": 17,
      "lines_of_code": 69,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check monitoring systems",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 69"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/validate-disaster-recovery.py",
      "function_name": "_generate_recommendations",
      "line_number": 659,
      "complexity": 20,
      "lines_of_code": 32,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate recommendations based on check results",
      "issues": [
        "High cyclomatic complexity: 20",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/backup-coordinator.py",
      "function_name": "create_backup",
      "line_number": 253,
      "complexity": 19,
      "lines_of_code": 87,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Create a backup for the specified job",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 87",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/backup-coordinator.py",
      "function_name": "_verify_backup",
      "line_number": 557,
      "complexity": 16,
      "lines_of_code": 39,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Verify backup integrity",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/backup-coordinator.py",
      "function_name": "main",
      "line_number": 933,
      "complexity": 16,
      "lines_of_code": 49,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main entry point",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/point-in-time-recovery.py",
      "function_name": "_collect_system_state",
      "line_number": 272,
      "complexity": 17,
      "lines_of_code": 85,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Collect current system state information",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 85",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/point-in-time-recovery.py",
      "function_name": "_restore_data_snapshot",
      "line_number": 724,
      "complexity": 18,
      "lines_of_code": 67,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Restore data snapshot from recovery point",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 67",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/point-in-time-recovery.py",
      "function_name": "main",
      "line_number": 939,
      "complexity": 26,
      "lines_of_code": 107,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main entry point",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 107",
        "Deep nesting level: 10"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/disaster-recovery/disaster-recovery-test-suite.py",
      "function_name": "generate_report",
      "line_number": 1196,
      "complexity": 22,
      "lines_of_code": 93,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate disaster recovery test report",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 93"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/fusion/core/multi_modal_fusion_coordinator.py",
      "function_name": "_process_modality_independently",
      "line_number": 819,
      "complexity": 16,
      "lines_of_code": 62,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Process individual modality for late fusion",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 62",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/fusion/core/cross_modal_learning.py",
      "function_name": "train_cross_modal_alignment",
      "line_number": 491,
      "complexity": 20,
      "lines_of_code": 85,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Train cross-modal alignment using available learning strategies",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 85"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/fusion/core/cross_modal_learning.py",
      "function_name": "_validate_models",
      "line_number": 667,
      "complexity": 20,
      "lines_of_code": 67,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Validate trained models",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 67",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/fusion/visualization/fusion_visualizer.py",
      "function_name": "_render_representation_space",
      "line_number": 688,
      "complexity": 16,
      "lines_of_code": 111,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Render representation space visualization",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 111"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/fusion/visualization/fusion_visualizer.py",
      "function_name": "_render_debugging_tools",
      "line_number": 800,
      "complexity": 16,
      "lines_of_code": 109,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Render debugging tools tab",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 109"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/fusion/visualization/fusion_visualizer.py",
      "function_name": "_render_performance_analysis",
      "line_number": 910,
      "complexity": 16,
      "lines_of_code": 87,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Render performance analysis tab",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 87"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/security_audit_env/bin/pwiz.py",
      "function_name": "print_models",
      "line_number": 54,
      "complexity": 41,
      "lines_of_code": 94,
      "parameters_count": 6,
      "nested_functions": 1,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 41",
        "Too many lines of code: 94",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/security_audit_env/bin/pwiz.py",
      "function_name": "_print_table",
      "line_number": 73,
      "complexity": 34,
      "lines_of_code": 69,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 34",
        "Too many lines of code: 69",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/scripts/maintenance/fix_bare_except_clauses.py",
      "function_name": "analyze_bare_except",
      "line_number": 54,
      "complexity": 18,
      "lines_of_code": 65,
      "parameters_count": 3,
      "nested_functions": 2,
      "is_async": false,
      "docstring": "Analyze bare except clauses and determine appropriate fix.",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 65"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/scripts/maintenance/fix_bare_except_clauses.py",
      "function_name": "fix_file",
      "line_number": 120,
      "complexity": 56,
      "lines_of_code": 161,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Fix bare except clauses in a single file.",
      "issues": [
        "High cyclomatic complexity: 56",
        "Too many lines of code: 161",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/scripts/lib/security_utils.py",
      "function_name": "fix_infinite_loops",
      "line_number": 140,
      "complexity": 18,
      "lines_of_code": 102,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Fix infinite loops by adding timeout mechanisms and signal handlers.\n\nArgs:\n    script_path: Path to the shell script\n    backup: Whether to create a backup before fixing\n    \nReturns:\n    True if fixes were applied, False otherwise",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 102",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/scripts/testing/verify_exception_handling.py",
      "function_name": "check_file",
      "line_number": 30,
      "complexity": 28,
      "lines_of_code": 71,
      "parameters_count": 2,
      "nested_functions": 3,
      "is_async": false,
      "docstring": "Check a single Python file for exception handling issues.",
      "issues": [
        "High cyclomatic complexity: 28",
        "Too many lines of code: 71",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/scripts/testing/verify_exception_handling.py",
      "function_name": "verify_codebase",
      "line_number": 102,
      "complexity": 23,
      "lines_of_code": 82,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Verify exception handling across the entire codebase.",
      "issues": [
        "High cyclomatic complexity: 23",
        "Too many lines of code: 82",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/self-healing/scripts/predictive-monitoring.py",
      "function_name": "predict_service_failure",
      "line_number": 315,
      "complexity": 21,
      "lines_of_code": 56,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Predict if a service is likely to fail\nReturns: (likely_to_fail, failure_probability, contributing_factors)",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 56"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/self-healing/graceful-degradation/feature_flags.py",
      "function_name": "is_enabled",
      "line_number": 288,
      "complexity": 17,
      "lines_of_code": 30,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if feature flag is enabled",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/components/performance_optimized.py",
      "function_name": "render_performance_monitor",
      "line_number": 208,
      "complexity": 18,
      "lines_of_code": 47,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Render performance monitoring dashboard",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/utils/optimized_api_client.py",
      "function_name": "call_api",
      "line_number": 140,
      "complexity": 29,
      "lines_of_code": 65,
      "parameters_count": 6,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Optimized single API call with caching and error handling\n\nArgs:\n    endpoint: API endpoint path\n    method: HTTP method\n    data: Request data\n    timeout: Request timeout\n    use_cache: Whether to use caching",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 65",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/pages/system/agent_control.py",
      "function_name": "show_agent_control",
      "line_number": 17,
      "complexity": 36,
      "lines_of_code": 126,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Agent Control Center with management capabilities",
      "issues": [
        "High cyclomatic complexity: 36",
        "Too many lines of code: 126",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/pages/system/agent_control.py",
      "function_name": "show_agent_card",
      "line_number": 144,
      "complexity": 21,
      "lines_of_code": 61,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Display individual agent card with controls",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 61",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/pages/system/hardware_optimization.py",
      "function_name": "show_hardware_optimization",
      "line_number": 31,
      "complexity": 88,
      "lines_of_code": 547,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Ultra-comprehensive hardware optimization UI with all integration tests",
      "issues": [
        "High cyclomatic complexity: 88",
        "Too many lines of code: 547",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/pages/dashboard/main_dashboard.py",
      "function_name": "show_dashboard",
      "line_number": 24,
      "complexity": 24,
      "lines_of_code": 148,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main dashboard page with system overview and key metrics",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 148",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/frontend/pages/ai_services/ai_chat.py",
      "function_name": "show_ai_chat",
      "line_number": 17,
      "complexity": 32,
      "lines_of_code": 217,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "AI Chat interface with enhanced features",
      "issues": [
        "High cyclomatic complexity: 32",
        "Too many lines of code: 217",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/deployment/monitoring/agent-monitor/monitor.py",
      "function_name": "get_agents_status",
      "line_number": 145,
      "complexity": 20,
      "lines_of_code": 109,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Get comprehensive status of all AI agents",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 109",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/deployment/autoscaling/swarm/swarm-autoscaler.py",
      "function_name": "get_custom_metrics",
      "line_number": 248,
      "complexity": 17,
      "lines_of_code": 29,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Get custom metrics for a service",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/deployment/autoscaling/swarm/swarm-autoscaler.py",
      "function_name": "determine_scale_action",
      "line_number": 297,
      "complexity": 39,
      "lines_of_code": 60,
      "parameters_count": 6,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Determine if service should be scaled up (+1), down (-1), or not at all (0)",
      "issues": [
        "High cyclomatic complexity: 39",
        "Too many lines of code: 60"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/docker/browser-use/browser_use_server.py",
      "function_name": "_execute_sync_task",
      "line_number": 116,
      "complexity": 19,
      "lines_of_code": 80,
      "parameters_count": 7,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Execute synchronous browser task",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 80",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/docker/langchain-agents/langchain_agent_server.py",
      "function_name": "safe_calculate",
      "line_number": 25,
      "complexity": 25,
      "lines_of_code": 81,
      "parameters_count": 1,
      "nested_functions": 1,
      "is_async": false,
      "docstring": "Secure mathematical calculator using AST parsing.\nReplaces the dangerous eval() function with safe mathematical evaluation.\n\nArgs:\n    expression: Mathematical expression as string\n    \nReturns:\n    String result of calculation or error message",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 81",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/docker/task-assignment-coordinator/app.py",
      "function_name": "find_best_agent",
      "line_number": 236,
      "complexity": 18,
      "lines_of_code": 36,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Find the best agent for a task",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/docker/code-improver/code_improver.py",
      "function_name": "improve_code",
      "line_number": 117,
      "complexity": 26,
      "lines_of_code": 87,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Trigger autonomous code improvement",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 87",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/hygiene/test-all-rule-combinations.py",
      "function_name": "run_comprehensive_test_suite",
      "line_number": 517,
      "complexity": 26,
      "lines_of_code": 117,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Run the complete test suite",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 117",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/load/test-ollama-high-concurrency.py",
      "function_name": "print_metrics_report",
      "line_number": 444,
      "complexity": 21,
      "lines_of_code": 63,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Print a comprehensive metrics report.",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 63"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/load/load_test_runner.py",
      "function_name": "_generate_summary_report",
      "line_number": 365,
      "complexity": 19,
      "lines_of_code": 67,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate human-readable summary report.",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 67",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/load/load_test_runner.py",
      "function_name": "_generate_recommendations",
      "line_number": 433,
      "complexity": 25,
      "lines_of_code": 41,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate performance recommendations based on test results.",
      "issues": [
        "High cyclomatic complexity: 25"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/security/test_xss_protection.py",
      "function_name": "test_csp_header_generation",
      "line_number": 220,
      "complexity": 17,
      "lines_of_code": 21,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test Content Security Policy header generation",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/security/test-authentication.py",
      "function_name": "main",
      "line_number": 491,
      "complexity": 17,
      "lines_of_code": 70,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Main test function",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 70"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/security/test_security_comprehensive.py",
      "function_name": "test_session_management",
      "line_number": 120,
      "complexity": 16,
      "lines_of_code": 35,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test session management security.",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/security/test_security_comprehensive.py",
      "function_name": "test_xss_protection",
      "line_number": 255,
      "complexity": 16,
      "lines_of_code": 41,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test Cross-Site Scripting (XSS) protection.",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/security/test_security_comprehensive.py",
      "function_name": "test_file_upload_security",
      "line_number": 384,
      "complexity": 16,
      "lines_of_code": 44,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test file upload security.",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/security/test_security_comprehensive.py",
      "function_name": "test_security_headers_presence",
      "line_number": 507,
      "complexity": 16,
      "lines_of_code": 34,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test presence of security headers.",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/integration/test-ollama-integration.py",
      "function_name": "run_integration_tests",
      "line_number": 185,
      "complexity": 20,
      "lines_of_code": 110,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Run complete integration tests",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 110"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/health/test_service_health.py",
      "function_name": "test_backend_detailed_health_info",
      "line_number": 289,
      "complexity": 17,
      "lines_of_code": 27,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test backend detailed health information.",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/health/test_service_health.py",
      "function_name": "test_health_check_alerting_thresholds",
      "line_number": 620,
      "complexity": 19,
      "lines_of_code": 37,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test health check alerting thresholds.",
      "issues": [
        "High cyclomatic complexity: 19"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/tests/health/test_service_health.py",
      "function_name": "test_health_check_dashboard_integration",
      "line_number": 658,
      "complexity": 27,
      "lines_of_code": 73,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test health check dashboard integration.",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 73",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/IMPORTANT/00_inventory/generate_inventory.py",
      "function_name": "extract_archive",
      "line_number": 108,
      "complexity": 21,
      "lines_of_code": 59,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 59",
        "Missing docstring",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/IMPORTANT/00_inventory/generate_inventory.py",
      "function_name": "generate_inventory",
      "line_number": 185,
      "complexity": 21,
      "lines_of_code": 93,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 93",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/models/optimization/optimization_orchestrator.py",
      "function_name": "_analyze_model_usage",
      "line_number": 162,
      "complexity": 17,
      "lines_of_code": 38,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze how models are used across agents",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/models/optimization/quantization.py",
      "function_name": "collect_statistics",
      "line_number": 83,
      "complexity": 18,
      "lines_of_code": 63,
      "parameters_count": 3,
      "nested_functions": 2,
      "is_async": false,
      "docstring": "Collect statistics for quantization calibration",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 63"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/models/optimization/ab_testing.py",
      "function_name": "generate_experiment_report",
      "line_number": 776,
      "complexity": 24,
      "lines_of_code": 65,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate a comprehensive experiment report",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 65"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/models/optimization/performance_benchmarking.py",
      "function_name": "get_request_rate",
      "line_number": 227,
      "complexity": 30,
      "lines_of_code": 53,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get current request rate based on load pattern",
      "issues": [
        "High cyclomatic complexity: 30",
        "Too many lines of code: 53",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/models/optimization/ensemble_optimization.py",
      "function_name": "_calculate_confidence",
      "line_number": 187,
      "complexity": 19,
      "lines_of_code": 46,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Calculate confidence score for the response",
      "issues": [
        "High cyclomatic complexity: 19"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/security/defense-in-depth/network_security.py",
      "function_name": "_apply_firewall_rule",
      "line_number": 183,
      "complexity": 20,
      "lines_of_code": 38,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Apply individual firewall rule",
      "issues": [
        "High cyclomatic complexity: 20",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/security/compliance/compliance_automation.py",
      "function_name": "_collect_evidence",
      "line_number": 441,
      "complexity": 16,
      "lines_of_code": 29,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Collect evidence for control",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/security/incident-response/incident_response.py",
      "function_name": "_execute_response_action",
      "line_number": 367,
      "complexity": 24,
      "lines_of_code": 51,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Execute specific response action",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 51",
        "Deep nesting level: 10"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/security/incident-response/incident_response.py",
      "function_name": "_collect_memory_dump",
      "line_number": 759,
      "complexity": 19,
      "lines_of_code": 84,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Collect memory dump for critical incidents",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 84",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/apply_security_fixes.py",
      "function_name": "fix_script_security",
      "line_number": 31,
      "complexity": 35,
      "lines_of_code": 194,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Apply comprehensive security fixes to a shell script.\n\nArgs:\n    script_path: Path to the shell script\n    dry_run: If True, only analyze without making changes\n    \nReturns:\n    Dictionary with fix results",
      "issues": [
        "High cyclomatic complexity: 35",
        "Too many lines of code: 194",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/consolidation_analysis.py",
      "function_name": "_extract_description",
      "line_number": 169,
      "complexity": 20,
      "lines_of_code": 32,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Extract script description from docstring or comments",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/update_dockerfiles.py",
      "function_name": "update_dockerfile",
      "line_number": 12,
      "complexity": 16,
      "lines_of_code": 61,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Update a single Dockerfile to use new requirements structure.",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 61"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-script-organization.py",
      "function_name": "check_script_location",
      "line_number": 51,
      "complexity": 23,
      "lines_of_code": 43,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if script is in appropriate location.",
      "issues": [
        "High cyclomatic complexity: 23"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-script-organization.py",
      "function_name": "check_script_header",
      "line_number": 120,
      "complexity": 21,
      "lines_of_code": 50,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if script has proper header.",
      "issues": [
        "High cyclomatic complexity: 21"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-directory-duplication.py",
      "function_name": "find_duplicate_patterns",
      "line_number": 19,
      "complexity": 16,
      "lines_of_code": 50,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Find directories that might be duplicates based on naming patterns.",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-directory-duplication.py",
      "function_name": "check_specific_duplications",
      "line_number": 95,
      "complexity": 17,
      "lines_of_code": 34,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check for specific known duplication patterns.",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-docker-structure.py",
      "function_name": "check_dockerfile",
      "line_number": 20,
      "complexity": 24,
      "lines_of_code": 67,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check Dockerfile for best practices and structure.",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 67"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-docker-structure.py",
      "function_name": "check_docker_compose",
      "line_number": 88,
      "complexity": 25,
      "lines_of_code": 82,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check docker-compose.yml for structure and best practices.",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 82",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-docker-structure.py",
      "function_name": "main",
      "line_number": 206,
      "complexity": 19,
      "lines_of_code": 51,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main function to validate Docker structure.",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 51"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/quick-system-check.py",
      "function_name": "check_import_integrity",
      "line_number": 27,
      "complexity": 19,
      "lines_of_code": 39,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check that all Python imports are resolvable.",
      "issues": [
        "High cyclomatic complexity: 19",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/quick-system-check.py",
      "function_name": "check_dependencies",
      "line_number": 96,
      "complexity": 16,
      "lines_of_code": 31,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check that dependency files are consistent.",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-garbage-files.py",
      "function_name": "main",
      "line_number": 164,
      "complexity": 25,
      "lines_of_code": 60,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main function to check for garbage files.",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 60",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-safe-deletion.py",
      "function_name": "main",
      "line_number": 209,
      "complexity": 17,
      "lines_of_code": 67,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main function to check deletion safety.",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 67"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-python-docs.py",
      "function_name": "check_file_header",
      "line_number": 98,
      "complexity": 17,
      "lines_of_code": 47,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check for proper file header and imports.",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-python-docs.py",
      "function_name": "main",
      "line_number": 164,
      "complexity": 21,
      "lines_of_code": 78,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main function to check Python documentation.",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 78"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-deployment-scripts.py",
      "function_name": "check_deployment_script_quality",
      "line_number": 102,
      "complexity": 26,
      "lines_of_code": 40,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check the quality of the canonical deployment script.",
      "issues": [
        "High cyclomatic complexity: 26"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/pre-commit/check-doc-structure.py",
      "function_name": "check_doc_structure",
      "line_number": 79,
      "complexity": 20,
      "lines_of_code": 48,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check internal documentation structure.",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/hygiene-system-orchestrator.py",
      "function_name": "check_service_health",
      "line_number": 68,
      "complexity": 23,
      "lines_of_code": 81,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Comprehensive health check for a service",
      "issues": [
        "High cyclomatic complexity: 23",
        "Too many lines of code: 81",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/hygiene-system-orchestrator.py",
      "function_name": "_perform_health_checks",
      "line_number": 482,
      "complexity": 16,
      "lines_of_code": 59,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Perform health checks on all services",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 59",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/update-agent-auth.py",
      "function_name": "update_docker_compose_env",
      "line_number": 244,
      "complexity": 19,
      "lines_of_code": 64,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Update docker-compose.yml with authentication environment variables",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 64",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/update_approved_ports.py",
      "function_name": "update_docker_compose",
      "line_number": 45,
      "complexity": 16,
      "lines_of_code": 50,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Update docker-compose.yml to use only approved ports",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/demo-hygiene-tests.py",
      "function_name": "main",
      "line_number": 13,
      "complexity": 23,
      "lines_of_code": 170,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 23",
        "Too many lines of code: 170",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/safe-requirements-cleanup.py",
      "function_name": "_classify_requirements_type",
      "line_number": 103,
      "complexity": 18,
      "lines_of_code": 23,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Classify the type of requirements file",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/safe-requirements-cleanup.py",
      "function_name": "analyze_duplicates_and_redundancy",
      "line_number": 127,
      "complexity": 27,
      "lines_of_code": 84,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze duplicate and redundant requirements files",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 84",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/optimize-agent-utilization.py",
      "function_name": "main",
      "line_number": 681,
      "complexity": 24,
      "lines_of_code": 93,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main optimization execution function",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 93"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/bottleneck-eliminator.py",
      "function_name": "_detect_bottlenecks",
      "line_number": 729,
      "complexity": 17,
      "lines_of_code": 35,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Detect current bottlenecks",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/fix-memory-limits.py",
      "function_name": "update_compose_file",
      "line_number": 114,
      "complexity": 29,
      "lines_of_code": 68,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Update docker-compose file with memory limits",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 68",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/consolidate_requirements.py",
      "function_name": "categorize_file",
      "line_number": 32,
      "complexity": 17,
      "lines_of_code": 13,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Categorize requirements file by location",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/advanced-rollback-system.py",
      "function_name": "_execute_rollback_step",
      "line_number": 967,
      "complexity": 27,
      "lines_of_code": 33,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Execute individual rollback step",
      "issues": [
        "High cyclomatic complexity: 27",
        "Deep nesting level: 13"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/advanced-rollback-system.py",
      "function_name": "main",
      "line_number": 1389,
      "complexity": 25,
      "lines_of_code": 133,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Main entry point",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 133",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/maintenance/optimize-ollama-performance.py",
      "function_name": "_generate_final_recommendations",
      "line_number": 206,
      "complexity": 27,
      "lines_of_code": 87,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Generate final optimization recommendations",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 87"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/dockerfile-consolidation/execute_consolidation.py",
      "function_name": "_determine_category",
      "line_number": 84,
      "complexity": 47,
      "lines_of_code": 35,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Determine the category/template type for a Dockerfile.",
      "issues": [
        "High cyclomatic complexity: 47",
        "Deep nesting level: 10"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/deployment/optimize-load-balancing.py",
      "function_name": "get_service_type",
      "line_number": 42,
      "complexity": 35,
      "lines_of_code": 31,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Determine service type from name and tags.",
      "issues": [
        "High cyclomatic complexity: 35",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/deployment/migrate-agents-to-ollama.py",
      "function_name": "update_agent_imports",
      "line_number": 79,
      "complexity": 17,
      "lines_of_code": 62,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Update agent to use BaseAgent",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 62"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/deployment/migrate_agent_ports.py",
      "function_name": "migrate_compose_file",
      "line_number": 101,
      "complexity": 24,
      "lines_of_code": 90,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Migrate ports in a single docker-compose file.",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 90",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/deployment/deployment-monitor.py",
      "function_name": "check_rollback_conditions",
      "line_number": 289,
      "complexity": 20,
      "lines_of_code": 33,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if any rollback conditions are met",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/deployment/service-mesh-orchestrator.py",
      "function_name": "configure_kong_gateway",
      "line_number": 155,
      "complexity": 17,
      "lines_of_code": 95,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Configure Kong API Gateway",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 95",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/deployment/ultimate-deployment-master.py",
      "function_name": "main",
      "line_number": 1065,
      "complexity": 21,
      "lines_of_code": 113,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Main entry point",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 113",
        "Deep nesting level: 9"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/deployment/manage-environments.py",
      "function_name": "get_backend_status",
      "line_number": 109,
      "complexity": 18,
      "lines_of_code": 38,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get current backend status from HAProxy",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/lib/security_utils.py",
      "function_name": "fix_infinite_loops",
      "line_number": 140,
      "complexity": 18,
      "lines_of_code": 102,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Fix infinite loops by adding timeout mechanisms and signal handlers.\n\nArgs:\n    script_path: Path to the shell script\n    backup: Whether to create a backup before fixing\n    \nReturns:\n    True if fixes were applied, False otherwise",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 102",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/master/test-master.py",
      "function_name": "main",
      "line_number": 269,
      "complexity": 18,
      "lines_of_code": 55,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 55",
        "Missing docstring",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/master/health-master.py",
      "function_name": "generate_health_summary",
      "line_number": 407,
      "complexity": 16,
      "lines_of_code": 52,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive health summary",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 52"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/master/health-master.py",
      "function_name": "generate_report",
      "line_number": 505,
      "complexity": 16,
      "lines_of_code": 80,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive health report",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 80"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/master/health-master.py",
      "function_name": "main",
      "line_number": 587,
      "complexity": 30,
      "lines_of_code": 127,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main entry point with comprehensive CLI",
      "issues": [
        "High cyclomatic complexity: 30",
        "Too many lines of code: 127",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/onboarding/generate_kickoff_deck.py",
      "function_name": "main",
      "line_number": 21,
      "complexity": 33,
      "lines_of_code": 57,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 33",
        "Too many lines of code: 57",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/dockerfile-dedup/ultra-dockerfile-migration.py",
      "function_name": "detect_dockerfile_type",
      "line_number": 36,
      "complexity": 21,
      "lines_of_code": 31,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Detect if Dockerfile is Python, Node.js, or other",
      "issues": [
        "High cyclomatic complexity: 21",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/security/validate_cors_ultra.py",
      "function_name": "main",
      "line_number": 144,
      "complexity": 21,
      "lines_of_code": 132,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Main validation function",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 132"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/security/validate_cors_simple.py",
      "function_name": "scan_python_files_for_wildcards",
      "line_number": 78,
      "complexity": 23,
      "lines_of_code": 66,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Scan Python files for CORS wildcard configurations",
      "issues": [
        "High cyclomatic complexity: 23",
        "Too many lines of code: 66",
        "Deep nesting level: 10"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/security/fix_cors_wildcards.py",
      "function_name": "get_service_type",
      "line_number": 101,
      "complexity": 21,
      "lines_of_code": 14,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Determine service type based on file path",
      "issues": [
        "High cyclomatic complexity: 21"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/security/fix_cors_wildcards.py",
      "function_name": "fix_cors_file",
      "line_number": 117,
      "complexity": 18,
      "lines_of_code": 84,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Fix CORS wildcard in a single file",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 84",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/security/ultra_security_validation.py",
      "function_name": "check_secrets_management",
      "line_number": 170,
      "complexity": 23,
      "lines_of_code": 45,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check for hardcoded secrets",
      "issues": [
        "High cyclomatic complexity: 23",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/security/ultra_security_validation.py",
      "function_name": "generate_report",
      "line_number": 216,
      "complexity": 17,
      "lines_of_code": 72,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive security report",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 72"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/test_gpu_detection.py",
      "function_name": "test_nvidia_smi_paths",
      "line_number": 14,
      "complexity": 17,
      "lines_of_code": 65,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test various nvidia-smi paths",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 65",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/test_gpu_detection.py",
      "function_name": "test_alternative_methods",
      "line_number": 111,
      "complexity": 17,
      "lines_of_code": 59,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test alternative GPU detection methods",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 59"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/validate_ports.py",
      "function_name": "extract_ports_from_compose",
      "line_number": 246,
      "complexity": 16,
      "lines_of_code": 32,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Extract port mappings from a docker-compose file.",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 10"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/validate_ports.py",
      "function_name": "validate_port_range",
      "line_number": 295,
      "complexity": 22,
      "lines_of_code": 57,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Validate if a port is in the correct range for its service type.",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 57"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/validate_ports.py",
      "function_name": "validate_all",
      "line_number": 385,
      "complexity": 27,
      "lines_of_code": 103,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Run complete validation across all docker-compose files.",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 103"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/validate_ports.py",
      "function_name": "fix_docker_compose",
      "line_number": 506,
      "complexity": 26,
      "lines_of_code": 64,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Suggest fixes for a docker-compose file.",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 64",
        "Deep nesting level: 9"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/validate_agents.py",
      "function_name": "validate_agent_file",
      "line_number": 25,
      "complexity": 29,
      "lines_of_code": 64,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Validate a single agent file",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/verify-hygiene-monitoring-system.py",
      "function_name": "_test_http_endpoint",
      "line_number": 299,
      "complexity": 17,
      "lines_of_code": 78,
      "parameters_count": 8,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test a single HTTP endpoint",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 78",
        "Too many parameters: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/verify-hygiene-monitoring-system.py",
      "function_name": "_test_real_violations_data",
      "line_number": 431,
      "complexity": 17,
      "lines_of_code": 65,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test that violations data is real, not mock",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 65"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/verify-hygiene-monitoring-system.py",
      "function_name": "generate_summary_report",
      "line_number": 569,
      "complexity": 17,
      "lines_of_code": 49,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive summary report",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/test_hardware_optimizer_detection.py",
      "function_name": "test_hardware_optimizer_detection",
      "line_number": 22,
      "complexity": 27,
      "lines_of_code": 69,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test the hardware-resource-optimizer detection specifically",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 69",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/deduplication-validator.py",
      "function_name": "generate_recommendations",
      "line_number": 509,
      "complexity": 19,
      "lines_of_code": 23,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate recommendations based on test results.",
      "issues": [
        "High cyclomatic complexity: 19"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/validate-complete-system.py",
      "function_name": "_generate_validation_report",
      "line_number": 1151,
      "complexity": 17,
      "lines_of_code": 48,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive validation report",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/validate-complete-system.py",
      "function_name": "_generate_recommendations",
      "line_number": 1200,
      "complexity": 20,
      "lines_of_code": 37,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate recommendations based on validation results",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/validate-complete-system.py",
      "function_name": "main",
      "line_number": 1251,
      "complexity": 25,
      "lines_of_code": 97,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Main validation entry point",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 97",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/testing/validate_security_remediation.py",
      "function_name": "check_authentication_security",
      "line_number": 139,
      "complexity": 17,
      "lines_of_code": 31,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check authentication and authorization security",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/container-health-monitor.py",
      "function_name": "check_container_health",
      "line_number": 104,
      "complexity": 21,
      "lines_of_code": 64,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Comprehensive container health check",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/container-health-monitor.py",
      "function_name": "monitor_containers",
      "line_number": 217,
      "complexity": 22,
      "lines_of_code": 88,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main monitoring loop",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 88",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/comprehensive_monitor_validation.py",
      "function_name": "_validate_metric_value",
      "line_number": 260,
      "complexity": 23,
      "lines_of_code": 21,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Validate individual metric value",
      "issues": [
        "High cyclomatic complexity: 23"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_handle_keyboard_input",
      "line_number": 155,
      "complexity": 22,
      "lines_of_code": 29,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Handle keyboard shortcuts for timer control",
      "issues": [
        "High cyclomatic complexity: 22",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "get_ai_agents_status",
      "line_number": 423,
      "complexity": 33,
      "lines_of_code": 118,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get AI agent status with parallel health monitoring for better performance",
      "issues": [
        "High cyclomatic complexity: 33",
        "Too many lines of code: 118",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_check_agent_health",
      "line_number": 542,
      "complexity": 49,
      "lines_of_code": 122,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check individual agent health with enhanced response time measurement",
      "issues": [
        "High cyclomatic complexity: 49",
        "Too many lines of code: 122",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_parse_health_response",
      "line_number": 665,
      "complexity": 18,
      "lines_of_code": 31,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Parse health response to determine detailed status",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_get_agent_endpoint",
      "line_number": 697,
      "complexity": 31,
      "lines_of_code": 74,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Determine agent endpoint for health checks with enhanced detection",
      "issues": [
        "High cyclomatic complexity: 31",
        "Too many lines of code: 74",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_get_container_info",
      "line_number": 772,
      "complexity": 41,
      "lines_of_code": 100,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get Docker container information for an agent with enhanced matching",
      "issues": [
        "High cyclomatic complexity: 41",
        "Too many lines of code: 100",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_is_agent_deployed",
      "line_number": 1064,
      "complexity": 20,
      "lines_of_code": 43,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if agent is actually deployed (running as process or container)",
      "issues": [
        "High cyclomatic complexity: 20",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_get_display_name",
      "line_number": 1108,
      "complexity": 17,
      "lines_of_code": 27,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get intelligently truncated display name",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_detect_wsl_environment",
      "line_number": 1169,
      "complexity": 20,
      "lines_of_code": 41,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Detect WSL environment and GPU capabilities",
      "issues": [
        "High cyclomatic complexity: 20",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "get_gpu_stats",
      "line_number": 1579,
      "complexity": 18,
      "lines_of_code": 51,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get GPU statistics with comprehensive WSL2 and fallback handling",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 51",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_parse_nvidia_xml_stats",
      "line_number": 1658,
      "complexity": 25,
      "lines_of_code": 67,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Parse nvidia-smi XML output for real-time statistics",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 67"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_get_nvidia_stats_csv",
      "line_number": 1726,
      "complexity": 18,
      "lines_of_code": 39,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get NVIDIA GPU statistics using CSV output",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_get_amd_stats",
      "line_number": 1766,
      "complexity": 18,
      "lines_of_code": 39,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get AMD GPU statistics",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_get_wsl2_directx_stats",
      "line_number": 2034,
      "complexity": 17,
      "lines_of_code": 53,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get DirectX GPU statistics for WSL2 with fallback attempts",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 53",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "run",
      "line_number": 2146,
      "complexity": 39,
      "lines_of_code": 175,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main enhanced monitor loop with adaptive features",
      "issues": [
        "High cyclomatic complexity: 39",
        "Too many lines of code: 175",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/static_monitor.py",
      "function_name": "_generate_alert_message",
      "line_number": 2322,
      "complexity": 26,
      "lines_of_code": 40,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive alert message",
      "issues": [
        "High cyclomatic complexity: 26"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/simple_validation.py",
      "function_name": "main",
      "line_number": 11,
      "complexity": 19,
      "lines_of_code": 113,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 113",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/enhanced-compliance-monitor.py",
      "function_name": "_build_dependency_graph",
      "line_number": 245,
      "complexity": 18,
      "lines_of_code": 42,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Build dependency graph of project files",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/enhanced-compliance-monitor.py",
      "function_name": "check_rule_7_script_organization",
      "line_number": 734,
      "complexity": 21,
      "lines_of_code": 69,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Enhanced script organization check with better duplicate detection",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 69",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/enhanced-compliance-monitor.py",
      "function_name": "auto_fix_violations",
      "line_number": 1059,
      "complexity": 16,
      "lines_of_code": 78,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Enhanced auto-fix with transaction support and validation",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 78"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/enhanced-compliance-monitor.py",
      "function_name": "_generate_recommendations",
      "line_number": 1557,
      "complexity": 17,
      "lines_of_code": 35,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate actionable recommendations",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/enhanced-compliance-monitor.py",
      "function_name": "run_daemon_mode",
      "line_number": 1618,
      "complexity": 21,
      "lines_of_code": 70,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Enhanced service mode with health monitoring and graceful shutdown",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 70",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/enhanced-compliance-monitor.py",
      "function_name": "validate_system_integrity",
      "line_number": 1689,
      "complexity": 17,
      "lines_of_code": 76,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Comprehensive system integrity validation",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 76"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/enhanced-compliance-monitor.py",
      "function_name": "cleanup_old_data",
      "line_number": 1766,
      "complexity": 18,
      "lines_of_code": 62,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Clean up old compliance data and backups",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 62",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/enhanced-compliance-monitor.py",
      "function_name": "main",
      "line_number": 1829,
      "complexity": 22,
      "lines_of_code": 136,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Enhanced main function with comprehensive argument handling",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 136",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/validation_report.py",
      "function_name": "generate_validation_report",
      "line_number": 12,
      "complexity": 55,
      "lines_of_code": 247,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive validation report",
      "issues": [
        "High cyclomatic complexity: 55",
        "Too many lines of code: 247"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/identify_working_method.py",
      "function_name": "test_method_1_windows_nvidia_smi",
      "line_number": 10,
      "complexity": 18,
      "lines_of_code": 39,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test Windows nvidia-smi.exe",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/identify_working_method.py",
      "function_name": "test_method_4_pynvml",
      "line_number": 114,
      "complexity": 16,
      "lines_of_code": 59,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test pynvml",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 59"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/check-python-headers.py",
      "function_name": "check_python_header",
      "line_number": 12,
      "complexity": 20,
      "lines_of_code": 47,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if Python file has proper header",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/permanent-health-monitor.py",
      "function_name": "check_container_health",
      "line_number": 104,
      "complexity": 21,
      "lines_of_code": 64,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Comprehensive container health check",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/permanent-health-monitor.py",
      "function_name": "monitor_containers",
      "line_number": 217,
      "complexity": 22,
      "lines_of_code": 88,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main monitoring loop",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 88",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/agent-activation-monitor.py",
      "function_name": "check_alerts",
      "line_number": 197,
      "complexity": 24,
      "lines_of_code": 99,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check for alert conditions",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 99"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/distributed-health-monitor.py",
      "function_name": "check_container_health",
      "line_number": 104,
      "complexity": 21,
      "lines_of_code": 64,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Comprehensive container health check",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/distributed-health-monitor.py",
      "function_name": "monitor_containers",
      "line_number": 217,
      "complexity": 22,
      "lines_of_code": 88,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main monitoring loop",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 88",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/system-health-validator.py",
      "function_name": "check_alert_conditions",
      "line_number": 322,
      "complexity": 25,
      "lines_of_code": 68,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check for alert conditions in collected metrics",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 68"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/system-health-validator.py",
      "function_name": "generate_health_report",
      "line_number": 391,
      "complexity": 27,
      "lines_of_code": 67,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive health report",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 67"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/performance-profiler-suite.py",
      "function_name": "get_metrics_summary",
      "line_number": 237,
      "complexity": 16,
      "lines_of_code": 69,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get metrics summary for specified duration",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 69"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/performance-profiler-suite.py",
      "function_name": "_profile_container",
      "line_number": 442,
      "complexity": 17,
      "lines_of_code": 56,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Profile individual container",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 56",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/validate-production-health.py",
      "function_name": "check_alert_conditions",
      "line_number": 322,
      "complexity": 25,
      "lines_of_code": 68,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check for alert conditions in collected metrics",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 68"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/validate-production-health.py",
      "function_name": "generate_health_report",
      "line_number": 391,
      "complexity": 27,
      "lines_of_code": 67,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive health report",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 67"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/database_health_check.py",
      "function_name": "check_alert_conditions",
      "line_number": 322,
      "complexity": 25,
      "lines_of_code": 68,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check for alert conditions in collected metrics",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 68"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/database_health_check.py",
      "function_name": "generate_health_report",
      "line_number": 391,
      "complexity": 27,
      "lines_of_code": 67,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive health report",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 67"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/ultra-dockerfile-migrator.py",
      "function_name": "extract_dockerfile_components",
      "line_number": 108,
      "complexity": 16,
      "lines_of_code": 48,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Extract key components from a Dockerfile",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 11"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/ultra-dockerfile-migrator.py",
      "function_name": "generate_migrated_dockerfile",
      "line_number": 157,
      "complexity": 43,
      "lines_of_code": 109,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate a migrated version of the Dockerfile",
      "issues": [
        "High cyclomatic complexity: 43",
        "Too many lines of code: 109",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/fix-agent-health-checks.py",
      "function_name": "check_container_health",
      "line_number": 104,
      "complexity": 21,
      "lines_of_code": 64,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Comprehensive container health check",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/fix-agent-health-checks.py",
      "function_name": "monitor_containers",
      "line_number": 217,
      "complexity": 22,
      "lines_of_code": 88,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main monitoring loop",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 88",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/redis_performance_monitor.py",
      "function_name": "_analyze_keys",
      "line_number": 113,
      "complexity": 26,
      "lines_of_code": 72,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Analyze Redis key patterns and distribution",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 72",
        "Deep nesting level: 9"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/garbage-collection-monitor.py",
      "function_name": "get_gc_health",
      "line_number": 33,
      "complexity": 16,
      "lines_of_code": 63,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get garbage collection health status",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 63"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/neo4j-performance-monitor.py",
      "function_name": "main",
      "line_number": 54,
      "complexity": 34,
      "lines_of_code": 68,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main monitoring function",
      "issues": [
        "High cyclomatic complexity: 34",
        "Too many lines of code: 68",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/final_validation.py",
      "function_name": "main",
      "line_number": 11,
      "complexity": 24,
      "lines_of_code": 177,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 177",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/resource-pool-coordinator.py",
      "function_name": "_perform_rebalancing",
      "line_number": 803,
      "complexity": 16,
      "lines_of_code": 33,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Perform resource rebalancing based on usage patterns",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/multi-system-integration-framework.py",
      "function_name": "_resolve_conflicts",
      "line_number": 818,
      "complexity": 17,
      "lines_of_code": 47,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Resolve integration conflicts based on strategy",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/multi-system-integration-framework.py",
      "function_name": "_analyze_performance_trends",
      "line_number": 1971,
      "complexity": 17,
      "lines_of_code": 58,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Analyze performance trends across the system",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 58"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/multi-system-integration-framework.py",
      "function_name": "_generate_recommendations",
      "line_number": 2167,
      "complexity": 20,
      "lines_of_code": 43,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate recommendations based on report data",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/multi-system-integration-framework.py",
      "function_name": "_check_metric_anomaly",
      "line_number": 2249,
      "complexity": 27,
      "lines_of_code": 75,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if a metric value is anomalous",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 75",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/multi-system-integration-framework.py",
      "function_name": "main",
      "line_number": 2513,
      "complexity": 40,
      "lines_of_code": 165,
      "parameters_count": 0,
      "nested_functions": 2,
      "is_async": false,
      "docstring": "Main entry point for the Multi-System Integration Framework",
      "issues": [
        "High cyclomatic complexity: 40",
        "Too many lines of code: 165",
        "Deep nesting level: 10"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/comprehensive-agent-health-monitor.py",
      "function_name": "check_container_health",
      "line_number": 104,
      "complexity": 21,
      "lines_of_code": 64,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Comprehensive container health check",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/monitoring/comprehensive-agent-health-monitor.py",
      "function_name": "monitor_containers",
      "line_number": 217,
      "complexity": 22,
      "lines_of_code": 88,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main monitoring loop",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 88",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/health/container-health-monitor.py",
      "function_name": "check_container_health",
      "line_number": 104,
      "complexity": 21,
      "lines_of_code": 64,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Comprehensive container health check",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/health/container-health-monitor.py",
      "function_name": "monitor_containers",
      "line_number": 217,
      "complexity": 22,
      "lines_of_code": 88,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main monitoring loop",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 88",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/health/monitoring-health-aggregator.py",
      "function_name": "check_alert_conditions",
      "line_number": 322,
      "complexity": 25,
      "lines_of_code": 68,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check for alert conditions in collected metrics",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 68"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/health/monitoring-health-aggregator.py",
      "function_name": "generate_health_report",
      "line_number": 391,
      "complexity": 27,
      "lines_of_code": 67,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive health report",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 67"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/health/master-health-controller.py",
      "function_name": "generate_health_summary",
      "line_number": 407,
      "complexity": 16,
      "lines_of_code": 52,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive health summary",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 52"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/health/master-health-controller.py",
      "function_name": "generate_report",
      "line_number": 505,
      "complexity": 16,
      "lines_of_code": 80,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive health report",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 80"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/health/master-health-controller.py",
      "function_name": "main",
      "line_number": 587,
      "complexity": 30,
      "lines_of_code": 127,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main entry point with comprehensive CLI",
      "issues": [
        "High cyclomatic complexity: 30",
        "Too many lines of code: 127",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/coverage_reporter.py",
      "function_name": "analyze_file_coverage",
      "line_number": 31,
      "complexity": 19,
      "lines_of_code": 61,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze test coverage for a single file",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 61"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/coverage_reporter.py",
      "function_name": "generate_coverage_report",
      "line_number": 160,
      "complexity": 27,
      "lines_of_code": 131,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive coverage report",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 131"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/health_monitor.py",
      "function_name": "generate_health_summary",
      "line_number": 407,
      "complexity": 16,
      "lines_of_code": 52,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive health summary",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 52"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/health_monitor.py",
      "function_name": "generate_report",
      "line_number": 505,
      "complexity": 16,
      "lines_of_code": 80,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive health report",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 80"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/health_monitor.py",
      "function_name": "main",
      "line_number": 587,
      "complexity": 30,
      "lines_of_code": 127,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main entry point with comprehensive CLI",
      "issues": [
        "High cyclomatic complexity: 30",
        "Too many lines of code: 127",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/register_with_consul.py",
      "function_name": "main",
      "line_number": 127,
      "complexity": 17,
      "lines_of_code": 61,
      "parameters_count": 0,
      "nested_functions": 2,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 61",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/multi-environment-config-manager.py",
      "function_name": "_validate_environment_specific",
      "line_number": 634,
      "complexity": 24,
      "lines_of_code": 31,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Environment-specific validation rules",
      "issues": [
        "High cyclomatic complexity: 24",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/multi-environment-config-manager.py",
      "function_name": "main",
      "line_number": 1220,
      "complexity": 34,
      "lines_of_code": 149,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Main entry point",
      "issues": [
        "High cyclomatic complexity: 34",
        "Too many lines of code: 149",
        "Deep nesting level: 10"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/dynamic-load-balancer.py",
      "function_name": "select_backend",
      "line_number": 484,
      "complexity": 25,
      "lines_of_code": 68,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select the best backend service for a request",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 68",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/dynamic-load-balancer.py",
      "function_name": "main",
      "line_number": 913,
      "complexity": 19,
      "lines_of_code": 114,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Main entry point",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 114",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/create-performance-baseline.py",
      "function_name": "analyze_samples",
      "line_number": 275,
      "complexity": 17,
      "lines_of_code": 107,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze collected samples to create baselines",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 107"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/analyze-agent-readiness.py",
      "function_name": "check_agent_directory",
      "line_number": 42,
      "complexity": 17,
      "lines_of_code": 35,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if an agent directory has all required files",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/extract_port_mappings.py",
      "function_name": "main",
      "line_number": 41,
      "complexity": 19,
      "lines_of_code": 83,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main function to extract all port mappings.",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 83",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/create-container-requirements-map.py",
      "function_name": "analyze_container_requirements",
      "line_number": 15,
      "complexity": 31,
      "lines_of_code": 163,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Create comprehensive container to requirements mapping",
      "issues": [
        "High cyclomatic complexity: 31",
        "Too many lines of code: 163",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/optimization-validator.py",
      "function_name": "print_validation_report",
      "line_number": 382,
      "complexity": 22,
      "lines_of_code": 72,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Print validation report",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 72",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/synthetic-load-test.py",
      "function_name": "make_request",
      "line_number": 67,
      "complexity": 19,
      "lines_of_code": 64,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Make a single request to an endpoint",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/check_naming.py",
      "function_name": "main",
      "line_number": 52,
      "complexity": 20,
      "lines_of_code": 61,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check all files for naming convention violations",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 61"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/database_operations.py",
      "function_name": "main",
      "line_number": 329,
      "complexity": 28,
      "lines_of_code": 77,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main function",
      "issues": [
        "High cyclomatic complexity: 28",
        "Too many lines of code: 77",
        "Deep nesting level: 9"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/intelligent-cache-system.py",
      "function_name": "_evict",
      "line_number": 315,
      "complexity": 18,
      "lines_of_code": 50,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Evict entry based on replacement policy",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/intelligent-cache-system.py",
      "function_name": "_promote_entry",
      "line_number": 627,
      "complexity": 18,
      "lines_of_code": 38,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Promote frequently accessed entries to higher cache levels",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/memory-pool-manager.py",
      "function_name": "allocate",
      "line_number": 226,
      "complexity": 18,
      "lines_of_code": 54,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Allocate memory block",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 54"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/optimize_transformers.py",
      "function_name": "optimize_with_quantization",
      "line_number": 459,
      "complexity": 29,
      "lines_of_code": 190,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Optimize model with quantization.\n\nArgs:\n    model: Model to optimize\n    tokenizer: Tokenizer for the model\n    sequence_length: Input sequence length\n    bits: Quantization bits (8 or 4)\n\nReturns:\n    Benchmark results for optimized model",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 190"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/optimize_transformers.py",
      "function_name": "optimize_all",
      "line_number": 650,
      "complexity": 25,
      "lines_of_code": 96,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Run all optimizations and compare results.\n\nArgs:\n    model_type: Model type to optimize\n    sequence_lengths: List of sequence lengths to benchmark\n\nReturns:\n    Comparison of all optimization methods",
      "issues": [
        "High cyclomatic complexity: 25",
        "Too many lines of code: 96",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/optimize_transformers.py",
      "function_name": "_generate_recommendations",
      "line_number": 747,
      "complexity": 33,
      "lines_of_code": 158,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate optimization recommendations based on benchmark results.",
      "issues": [
        "High cyclomatic complexity: 33",
        "Too many lines of code: 158",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/ai-performance-validator.py",
      "function_name": "_generate_recommendations",
      "line_number": 419,
      "complexity": 26,
      "lines_of_code": 45,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate recommendations based on test results",
      "issues": [
        "High cyclomatic complexity: 26"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/final-system-validation.py",
      "function_name": "_score_to_grade",
      "line_number": 300,
      "complexity": 21,
      "lines_of_code": 24,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Convert score to letter grade",
      "issues": [
        "High cyclomatic complexity: 21",
        "Deep nesting level: 10"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/final-system-validation.py",
      "function_name": "_generate_ai_insights",
      "line_number": 325,
      "complexity": 21,
      "lines_of_code": 36,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate AI-powered insights",
      "issues": [
        "High cyclomatic complexity: 21"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/final-system-validation.py",
      "function_name": "_validate_reliability_excellence",
      "line_number": 652,
      "complexity": 17,
      "lines_of_code": 76,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Validate reliability with excellence standards",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 76"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/final-system-validation.py",
      "function_name": "_validate_documentation_excellence",
      "line_number": 964,
      "complexity": 18,
      "lines_of_code": 75,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Validate documentation excellence",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 75",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/final-system-validation.py",
      "function_name": "_validate_load_performance",
      "line_number": 1135,
      "complexity": 17,
      "lines_of_code": 70,
      "parameters_count": 1,
      "nested_functions": 1,
      "is_async": true,
      "docstring": "Validate system under load",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 70"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/final-system-validation.py",
      "function_name": "main",
      "line_number": 1372,
      "complexity": 29,
      "lines_of_code": 135,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Main validation entry point",
      "issues": [
        "High cyclomatic complexity: 29",
        "Too many lines of code: 135",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/audit_docs.py",
      "function_name": "main",
      "line_number": 27,
      "complexity": 16,
      "lines_of_code": 43,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 16",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/enforce_claude_md_simple.py",
      "function_name": "create_docker_compose_override",
      "line_number": 155,
      "complexity": 17,
      "lines_of_code": 44,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Create docker-compose override to mount CLAUDE.md",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/enforce_claude_md_rules.py",
      "function_name": "update_docker_compose_files",
      "line_number": 144,
      "complexity": 20,
      "lines_of_code": 42,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Update docker-compose files to mount CLAUDE.md",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/enforce_claude_md_rules.py",
      "function_name": "run_comprehensive_check",
      "line_number": 291,
      "complexity": 19,
      "lines_of_code": 52,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Run comprehensive check of all CLAUDE.md rules",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 52",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/distributed-autoscaler.py",
      "function_name": "evaluate_scaling_rules",
      "line_number": 182,
      "complexity": 16,
      "lines_of_code": 40,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Evaluate scaling rules for a service",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/add_claude_md_directive.py",
      "function_name": "add_claude_directive",
      "line_number": 12,
      "complexity": 17,
      "lines_of_code": 43,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Add CLAUDE.md review directive to agent configuration",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/check_requirements.py",
      "function_name": "check_requirements_files",
      "line_number": 33,
      "complexity": 18,
      "lines_of_code": 64,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check all requirements files for issues",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/requirements_analyzer.py",
      "function_name": "parse_requirements_txt",
      "line_number": 48,
      "complexity": 22,
      "lines_of_code": 39,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Parse a requirements.txt file and return list of (package, version) tuples.",
      "issues": [
        "High cyclomatic complexity: 22",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/requirements_analyzer.py",
      "function_name": "parse_pyproject_toml",
      "line_number": 88,
      "complexity": 17,
      "lines_of_code": 44,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Parse a pyproject.toml file for dependencies.",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 9"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/requirements_analyzer.py",
      "function_name": "find_version_conflicts",
      "line_number": 146,
      "complexity": 16,
      "lines_of_code": 40,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Find packages with conflicting version requirements.",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/requirements_analyzer.py",
      "function_name": "find_duplicate_files",
      "line_number": 187,
      "complexity": 22,
      "lines_of_code": 54,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Find duplicate or redundant requirements files.",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 54"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/check_banned_keywords.py",
      "function_name": "main",
      "line_number": 49,
      "complexity": 38,
      "lines_of_code": 37,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 38",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/dependency_analyzer.py",
      "function_name": "analyze_docker_images",
      "line_number": 162,
      "complexity": 18,
      "lines_of_code": 46,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze Docker base images and versions",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/dependency_analyzer.py",
      "function_name": "generate_report",
      "line_number": 336,
      "complexity": 20,
      "lines_of_code": 66,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate human-readable report",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 66"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/static_discovery.py",
      "function_name": "scan_python_file",
      "line_number": 56,
      "complexity": 23,
      "lines_of_code": 45,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 23",
        "Missing docstring",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/scripts/utils/static_discovery.py",
      "function_name": "main",
      "line_number": 103,
      "complexity": 34,
      "lines_of_code": 123,
      "parameters_count": 0,
      "nested_functions": 2,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 34",
        "Too many lines of code: 123",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/self-healing/scripts/predictive-monitoring.py",
      "function_name": "predict_service_failure",
      "line_number": 315,
      "complexity": 21,
      "lines_of_code": 56,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Predict if a service is likely to fail\nReturns: (likely_to_fail, failure_probability, contributing_factors)",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 56"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/chaos/scripts/chaos-monkey.py",
      "function_name": "is_system_safe_for_chaos",
      "line_number": 87,
      "complexity": 25,
      "lines_of_code": 49,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Check if system is safe for chaos experiments",
      "issues": [
        "High cyclomatic complexity: 25",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/phase1_script_backup/chaos/scripts/chaos-engine.py",
      "function_name": "_execute_scenario",
      "line_number": 677,
      "complexity": 18,
      "lines_of_code": 50,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Execute a single chaos scenario",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/chaos/scripts/chaos-monkey.py",
      "function_name": "is_system_safe_for_chaos",
      "line_number": 87,
      "complexity": 25,
      "lines_of_code": 49,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Check if system is safe for chaos experiments",
      "issues": [
        "High cyclomatic complexity: 25",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/chaos/scripts/chaos-engine.py",
      "function_name": "_execute_scenario",
      "line_number": 677,
      "complexity": 18,
      "lines_of_code": 50,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Execute a single chaos scenario",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/task_assignment_coordinator/app.py",
      "function_name": "select_agent",
      "line_number": 333,
      "complexity": 20,
      "lines_of_code": 47,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select agent based on assignment strategy",
      "issues": [
        "High cyclomatic complexity: 20",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/core/context_manager.py",
      "function_name": "score",
      "line_number": 415,
      "complexity": 22,
      "lines_of_code": 47,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Score importance from 0.0 to 1.0",
      "issues": [
        "High cyclomatic complexity: 22"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/core/migration_helper.py",
      "function_name": "validate_agent_directory",
      "line_number": 152,
      "complexity": 19,
      "lines_of_code": 70,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Validate a single agent directory for migration readiness\n\nArgs:\n    agent_path: Path to agent directory\n    \nReturns:\n    Validation results dictionary",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 70"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/core/migration_helper.py",
      "function_name": "validate_all_agents",
      "line_number": 223,
      "complexity": 16,
      "lines_of_code": 43,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Validate all agents in the agents directory\n\nReturns:\n    Complete validation report",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/core/ollama_autoscaler.py",
      "function_name": "should_scale_up",
      "line_number": 296,
      "complexity": 19,
      "lines_of_code": 34,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Determine if we should scale up.",
      "issues": [
        "High cyclomatic complexity: 19"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/ai_agent_orchestrator/app.py",
      "function_name": "find_best_agent",
      "line_number": 317,
      "complexity": 17,
      "lines_of_code": 45,
      "parameters_count": 3,
      "nested_functions": 1,
      "is_async": true,
      "docstring": "Find the best available agent for a task",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/app_debug_enhanced.py",
      "function_name": "_optimize_cpu",
      "line_number": 45,
      "complexity": 16,
      "lines_of_code": 45,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Debug-enhanced CPU optimization with tracing",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/bulletproof_test_suite.py",
      "function_name": "create_test_files",
      "line_number": 154,
      "complexity": 16,
      "lines_of_code": 61,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Create test files for various scenarios",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 61",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/test_storage_endpoints.py",
      "function_name": "main",
      "line_number": 65,
      "complexity": 47,
      "lines_of_code": 178,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test all storage endpoints",
      "issues": [
        "High cyclomatic complexity: 47",
        "Too many lines of code: 178",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/debug_tracer.py",
      "function_name": "_calculate_snapshot_differences",
      "line_number": 209,
      "complexity": 18,
      "lines_of_code": 41,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Calculate meaningful differences between system snapshots",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/app.py",
      "function_name": "_analyze_storage",
      "line_number": 216,
      "complexity": 18,
      "lines_of_code": 67,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze storage usage with detailed breakdown",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 67",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/app.py",
      "function_name": "_optimize_storage_comprehensive",
      "line_number": 443,
      "complexity": 27,
      "lines_of_code": 89,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main storage optimization with smart cleanup",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 89",
        "Deep nesting level: 9"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/app.py",
      "function_name": "_optimize_compress",
      "line_number": 631,
      "complexity": 17,
      "lines_of_code": 63,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Compress old/archived files",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 63",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/app.py",
      "function_name": "_optimize_logs",
      "line_number": 695,
      "complexity": 26,
      "lines_of_code": 85,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Intelligent log rotation and cleanup",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 85",
        "Deep nesting level: 9"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/app.py",
      "function_name": "process_task",
      "line_number": 1339,
      "complexity": 32,
      "lines_of_code": 74,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Process incoming tasks (for compatibility with BaseAgent)",
      "issues": [
        "High cyclomatic complexity: 32",
        "Too many lines of code: 74",
        "Deep nesting level: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/manual_debug_test.py",
      "function_name": "cleanup_test_artifacts",
      "line_number": 651,
      "complexity": 20,
      "lines_of_code": 46,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Clean up test artifacts",
      "issues": [
        "High cyclomatic complexity: 20",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/final_performance_demo.py",
      "function_name": "demonstrate_full_workflow",
      "line_number": 16,
      "complexity": 30,
      "lines_of_code": 229,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Demonstrate complete storage optimization workflow",
      "issues": [
        "High cyclomatic complexity: 30",
        "Too many lines of code: 229"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/final_validation_summary.py",
      "function_name": "main",
      "line_number": 158,
      "complexity": 32,
      "lines_of_code": 171,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main validation execution",
      "issues": [
        "High cyclomatic complexity: 32",
        "Too many lines of code: 171"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/simple_performance_test.py",
      "function_name": "print_summary",
      "line_number": 253,
      "complexity": 25,
      "lines_of_code": 49,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Print performance summary",
      "issues": [
        "High cyclomatic complexity: 25"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/continuous_validator.py",
      "function_name": "_analyze_results",
      "line_number": 268,
      "complexity": 17,
      "lines_of_code": 38,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze test results and metrics",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/manual_test_procedures.py",
      "function_name": "test_storage_analysis_workflow",
      "line_number": 257,
      "complexity": 18,
      "lines_of_code": 94,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test MT-003: Storage Analysis Workflow",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 94"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/manual_test_procedures.py",
      "function_name": "test_comprehensive_optimization_workflow",
      "line_number": 449,
      "complexity": 16,
      "lines_of_code": 99,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test MT-005: Comprehensive Optimization Workflow",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 99"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/performance_stress_tests.py",
      "function_name": "sustained_load_test",
      "line_number": 304,
      "complexity": 16,
      "lines_of_code": 107,
      "parameters_count": 5,
      "nested_functions": 1,
      "is_async": false,
      "docstring": "Test sustained load over time",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 107"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/performance_stress_tests.py",
      "function_name": "_generate_summary",
      "line_number": 629,
      "complexity": 26,
      "lines_of_code": 56,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate performance summary",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 56"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/comprehensive_e2e_test_framework.py",
      "function_name": "run_storage_analysis_tests",
      "line_number": 303,
      "complexity": 35,
      "lines_of_code": 53,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test storage analysis endpoints",
      "issues": [
        "High cyclomatic complexity: 35",
        "Too many lines of code: 53"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/test_execution_orchestrator.py",
      "function_name": "generate_comprehensive_report",
      "line_number": 284,
      "complexity": 18,
      "lines_of_code": 86,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive test report",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 86"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/test_execution_orchestrator.py",
      "function_name": "print_summary",
      "line_number": 386,
      "complexity": 16,
      "lines_of_code": 53,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Print executive summary of test results",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 53"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/tests/automated_continuous_tests.py",
      "function_name": "main",
      "line_number": 540,
      "complexity": 17,
      "lines_of_code": 43,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Main entry point for automated testing",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/shared/agents/core/context_manager.py",
      "function_name": "score",
      "line_number": 415,
      "complexity": 22,
      "lines_of_code": 47,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Score importance from 0.0 to 1.0",
      "issues": [
        "High cyclomatic complexity: 22"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/shared/agents/core/migration_helper.py",
      "function_name": "validate_agent_directory",
      "line_number": 152,
      "complexity": 19,
      "lines_of_code": 70,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Validate a single agent directory for migration readiness\n\nArgs:\n    agent_path: Path to agent directory\n    \nReturns:\n    Validation results dictionary",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 70"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/shared/agents/core/migration_helper.py",
      "function_name": "validate_all_agents",
      "line_number": 223,
      "complexity": 16,
      "lines_of_code": 43,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Validate all agents in the agents directory\n\nReturns:\n    Complete validation report",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/agents/hardware-resource-optimizer/shared/agents/core/ollama_autoscaler.py",
      "function_name": "should_scale_up",
      "line_number": 296,
      "complexity": 19,
      "lines_of_code": 34,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Determine if we should scale up.",
      "issues": [
        "High cyclomatic complexity: 19"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/integration_examples_fantasy_backup.py",
      "function_name": "example_advanced_api_patterns",
      "line_number": 572,
      "complexity": 26,
      "lines_of_code": 232,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Example: Advanced API integration patterns.",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 232",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/integration_examples_fantasy_backup.py",
      "function_name": "example_complete_scenario",
      "line_number": 807,
      "complexity": 20,
      "lines_of_code": 330,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Example: Complete end-to-end AI development scenario.",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 330"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/health_monitor.py",
      "function_name": "get_system_health_overview",
      "line_number": 865,
      "complexity": 16,
      "lines_of_code": 46,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Get system-wide health overview.",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/workflow_orchestrator.py",
      "function_name": "_execute_workflow",
      "line_number": 444,
      "complexity": 20,
      "lines_of_code": 52,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Execute a workflow.",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 52"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/agent_manager.py",
      "function_name": "update_agent_config",
      "line_number": 789,
      "complexity": 17,
      "lines_of_code": 39,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Update the configuration of an agent.\n\nArgs:\n    agent_id: Agent ID to update configuration for\n    new_config_dict: Dictionary containing new configuration values\n    new_metadata: Optional new metadata for the agent\n\nReturns:\n    Dict[str, Any]: Updated agent configuration",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/edge_inference/failover.py",
      "function_name": "_calculate_node_health_status",
      "line_number": 296,
      "complexity": 18,
      "lines_of_code": 35,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Calculate overall health status for a node",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/edge_inference/failover.py",
      "function_name": "_check_node_for_failover",
      "line_number": 519,
      "complexity": 18,
      "lines_of_code": 31,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Check if a node needs failover",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/edge_inference/proxy.py",
      "function_name": "_select_optimal_node",
      "line_number": 449,
      "complexity": 20,
      "lines_of_code": 36,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select optimal node based on routing strategy",
      "issues": [
        "High cyclomatic complexity: 20",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/oversight/oversight_orchestrator.py",
      "function_name": "_compliance_monitoring_loop",
      "line_number": 209,
      "complexity": 20,
      "lines_of_code": 60,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Monitor compliance and generate reports",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 60",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/oversight/compliance_reporter.py",
      "function_name": "collect_compliance_metrics",
      "line_number": 325,
      "complexity": 16,
      "lines_of_code": 47,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Collect compliance metrics for a specific framework",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/oversight/compliance_reporter.py",
      "function_name": "generate_compliance_report",
      "line_number": 620,
      "complexity": 22,
      "lines_of_code": 92,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Generate a comprehensive compliance report",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 92",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/oversight/compliance_reporter.py",
      "function_name": "_generate_recommendations",
      "line_number": 713,
      "complexity": 42,
      "lines_of_code": 52,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate compliance recommendations based on metrics and violations",
      "issues": [
        "High cyclomatic complexity: 42",
        "Too many lines of code: 52"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/oversight/compliance_reporter.py",
      "function_name": "schedule_reports",
      "line_number": 1157,
      "complexity": 18,
      "lines_of_code": 29,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Schedule automatic compliance report generation",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_comprehensive_report.py",
      "function_name": "analyze_results",
      "line_number": 59,
      "complexity": 20,
      "lines_of_code": 44,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze all test results and generate summary",
      "issues": [
        "High cyclomatic complexity: 20"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_comprehensive_report.py",
      "function_name": "generate_recommendations",
      "line_number": 182,
      "complexity": 16,
      "lines_of_code": 92,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate recommendations based on test results",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 92"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_comprehensive_report.py",
      "function_name": "generate_report",
      "line_number": 275,
      "complexity": 20,
      "lines_of_code": 81,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive test report",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 81"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_network_validation.py",
      "function_name": "detect_port_conflicts",
      "line_number": 96,
      "complexity": 18,
      "lines_of_code": 48,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Detect potential port conflicts",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_network_validation.py",
      "function_name": "generate_report",
      "line_number": 302,
      "complexity": 16,
      "lines_of_code": 61,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive network validation report",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 61"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_main_comprehensive.py",
      "function_name": "test_health_endpoint_success",
      "line_number": 153,
      "complexity": 21,
      "lines_of_code": 18,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test health endpoint returns correct status",
      "issues": [
        "High cyclomatic complexity: 21"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_api_endpoints.py",
      "function_name": "test_list_agents",
      "line_number": 140,
      "complexity": 18,
      "lines_of_code": 17,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test listing available agents",
      "issues": [
        "High cyclomatic complexity: 18"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_api_endpoints.py",
      "function_name": "test_agent_consensus",
      "line_number": 158,
      "complexity": 17,
      "lines_of_code": 18,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test agent consensus functionality",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/agent_compliance_fixer.py",
      "function_name": "_fix_file_structure",
      "line_number": 256,
      "complexity": 16,
      "lines_of_code": 142,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Fix file structure and add missing sections",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 142",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_agent_hygiene_compliance.py",
      "function_name": "_validate_yaml_frontmatter",
      "line_number": 166,
      "complexity": 24,
      "lines_of_code": 53,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Validate YAML frontmatter structure",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 53"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_deployment_validation.py",
      "function_name": "check_container_health",
      "line_number": 80,
      "complexity": 17,
      "lines_of_code": 54,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check detailed health status of each container",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 54"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_deployment_validation.py",
      "function_name": "parse_logs",
      "line_number": 169,
      "complexity": 21,
      "lines_of_code": 64,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Parse and analyze log content for specific patterns",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 64"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_deployment_validation.py",
      "function_name": "check_resource_usage",
      "line_number": 255,
      "complexity": 17,
      "lines_of_code": 60,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check system resource usage",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 60"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_deployment_validation.py",
      "function_name": "generate_report",
      "line_number": 344,
      "complexity": 26,
      "lines_of_code": 91,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate comprehensive deployment validation report",
      "issues": [
        "High cyclomatic complexity: 26",
        "Too many lines of code: 91"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_vector_context_integration.py",
      "function_name": "test_chat_endpoint_with_vector_context",
      "line_number": 79,
      "complexity": 19,
      "lines_of_code": 41,
      "parameters_count": 6,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test chat endpoint with vector context integration",
      "issues": [
        "High cyclomatic complexity: 19"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/tests/test_vector_context_integration.py",
      "function_name": "test_think_endpoint_with_vector_context",
      "line_number": 154,
      "complexity": 17,
      "lines_of_code": 29,
      "parameters_count": 6,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Test think endpoint with vector context integration",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/unified_service_controller.py",
      "function_name": "execute_command",
      "line_number": 85,
      "complexity": 43,
      "lines_of_code": 81,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Execute natural language commands to control services",
      "issues": [
        "High cyclomatic complexity: 43",
        "Too many lines of code: 81",
        "Deep nesting level: 11"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/knowledge_graph/query_engine.py",
      "function_name": "_generate_cypher",
      "line_number": 242,
      "complexity": 17,
      "lines_of_code": 47,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate Cypher query based on intent and entities",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/knowledge_graph/visualization.py",
      "function_name": "prepare_data_flow_graph",
      "line_number": 284,
      "complexity": 18,
      "lines_of_code": 83,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Prepare data flow visualization",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 83"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/knowledge_graph/graph_builder.py",
      "function_name": "_analyze_node",
      "line_number": 80,
      "complexity": 17,
      "lines_of_code": 70,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Analyze individual AST node",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 70",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/knowledge_graph/graph_builder.py",
      "function_name": "_infer_db_type",
      "line_number": 588,
      "complexity": 16,
      "lines_of_code": 16,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Infer database type from connection string",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/knowledge_graph/graph_builder.py",
      "function_name": "_classify_agent_type",
      "line_number": 904,
      "complexity": 25,
      "lines_of_code": 28,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Classify the type of agent based on its information",
      "issues": [
        "High cyclomatic complexity: 25",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/utils/readlarge.py",
      "function_name": "main",
      "line_number": 21,
      "complexity": 27,
      "lines_of_code": 132,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 132",
        "Missing docstring",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/lineage_tracker.py",
      "function_name": "_trace_lineage_memory",
      "line_number": 345,
      "complexity": 22,
      "lines_of_code": 55,
      "parameters_count": 4,
      "nested_functions": 1,
      "is_async": true,
      "docstring": "Trace lineage using in-memory data structures",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 55"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/lineage_tracker.py",
      "function_name": "find_paths",
      "line_number": 350,
      "complexity": 22,
      "lines_of_code": 44,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": null,
      "issues": [
        "High cyclomatic complexity: 22",
        "Missing docstring"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/data_catalog.py",
      "function_name": "_execute_search",
      "line_number": 351,
      "complexity": 43,
      "lines_of_code": 95,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Execute search query and return matching assets",
      "issues": [
        "High cyclomatic complexity: 43",
        "Too many lines of code: 95"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/data_catalog.py",
      "function_name": "_update_search_indexes",
      "line_number": 530,
      "complexity": 31,
      "lines_of_code": 72,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Update search indexes for an asset",
      "issues": [
        "High cyclomatic complexity: 31",
        "Too many lines of code: 72"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/quality_monitor.py",
      "function_name": "_perform_quality_assessment",
      "line_number": 332,
      "complexity": 18,
      "lines_of_code": 77,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Perform comprehensive quality assessment",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 77",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/quality_monitor.py",
      "function_name": "_evaluate_quality_rule",
      "line_number": 474,
      "complexity": 18,
      "lines_of_code": 56,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Evaluate a specific quality rule",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 56",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/quality_monitor.py",
      "function_name": "_evaluate_regex_rule",
      "line_number": 556,
      "complexity": 20,
      "lines_of_code": 38,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Evaluate regex validation rule",
      "issues": [
        "High cyclomatic complexity: 20",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/quality_monitor.py",
      "function_name": "_evaluate_numeric_range_rule",
      "line_number": 628,
      "complexity": 22,
      "lines_of_code": 50,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Evaluate numeric range rule",
      "issues": [
        "High cyclomatic complexity: 22",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/quality_monitor.py",
      "function_name": "_evaluate_freshness_rule",
      "line_number": 732,
      "complexity": 20,
      "lines_of_code": 60,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Evaluate data freshness rule",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 60",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/data_classifier.py",
      "function_name": "_generate_mock_data_for_column",
      "line_number": 327,
      "complexity": 21,
      "lines_of_code": 21,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate mock data for column classification based on name patterns",
      "issues": [
        "High cyclomatic complexity: 21",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/audit_logger.py",
      "function_name": "_event_matches_filter",
      "line_number": 563,
      "complexity": 32,
      "lines_of_code": 44,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if an event matches the filter criteria",
      "issues": [
        "High cyclomatic complexity: 32"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/lifecycle_manager.py",
      "function_name": "find_matching_policy",
      "line_number": 305,
      "complexity": 27,
      "lines_of_code": 41,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Find the best matching policy for a data asset",
      "issues": [
        "High cyclomatic complexity: 27"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/lifecycle_manager.py",
      "function_name": "evaluate_lifecycle_actions",
      "line_number": 347,
      "complexity": 24,
      "lines_of_code": 70,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Evaluate all assets and determine required lifecycle actions",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 70"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/data_governance/compliance_manager.py",
      "function_name": "generate_compliance_report",
      "line_number": 838,
      "complexity": 27,
      "lines_of_code": 58,
      "parameters_count": 4,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Generate a comprehensive compliance report",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 58",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/orchestration/unified_orchestration_api.py",
      "function_name": "_setup_routes",
      "line_number": 218,
      "complexity": 92,
      "lines_of_code": 541,
      "parameters_count": 1,
      "nested_functions": 22,
      "is_async": false,
      "docstring": "Setup all API routes",
      "issues": [
        "High cyclomatic complexity: 92",
        "Too many lines of code: 541",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/orchestration/advanced_message_bus.py",
      "function_name": "_route_message",
      "line_number": 405,
      "complexity": 16,
      "lines_of_code": 32,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Route message based on communication pattern",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/orchestration/infrastructure_integration.py",
      "function_name": "_check_service_health",
      "line_number": 709,
      "complexity": 17,
      "lines_of_code": 95,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Check health of a specific service",
      "issues": [
        "High cyclomatic complexity: 17",
        "Too many lines of code: 95",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/orchestration/infrastructure_integration.py",
      "function_name": "_evaluate_scaling",
      "line_number": 956,
      "complexity": 21,
      "lines_of_code": 41,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Evaluate if a service needs scaling",
      "issues": [
        "High cyclomatic complexity: 21",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/orchestration/agent_registry_service.py",
      "function_name": "update_service_health",
      "line_number": 341,
      "complexity": 17,
      "lines_of_code": 49,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Update service health information",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/orchestration/enhanced_multi_agent_coordinator.py",
      "function_name": "_select_and_assign_agents",
      "line_number": 329,
      "complexity": 20,
      "lines_of_code": 60,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select agents and assign roles based on coordination pattern",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 60",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/orchestration/orchestration_dashboard.py",
      "function_name": "_get_agent_data",
      "line_number": 499,
      "complexity": 17,
      "lines_of_code": 34,
      "parameters_count": 5,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Get filtered agent data",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/core/agent_message_bus.py",
      "function_name": "match",
      "line_number": 79,
      "complexity": 24,
      "lines_of_code": 18,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check if message matches filter criteria",
      "issues": [
        "High cyclomatic complexity: 24",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/core/agent_registry.py",
      "function_name": "update_agent_heartbeat",
      "line_number": 496,
      "complexity": 22,
      "lines_of_code": 51,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Update agent heartbeat and status",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 51"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/core/agent_registry.py",
      "function_name": "_calculate_agent_health",
      "line_number": 548,
      "complexity": 17,
      "lines_of_code": 28,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Calculate agent health based on metrics",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/memory/shared_memory.py",
      "function_name": "update_entry",
      "line_number": 130,
      "complexity": 16,
      "lines_of_code": 35,
      "parameters_count": 6,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Update entry if accessible",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/ai_agents/coordination/continuous_coordinator.py",
      "function_name": "_find_best_pattern",
      "line_number": 240,
      "complexity": 17,
      "lines_of_code": 18,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Find the best collaboration pattern for a task type",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/orchestration/task_router.py",
      "function_name": "_select_optimal_agent",
      "line_number": 321,
      "complexity": 17,
      "lines_of_code": 21,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select optimal agent using configured load balancing algorithm",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/orchestration/task_router.py",
      "function_name": "_hybrid_intelligent_selection",
      "line_number": 530,
      "complexity": 18,
      "lines_of_code": 75,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Advanced hybrid selection using multiple factors",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 75",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/orchestration/monitoring.py",
      "function_name": "_evaluate_alert_rules",
      "line_number": 453,
      "complexity": 25,
      "lines_of_code": 44,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Evaluate alert rules against current metrics",
      "issues": [
        "High cyclomatic complexity: 25",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/orchestration/agent_discovery.py",
      "function_name": "_infer_agent_type",
      "line_number": 375,
      "complexity": 17,
      "lines_of_code": 18,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Infer agent type from container name",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/schemas/message_model.py",
      "function_name": "from_dict",
      "line_number": 80,
      "complexity": 19,
      "lines_of_code": 66,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Parse from various legacy/canonical shapes.\n\nAccepts both sender/sender_id, recipient/recipient_id, payload/content.\nAccepts MessageType names or values. Priority accepts ints, names, or enum.",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 66"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/core/security.py",
      "function_name": "validate_input",
      "line_number": 344,
      "complexity": 19,
      "lines_of_code": 39,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Validate and sanitize input with comprehensive XSS protection",
      "issues": [
        "High cyclomatic complexity: 19"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/core/xss_tester.py",
      "function_name": "test_xss_protection",
      "line_number": 106,
      "complexity": 21,
      "lines_of_code": 135,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Test the XSS protection functionality",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 135"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/monitoring/performance_monitor.py",
      "function_name": "check_alerts",
      "line_number": 165,
      "complexity": 21,
      "lines_of_code": 47,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Check for performance alerts",
      "issues": [
        "High cyclomatic complexity: 21"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/agents/test_text_analysis.py",
      "function_name": "interactive_mode",
      "line_number": 388,
      "complexity": 20,
      "lines_of_code": 61,
      "parameters_count": 0,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Run the agent in interactive mode",
      "issues": [
        "High cyclomatic complexity: 20",
        "Too many lines of code: 61",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/services/agent_orchestrator.py",
      "function_name": "classify_agent",
      "line_number": 337,
      "complexity": 17,
      "lines_of_code": 12,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Classify agent type",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/services/agent_registry.py",
      "function_name": "classify_agent_type",
      "line_number": 83,
      "complexity": 18,
      "lines_of_code": 22,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Classify agent type based on name patterns",
      "issues": [
        "High cyclomatic complexity: 18",
        "Deep nesting level: 8"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/services/agent_registry.py",
      "function_name": "start_all_agents",
      "line_number": 186,
      "complexity": 22,
      "lines_of_code": 107,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Start all discovered agents with intelligent batching and resource management",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 107"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/api/v1/endpoints/network_recon.py",
      "function_name": "_generate_recommendations",
      "line_number": 479,
      "complexity": 16,
      "lines_of_code": 44,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Generate security recommendations",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/api/v1/endpoints/hardware.py",
      "function_name": "_make_request",
      "line_number": 281,
      "complexity": 31,
      "lines_of_code": 113,
      "parameters_count": 7,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Make HTTP request with comprehensive retry logic and circuit breaker",
      "issues": [
        "High cyclomatic complexity: 31",
        "Too many lines of code: 113",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/backend/app/api/v1/endpoints/streaming.py",
      "function_name": "manage_cache",
      "line_number": 343,
      "complexity": 18,
      "lines_of_code": 70,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Manage model cache for performance optimization",
      "issues": [
        "High cyclomatic complexity: 18",
        "Too many lines of code: 70",
        "Deep nesting level: 7"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/workflows/self_improving_workflow_engine.py",
      "function_name": "_calculate_performance_metrics",
      "line_number": 334,
      "complexity": 21,
      "lines_of_code": 44,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Calculate overall performance metrics for the execution.",
      "issues": [
        "High cyclomatic complexity: 21"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/workflows/self_improving_workflow_engine.py",
      "function_name": "_detect_performance_patterns",
      "line_number": 399,
      "complexity": 28,
      "lines_of_code": 53,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Detect patterns in performance data.",
      "issues": [
        "High cyclomatic complexity: 28",
        "Too many lines of code: 53"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/workflows/self_improving_workflow_engine.py",
      "function_name": "_learn_parameter_optimizations",
      "line_number": 453,
      "complexity": 22,
      "lines_of_code": 51,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Learn optimal parameters for workflow steps.",
      "issues": [
        "High cyclomatic complexity: 22",
        "Too many lines of code: 51",
        "Deep nesting level: 5"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/workflows/self_improving_workflow_engine.py",
      "function_name": "_should_adapt",
      "line_number": 505,
      "complexity": 17,
      "lines_of_code": 33,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Determine if the workflow should adapt based on performance trends.",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/workflows/self_improving_workflow_engine.py",
      "function_name": "_apply_structural_adaptations",
      "line_number": 587,
      "complexity": 17,
      "lines_of_code": 35,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Apply structural changes to the workflow based on learned patterns.",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/workflows/self_improving_workflow_engine.py",
      "function_name": "add_performance_feedback",
      "line_number": 647,
      "complexity": 16,
      "lines_of_code": 44,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Add external performance feedback for learning.",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/engine/decision_engine.py",
      "function_name": "_select_decision_algorithm",
      "line_number": 132,
      "complexity": 22,
      "lines_of_code": 49,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select the most appropriate decision-making algorithm based on context and historical performance.",
      "issues": [
        "High cyclomatic complexity: 22",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/engine/decision_engine.py",
      "function_name": "adapt_decision_parameters",
      "line_number": 810,
      "complexity": 27,
      "lines_of_code": 68,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Continuously adapt decision-making parameters based on performance.",
      "issues": [
        "High cyclomatic complexity: 27",
        "Too many lines of code: 68"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/engine/task_decomposer.py",
      "function_name": "_select_decomposition_strategy",
      "line_number": 262,
      "complexity": 19,
      "lines_of_code": 42,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select the optimal decomposition strategy based on task characteristics.",
      "issues": [
        "High cyclomatic complexity: 19",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/engine/task_decomposer.py",
      "function_name": "_generate_subtasks",
      "line_number": 350,
      "complexity": 16,
      "lines_of_code": 138,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Generate subtasks using AI based on the decomposition strategy.",
      "issues": [
        "High cyclomatic complexity: 16",
        "Too many lines of code: 138",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/engine/task_decomposer.py",
      "function_name": "_identify_optimizations",
      "line_number": 629,
      "complexity": 17,
      "lines_of_code": 45,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Identify potential optimizations in the decomposition and execution plan.",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/engine/task_decomposer.py",
      "function_name": "_optimize_critical_path",
      "line_number": 834,
      "complexity": 19,
      "lines_of_code": 75,
      "parameters_count": 3,
      "nested_functions": 1,
      "is_async": true,
      "docstring": "Optimize execution plan by prioritizing critical path tasks.",
      "issues": [
        "High cyclomatic complexity: 19",
        "Too many lines of code: 75"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/engine/task_decomposer.py",
      "function_name": "_optimize_resource_usage",
      "line_number": 910,
      "complexity": 21,
      "lines_of_code": 47,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Optimize execution plan for better resource utilization.",
      "issues": [
        "High cyclomatic complexity: 21"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/engine/task_decomposer.py",
      "function_name": "learn_from_execution_feedback",
      "line_number": 958,
      "complexity": 21,
      "lines_of_code": 53,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Learn from execution results to improve future decompositions.",
      "issues": [
        "High cyclomatic complexity: 21",
        "Too many lines of code: 53"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/goals/autonomous_goal_achievement_system.py",
      "function_name": "_select_planning_strategy",
      "line_number": 305,
      "complexity": 17,
      "lines_of_code": 33,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select the most appropriate planning strategy for the goal.",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/frameworks/collaborative_problem_solver.py",
      "function_name": "_select_collaboration_pattern",
      "line_number": 194,
      "complexity": 17,
      "lines_of_code": 33,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select the most appropriate collaboration pattern for the problem.",
      "issues": [
        "High cyclomatic complexity: 17",
        "Deep nesting level: 6"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/frameworks/collaborative_problem_solver.py",
      "function_name": "_select_participating_agents",
      "line_number": 228,
      "complexity": 24,
      "lines_of_code": 63,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select the most suitable agents for collaborative problem solving.",
      "issues": [
        "High cyclomatic complexity: 24",
        "Too many lines of code: 63"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/swarms/swarm_coordinator.py",
      "function_name": "_determine_agent_role",
      "line_number": 218,
      "complexity": 16,
      "lines_of_code": 19,
      "parameters_count": 3,
      "nested_functions": 0,
      "is_async": false,
      "docstring": "Determine the most appropriate role for an agent in the swarm.",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/localagi/swarms/swarm_coordinator.py",
      "function_name": "adapt_swarm_organization",
      "line_number": 573,
      "complexity": 17,
      "lines_of_code": 37,
      "parameters_count": 1,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Adapt swarm organization based on performance feedback.",
      "issues": [
        "High cyclomatic complexity: 17"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/services/jarvis/core/agent_coordinator.py",
      "function_name": "_select_agent",
      "line_number": 213,
      "complexity": 16,
      "lines_of_code": 37,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Select the most appropriate agent for a step",
      "issues": [
        "High cyclomatic complexity: 16"
      ]
    },
    {
      "file_path": "/opt/sutazaiapp/services/jarvis/core/plugin_manager.py",
      "function_name": "enable_plugin",
      "line_number": 147,
      "complexity": 16,
      "lines_of_code": 47,
      "parameters_count": 2,
      "nested_functions": 0,
      "is_async": true,
      "docstring": "Enable a plugin",
      "issues": [
        "High cyclomatic complexity: 16",
        "Deep nesting level: 5"
      ]
    }
  ],
  "analysis_timestamp": "2025-08-11T01:17:55.515665"
}