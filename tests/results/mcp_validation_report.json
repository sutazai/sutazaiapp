{
  "validation_summary": {
    "timestamp": "2025-08-15T13:48:28.792083",
    "total_tests": 33,
    "passed_tests": 30,
    "failed_tests": 3,
    "success_rate": 90.9090909090909,
    "overall_health": "HEALTHY",
    "production_ready": false
  },
  "category_summaries": {
    "MCP Infrastructure": {
      "passed": 8,
      "total": 9,
      "success_rate": 88.88888888888889,
      "status": "PASS"
    },
    "Automation Components": {
      "passed": 11,
      "total": 11,
      "success_rate": 100.0,
      "status": "PASS"
    },
    "System Integration": {
      "passed": 5,
      "total": 5,
      "success_rate": 100.0,
      "status": "PASS"
    },
    "Performance": {
      "passed": 5,
      "total": 5,
      "success_rate": 100.0,
      "status": "PASS"
    },
    "Security": {
      "passed": 3,
      "total": 5,
      "success_rate": 60.0,
      "status": "FAIL"
    }
  },
  "detailed_results": [
    {
      "test_name": "MCP Configuration",
      "success": true,
      "message": "Found 17 MCP servers configured",
      "details": {
        "servers": [
          "language-server",
          "github",
          "ultimatecoder",
          "sequentialthinking",
          "context7",
          "files",
          "http",
          "ddg",
          "postgres",
          "extended-memory",
          "mcp_ssh",
          "nx-mcp",
          "puppeteer-mcp",
          "memory-bank-mcp",
          "playwright-mcp",
          "knowledge-graph-mcp",
          "compass-mcp"
        ]
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "MCP Wrapper Scripts",
      "success": true,
      "message": "Found 16 wrapper scripts",
      "details": {
        "scripts": [
          "context7.sh",
          "playwright-mcp.sh",
          "language-server.sh",
          "compass-mcp.sh",
          "memory-bank-mcp.sh",
          "ddg.sh",
          "files.sh",
          "ultimatecoder.sh",
          "puppeteer-mcp.sh",
          "mcp_ssh.sh",
          "http_fetch.sh",
          "nx-mcp.sh",
          "sequentialthinking.sh",
          "postgres.sh",
          "knowledge-graph-mcp.sh",
          "extended-memory.sh"
        ]
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "MCP Server: language-server",
      "success": true,
      "message": "Health check passed",
      "details": {
        "output": "\n\u001b[1;36m== language-server selfcheck 2025-08-15T13:48:26+0200 ==\u001b[0m\n[OK] mcp-language-server present\n[OK] typescript-language-server present\n[OK] will cap Node memory to 512MB and limit to 6 instance"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "MCP Server: github",
      "success": false,
      "message": "Wrapper script not found",
      "details": {
        "expected_path": "None"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "MCP Server: ultimatecoder",
      "success": true,
      "message": "Health check passed",
      "details": {
        "output": "\n\u001b[1;36m== UltimateCoder MCP selfcheck 2025-08-15T13:48:26+0200 ==\u001b[0m\n[OK] venv python present\n[OK] main.py present\n[OK] fastmcp import OK\n"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "MCP Server: sequentialthinking",
      "success": true,
      "message": "Health check passed",
      "details": {
        "output": "\n\u001b[1;36m== SequentialThinking MCP selfcheck 2025-08-15T13:48:27+0200 ==\u001b[0m\n[OK] docker present\n[OK] npx present\n"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "MCP Server: context7",
      "success": true,
      "message": "Health check passed",
      "details": {
        "output": "\n\u001b[1;36m== Context7 MCP selfcheck 2025-08-15T13:48:27+0200 ==\u001b[0m\n[OK] npx present\n"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "MCP Infrastructure Overall",
      "success": true,
      "message": "Infrastructure health: 80.0% (4/5)",
      "details": {
        "healthy_servers": 4,
        "total_servers": 5,
        "success_rate": 80.0
      },
      "duration_seconds": 0.7411336898803711
    },
    {
      "test_name": "Component: Configuration Management",
      "success": true,
      "message": "Found",
      "details": {
        "path": "/opt/sutazaiapp/scripts/mcp/automation/config.py"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Component: Update Manager",
      "success": true,
      "message": "Found",
      "details": {
        "path": "/opt/sutazaiapp/scripts/mcp/automation/mcp_update_manager.py"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Component: Version Manager",
      "success": true,
      "message": "Found",
      "details": {
        "path": "/opt/sutazaiapp/scripts/mcp/automation/version_manager.py"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Component: Download Manager",
      "success": true,
      "message": "Found",
      "details": {
        "path": "/opt/sutazaiapp/scripts/mcp/automation/download_manager.py"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Component: Error Handling",
      "success": true,
      "message": "Found",
      "details": {
        "path": "/opt/sutazaiapp/scripts/mcp/automation/error_handling.py"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Component: Cleanup Manager",
      "success": true,
      "message": "Found",
      "details": {
        "path": "/opt/sutazaiapp/scripts/mcp/automation/cleanup/cleanup_manager.py"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Component: Health Monitor",
      "success": true,
      "message": "Found",
      "details": {
        "path": "/opt/sutazaiapp/scripts/mcp/automation/monitoring/health_monitor.py"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Component: Orchestrator",
      "success": true,
      "message": "Found",
      "details": {
        "path": "/opt/sutazaiapp/scripts/mcp/automation/orchestration/orchestrator.py"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Component: Test Configuration",
      "success": true,
      "message": "Found",
      "details": {
        "path": "/opt/sutazaiapp/scripts/mcp/automation/tests/conftest.py"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "CHANGELOG Files",
      "success": true,
      "message": "Found 4 CHANGELOG files",
      "details": {
        "files": [
          "/opt/sutazaiapp/scripts/mcp/automation/CHANGELOG.md",
          "/opt/sutazaiapp/scripts/mcp/automation/orchestration/CHANGELOG.md",
          "/opt/sutazaiapp/scripts/mcp/automation/cleanup/CHANGELOG.md",
          "/opt/sutazaiapp/scripts/mcp/automation/monitoring/CHANGELOG.md"
        ]
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Automation Components Overall",
      "success": true,
      "message": "Component availability: 100.0% (9/9)",
      "details": {
        "available": 9,
        "total": 9,
        "availability_rate": 100.0
      },
      "duration_seconds": 0.0015087127685546875
    },
    {
      "test_name": "Backend API Health",
      "success": true,
      "message": "Status: 200",
      "details": {
        "status_code": 200
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "PostgreSQL Database",
      "success": true,
      "message": "Database ready",
      "details": {
        "output": "/var/run/postgresql:5432 - accepting connections\n"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Redis Cache",
      "success": true,
      "message": "Cache responsive",
      "details": {
        "output": "PONG\n"
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Ollama AI Service",
      "success": true,
      "message": "AI service responsive",
      "details": {
        "status_code": 200
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "System Integration Overall",
      "success": true,
      "message": "Integration health: 100.0% (4/4)",
      "details": {
        "healthy": 4,
        "total": 4,
        "integration_rate": 100.0
      },
      "duration_seconds": 0.1733849048614502
    },
    {
      "test_name": "CPU Utilization",
      "success": true,
      "message": "CPU usage: 5.9%",
      "details": {
        "cpu_percent": 5.9,
        "threshold": 80
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Memory Utilization",
      "success": true,
      "message": "Memory usage: 49.1%",
      "details": {
        "memory_percent": 49.1,
        "threshold": 85
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Disk Utilization",
      "success": true,
      "message": "Disk usage: 4.7%",
      "details": {
        "disk_percent": 4.7,
        "threshold": 90
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "API Response Time",
      "success": true,
      "message": "Response time: 2.9ms",
      "details": {
        "response_time_ms": 2.9256343841552734,
        "threshold_ms": 1000
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Performance Overall",
      "success": true,
      "message": "Performance health: 100.0% (4/4)",
      "details": {
        "healthy": 4,
        "total": 4,
        "performance_rate": 100.0
      },
      "duration_seconds": 1.003526210784912
    },
    {
      "test_name": "MCP Configuration Protection",
      "success": true,
      "message": "MCP config stable for 16.0 hours",
      "details": {
        "age_hours": 16.035757929947643,
        "threshold_hours": 1
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Wrapper Script Security",
      "success": true,
      "message": "Wrapper scripts have secure permissions",
      "details": {
        "scripts_checked": 16
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Secret Scan",
      "success": false,
      "message": "Potential hardcoded secrets found",
      "details": {
        "patterns_checked": [
          "password=",
          "token=",
          "api_key=",
          "secret="
        ]
      },
      "duration_seconds": 0.0
    },
    {
      "test_name": "Security Compliance Overall",
      "success": false,
      "message": "Security compliance: 66.7% (2/3)",
      "details": {
        "compliant": 2,
        "total": 3,
        "compliance_rate": 66.66666666666666
      },
      "duration_seconds": 0.007870674133300781
    }
  ],
  "recommendations": [
    "Review MCP server health and wrapper script configurations",
    "Address security compliance issues and hardening requirements"
  ],
  "next_steps": [
    "5. Address security compliance and protection requirements"
  ]
}