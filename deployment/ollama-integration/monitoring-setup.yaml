# Ollama Integration Deployment Monitoring Configuration
# Comprehensive monitoring and alerting for zero-downtime deployment

monitoring:
  deployment_id: "ollama-integration-v2"
  monitoring_duration: "24h"  # Continue monitoring 24h post-deployment
  
# Metrics Collection Configuration
metrics:
  # Core system metrics
  system:
    collection_interval: "30s"
    retention_period: "7d"
    metrics:
      - name: "cpu_usage_percent"
        type: "gauge"
        labels: ["agent_name", "container_id"]
        threshold_warning: 80
        threshold_critical: 90
        
      - name: "memory_usage_mb"
        type: "gauge"
        labels: ["agent_name", "container_id"]
        threshold_warning: 200  # 78% of 256MB limit
        threshold_critical: 230  # 90% of 256MB limit
        
      - name: "disk_usage_percent"
        type: "gauge"
        labels: ["agent_name", "mount_point"]
        threshold_warning: 85
        threshold_critical: 95
        
      - name: "network_connections"
        type: "gauge"
        labels: ["agent_name", "connection_type"]
        threshold_warning: 100
        threshold_critical: 150

  # Agent-specific metrics
  agent:
    collection_interval: "15s"
    retention_period: "7d"
    metrics:
      - name: "agent_status"
        type: "enum"
        values: ["initializing", "active", "busy", "error", "shutting_down"]
        alert_on: ["error", "shutting_down"]
        
      - name: "tasks_processed_total"
        type: "counter"
        labels: ["agent_name", "task_type"]
        
      - name: "tasks_failed_total"
        type: "counter"
        labels: ["agent_name", "error_type"]
        
      - name: "task_processing_duration_seconds"
        type: "histogram"
        buckets: [0.1, 0.5, 1.0, 2.0, 5.0, 10.0, 30.0]
        labels: ["agent_name", "task_type"]
        
      - name: "agent_health_score"
        type: "gauge"
        range: [0, 1]
        threshold_warning: 0.8
        threshold_critical: 0.6

  # Ollama integration metrics
  ollama:
    collection_interval: "10s"
    retention_period: "7d"
    metrics:
      - name: "ollama_requests_total"
        type: "counter"
        labels: ["agent_name", "model", "status"]
        
      - name: "ollama_request_duration_seconds"
        type: "histogram"
        buckets: [0.5, 1.0, 2.0, 5.0, 10.0, 30.0, 60.0]
        labels: ["agent_name", "model"]
        
      - name: "ollama_connection_pool_size"
        type: "gauge"
        labels: ["agent_name"]
        threshold_warning: 8   # 80% of max pool size
        threshold_critical: 10 # 100% of max pool size
        
      - name: "ollama_circuit_breaker_state"
        type: "enum"
        values: ["closed", "open", "half_open"]
        alert_on: ["open"]
        
      - name: "ollama_queue_size"
        type: "gauge"
        labels: ["agent_name"]
        threshold_warning: 80  # 80% of max queue
        threshold_critical: 95 # 95% of max queue

  # Deployment-specific metrics  
  deployment:
    collection_interval: "5s"
    retention_period: "30d"
    metrics:
      - name: "deployment_phase"
        type: "enum"
        values: ["canary", "limited", "production", "complete"]
        
      - name: "agents_migrated_total"
        type: "counter"
        labels: ["phase", "status"]
        
      - name: "deployment_success_rate"
        type: "gauge"
        range: [0, 1]
        threshold_warning: 0.95
        threshold_critical: 0.90
        
      - name: "rollback_triggers_total"
        type: "counter"
        labels: ["trigger_type", "severity"]

# Health Check Configuration
health_checks:
  # Individual agent health checks
  agent_health:
    endpoint: "/health"
    method: "GET"
    timeout: "10s"
    interval: "30s"
    retries: 3
    success_codes: [200]
    
    checks:
      - name: "basic_connectivity"
        weight: 20
      - name: "ollama_integration"
        weight: 30
      - name: "task_processing"
        weight: 25
      - name: "resource_usage"
        weight: 15
      - name: "circuit_breaker_status"
        weight: 10

  # System-wide health checks
  system_health:
    interval: "60s"
    timeout: "30s"
    
    checks:
      - name: "overall_agent_health"
        query: "avg(agent_health_score) > 0.9"
        weight: 40
        
      - name: "task_success_rate"
        query: "rate(tasks_processed_total[5m]) / rate(tasks_failed_total[5m]) > 0.99"
        weight: 30
        
      - name: "system_resource_usage"
        query: "avg(cpu_usage_percent) < 70 AND avg(memory_usage_mb) < 180"
        weight: 20
        
      - name: "ollama_availability"
        query: "rate(ollama_requests_total{status='success'}[5m]) / rate(ollama_requests_total[5m]) > 0.95"
        weight: 10

# Alerting Configuration
alerts:
  # Critical alerts - immediate response required
  critical:
    - name: "DeploymentMemoryExhaustion"
      condition: "avg(memory_usage_mb) > 230"
      duration: "30s"
      severity: "critical"
      action: "immediate_rollback"
      channels: ["pager", "slack", "email"]
      
    - name: "DeploymentHighErrorRate"
      condition: "rate(tasks_failed_total[2m]) / rate(tasks_processed_total[2m]) > 0.05"
      duration: "60s"
      severity: "critical"
      action: "immediate_rollback"
      channels: ["pager", "slack", "email"]
      
    - name: "OllamaConnectionFailures"
      condition: "rate(ollama_requests_total{status='error'}[1m]) / rate(ollama_requests_total[1m]) > 0.10"
      duration: "60s"
      severity: "critical"
      action: "immediate_rollback"
      channels: ["pager", "slack", "email"]
      
    - name: "AgentHealthCheckFailures"
      condition: "avg(agent_health_score) < 0.6"
      duration: "120s"
      severity: "critical"
      action: "immediate_rollback"
      channels: ["pager", "slack", "email"]
      
    - name: "CircuitBreakerCascade"
      condition: "sum(increase(ollama_circuit_breaker_state{state='open'}[1m])) > 3"
      duration: "60s"
      severity: "critical"
      action: "immediate_rollback"
      channels: ["pager", "slack", "email"]

  # Warning alerts - attention required
  warning:
    - name: "DeploymentHighResponseTime"
      condition: "avg(task_processing_duration_seconds) > 5 * baseline_task_duration"
      duration: "300s"
      severity: "warning"
      action: "pause_and_evaluate"
      channels: ["slack", "email"]
      
    - name: "DeploymentMemoryPressure"
      condition: "avg(memory_usage_mb) > 190"
      duration: "300s"
      severity: "warning"
      action: "monitor_closely"
      channels: ["slack"]
      
    - name: "OllamaDegradation"
      condition: "rate(ollama_requests_total{status='success'}[5m]) / rate(ollama_requests_total[5m]) < 0.95"
      duration: "300s"
      severity: "warning" 
      action: "monitor_closely"
      channels: ["slack"]
      
    - name: "DeploymentSlowProgress"
      condition: "deployment_success_rate < 0.95"
      duration: "600s"
      severity: "warning"
      action: "review_deployment"
      channels: ["slack"]

  # Info alerts - for tracking
  info:
    - name: "DeploymentPhaseComplete"
      condition: "increase(agents_migrated_total[10m]) > 0"
      duration: "0s"
      severity: "info"
      action: "log_progress"
      channels: ["slack"]
      
    - name: "DeploymentMilestone"
      condition: "deployment_phase changes"
      duration: "0s"
      severity: "info"
      action: "update_stakeholders"
      channels: ["slack", "webhook"]

# Dashboard Configuration
dashboards:
  # Real-time deployment dashboard
  deployment_overview:
    refresh_interval: "5s"
    panels:
      - name: "Deployment Progress"
        type: "gauge"
        query: "deployment_success_rate"
        thresholds: [0.9, 0.95, 1.0]
        
      - name: "Agents by Phase"
        type: "pie_chart"
        query: "sum by (phase) (agents_migrated_total)"
        
      - name: "Error Rate Trend"
        type: "time_series"
        query: "rate(tasks_failed_total[1m]) / rate(tasks_processed_total[1m])"
        time_range: "1h"
        
      - name: "Resource Utilization"
        type: "multi_stat"
        queries:
          cpu: "avg(cpu_usage_percent)"
          memory: "avg(memory_usage_mb)"
          disk: "avg(disk_usage_percent)"

  # System health dashboard
  system_health:
    refresh_interval: "15s"
    panels:
      - name: "Agent Health Scores"
        type: "heatmap"
        query: "agent_health_score"
        grouping: "agent_name"
        
      - name: "Task Processing Rate"
        type: "time_series"
        query: "rate(tasks_processed_total[5m])"
        time_range: "4h"
        
      - name: "Ollama Performance"
        type: "time_series"
        queries:
          success_rate: "rate(ollama_requests_total{status='success'}[1m]) / rate(ollama_requests_total[1m])"
          avg_duration: "avg(ollama_request_duration_seconds)"
        time_range: "2h"

  # Ollama integration dashboard  
  ollama_integration:
    refresh_interval: "10s"
    panels:
      - name: "Connection Pool Status"
        type: "stat"
        query: "avg(ollama_connection_pool_size)"
        
      - name: "Circuit Breaker States"
        type: "stat_grid"
        query: "sum by (state) (ollama_circuit_breaker_state)"
        
      - name: "Request Queue Sizes"
        type: "time_series"
        query: "ollama_queue_size"
        grouping: "agent_name"
        time_range: "30m"
        
      - name: "Model Performance"
        type: "table"
        query: "avg by (model) (ollama_request_duration_seconds)"

# Notification Channels
notifications:
  slack:
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channel: "#deployment-alerts"
    username: "DeploymentMonitor"
    icon_emoji: ":warning:"
    
  email:
    smtp_server: "${SMTP_SERVER}"
    smtp_port: 587
    sender: "alerts@sutazai.com"
    recipients:
      - "devops-team@sutazai.com"
      - "engineering-leads@sutazai.com"
    
  pager:
    service: "pagerduty"
    integration_key: "${PAGERDUTY_KEY}"
    escalation_policy: "deployment-incidents"
    
  webhook:
    url: "${WEBHOOK_URL}"
    method: "POST"
    headers:
      Authorization: "Bearer ${WEBHOOK_TOKEN}"
      Content-Type: "application/json"

# Baseline Performance Data
baselines:
  # Pre-deployment baselines (to be populated before deployment)
  system:
    avg_cpu_usage: 0      # Will be measured pre-deployment
    avg_memory_usage: 0   # Will be measured pre-deployment
    avg_response_time: 0  # Will be measured pre-deployment
    task_success_rate: 0  # Will be measured pre-deployment
    
  # Performance targets
  targets:
    task_processing_rate: "maintain >= 95% of baseline"
    response_time_p95: "maintain <= 150% of baseline"
    error_rate: "maintain <= baseline + 0.1%"
    memory_usage: "maintain <= 120% of baseline"
    cpu_usage: "maintain <= 110% of baseline"
    ollama_success_rate: "maintain >= 99%"

# Automated Actions
automation:
  # Automatic rollback conditions
  rollback_triggers:
    - condition: "critical alert fired"
      delay: "0s"
      action: "execute_rollback"
      
    - condition: "multiple warning alerts sustained"
      delay: "300s"
      action: "pause_deployment_and_alert"
      
  # Automatic scaling
  scaling:
    - condition: "avg(cpu_usage_percent) > 85"
      action: "scale_up_resources"
      max_scale: 1.2
      
    - condition: "avg(memory_usage_mb) > 200"
      action: "reduce_batch_size"
      min_batch_size: 1

# Data Retention
retention:
  metrics: "7d"          # Keep metrics for 7 days
  logs: "30d"            # Keep logs for 30 days
  alerts: "90d"          # Keep alert history for 90 days
  deployment_data: "1y"  # Keep deployment history for 1 year

# Export Configuration
exports:
  prometheus:
    enabled: true
    endpoint: "http://prometheus:9090"
    scrape_interval: "15s"
    
  grafana:
    enabled: true
    endpoint: "http://grafana:3000"
    dashboard_sync: true
    
  elasticsearch:
    enabled: true
    endpoint: "http://elasticsearch:9200"
    index_pattern: "sutazai-deployment-*"
    
  jaeger:
    enabled: true
    endpoint: "http://jaeger:14268"
    trace_sampling: 0.1  # 10% sampling during deployment