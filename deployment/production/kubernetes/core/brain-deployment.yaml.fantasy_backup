apiVersion: v1
kind: Service
metadata:
  name: brain-core
  namespace: sutazai-core
  labels:
    app: brain-core
    tier: core
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: brain-core
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: brain-core
  namespace: sutazai-core
  labels:
    app: brain-core
    tier: core
spec:
  replicas: 3
  selector:
    matchLabels:
      app: brain-core
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: brain-core
        tier: core
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - brain-core
              topologyKey: kubernetes.io/hostname
      containers:
      - name: brain-core
        image: sutazai/brain-core:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: BRAIN_MODE
          value: "AGI"
        - name: NEURAL_THREADS
          value: "8"
        - name: MEMORY_LIMIT
          value: "16G"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: postgres-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: NEO4J_URI
          valueFrom:
            secretKeyRef:
              name: neo4j-secret
              key: uri
        - name: NEO4J_USER
          valueFrom:
            secretKeyRef:
              name: neo4j-secret
              key: username
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: neo4j-secret
              key: password
        - name: CHROMADB_URL
          value: "http://chromadb:8000"
        - name: QDRANT_URL
          value: "http://qdrant:6333"
        - name: OLLAMA_BASE_URL
          value: "http://ollama:11434"
        resources:
          requests:
            memory: "8Gi"
            cpu: "4"
          limits:
            memory: "16Gi"
            cpu: "8"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: brain-data
          mountPath: /brain/data
        - name: brain-models
          mountPath: /brain/models
        - name: brain-config
          mountPath: /brain/config
          readOnly: true
      volumes:
      - name: brain-data
        persistentVolumeClaim:
          claimName: brain-data-pvc
      - name: brain-models
        persistentVolumeClaim:
          claimName: brain-models-pvc
      - name: brain-config
        configMap:
          name: brain-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: brain-data-pvc
  namespace: sutazai-core
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: brain-models-pvc
  namespace: sutazai-core
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 500Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: brain-config
  namespace: sutazai-core
data:
  config.yaml: |
    brain:
      mode: AGI
      learning:
        enabled: true
        rate: 0.001
        batch_size: 32
      memory:
        episodic:
          capacity: 1000000
          retention_days: 365
        working:
          capacity: 1000
          ttl_seconds: 3600
        long_term:
          compression: true
          indexing: true
      reasoning:
        max_depth: 10
        timeout_seconds: 300
        parallel_branches: 5
      consciousness:
        enabled: true
        awareness_level: high
        self_reflection: true