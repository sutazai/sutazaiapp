# RBAC configuration for SutazAI
---
# Service accounts
apiVersion: v1
kind: ServiceAccount
metadata:
  name: brain-core
  namespace: sutazai-core
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-runner
  namespace: sutazai-agents
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring
  namespace: sutazai-monitoring
---
# Cluster roles
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sutazai-brain-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sutazai-agent-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sutazai-monitoring-role
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
---
# Role bindings
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: brain-core-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sutazai-brain-role
subjects:
- kind: ServiceAccount
  name: brain-core
  namespace: sutazai-core
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent-runner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sutazai-agent-role
subjects:
- kind: ServiceAccount
  name: agent-runner
  namespace: sutazai-agents
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: monitoring-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sutazai-monitoring-role
subjects:
- kind: ServiceAccount
  name: monitoring
  namespace: sutazai-monitoring
---
# Namespace-specific roles
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: agent-manager
  namespace: sutazai-agents
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/exec"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/scale"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: agent-manager-binding
  namespace: sutazai-agents
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: agent-manager
subjects:
- kind: ServiceAccount
  name: agent-runner
  namespace: sutazai-agents
---
# Security policies
apiVersion: policy/v1
kind: PodSecurityPolicy
metadata:
  name: sutazai-restricted
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false