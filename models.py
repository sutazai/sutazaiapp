"""ModelsfortheSutazAIapplication,definingdatabaseschemas."""#Standardlibraryimportsimportrefromdatetimeimportdatetime#Third-partyimportsfromsqlalchemyimportColumn,Integer,String,DateTime,Boolean,ForeignKey,Index,CheckConstraintfromsqlalchemy.ormimportrelationship,validatesfromsqlalchemy.ext.declarativeimportdeclarative_basefromsqlalchemy.sqlimportfuncBase=declarative_base()classUser(Base):"""Usermodelforstoringuserinformation."""__tablename__="users"id=Column(Integer,primary_key=True,index=True)email=Column(String(255),unique=True,index=True,nullable=False)hashed_password=Column(String(255),nullable=False)is_active=Column(Boolean,default=True,nullable=False)created_at=Column(DateTime(timezone=True),server_default=func.now(),nullable=False)updated_at=Column(DateTime(timezone=True),onupdate=func.now())last_login=Column(DateTime(timezone=True))#Relationshipssessions=relationship("Session",back_populates="user",cascade="all,delete-orphan")settings=relationship("UserSettings",back_populates="user",uselist=False,cascade="all,delete-orphan")#Indexes__table_args__=(Index('idx_user_email_active','email','is_active'),)@validates('email')defvalidate_email(self,_key,email):"""Validatetheemailformat."""ifnotemailornotre.match(r"[^@]+@[^@]+\.[^@]+",email):raiseValueError("Invalidemailformat")returnemail.lower()@validates('hashed_password')defvalidate_hashed_password(self,_key,password):"""Validatethehashedpasswordlength."""ifnotpasswordorlen(password)<60:#AssumingbcrypthashlengthraiseValueError("Invalidhashedpassword")returnpasswordclassSession(Base):"""Sessionmodelforstoringusersessioninformation."""__tablename__="sessions"id=Column(Integer,primary_key=True,index=True)user_id=Column(Integer,ForeignKey('users.id',ondelete='CASCADE'),nullable=False)token=Column(String(255),unique=True,index=True,nullable=False)expires_at=Column(DateTime(timezone=True),nullable=False)created_at=Column(DateTime(timezone=True),server_default=func.now(),nullable=False)ip_address=Column(String(45))#IPv6length#Relationshipsuser=relationship("User",back_populates="sessions")#Indexes__table_args__=(Index('idx_session_token_expires','token','expires_at'),)@validates('token')defvalidate_token(self,_key,token):"""Validatethetokenlength."""ifnottokenorlen(token)<32:raiseValueError("Invalidtoken")returntoken@validates('ip_address')defvalidate_ip(self,_key,ip):"""ValidatetheIPaddresslength."""ifnotiporlen(ip)>45:raiseValueError("InvalidIPaddress")returnipclassUserSettings(Base):"""UserSettingsmodelforstoringuserpreferences."""__tablename__="user_settings"id=Column(Integer,primary_key=True,index=True)user_id=Column(Integer,ForeignKey('users.id',ondelete='CASCADE'),unique=True,nullable=False)theme=Column(String(20),default='light',nullable=False)notifications_enabled=Column(Boolean,default=True,nullable=False)created_at=Column(DateTime(timezone=True),server_default=func.now(),nullable=False)updated_at=Column(DateTime(timezone=True),server_default=func.now(),onupdate=func.now(),nullable=False)#Relationshipsuser=relationship("User",back_populates="settings")#Validations@validates('theme')defvalidate_theme(self,_key,theme):"""Validatethethemechoice."""valid_themes=['light','dark','system']ifthemenotinvalid_themes:raiseValueError(f"Thememustbeoneof:{','.join(valid_themes)}")returntheme