version: '3.8'

# SutazAI Phase 1 Critical Agents Deployment
# 20 Critical Orchestration and Core Agents
# Port Range: 11000-11019
# Memory: ~10GB (20 agents Ã— 512MB)

x-agent-base: &agent-base
  image: python:3.11-slim
  restart: unless-stopped
  networks:
    - sutazai-network
  working_dir: /app
  environment:
    CONSUL_URL: http://consul:8500
    RABBITMQ_URL: amqp://sutazai:sutazai_rmq@rabbitmq:5672/sutazai
    REDIS_URL: redis://redis:6379/0
    OLLAMA_BASE_URL: http://ollama:11434
    LOG_LEVEL: INFO
    AGENT_POOL: python
    DEPLOYMENT_PHASE: "1"
    PHASE_PRIORITY: "critical"
  deploy:
    resources:
      limits:
        cpus: '0.5'
        memory: 512M
      reservations:
        cpus: '0.25'
        memory: 256M
  command: >
    sh -c "
      pip install --no-cache-dir fastapi uvicorn httpx redis pydantic prometheus-client &&
      python -m uvicorn app:app --host 0.0.0.0 --port 8080
    "

networks:
  sutazai-network:
    external: true

volumes:
  agent_workspaces:
    external: true

services:
  # Phase 1: Critical Orchestration Agents (11000-11019)
  
  # Primary Orchestrators
  agent-orchestrator:
    <<: *agent-base
    container_name: sutazai-agent-orchestrator-phase1
    ports:
      - "11000:8080"
    environment:
      AGENT_NAME: agent-orchestrator
      AGENT_TYPE: orchestration
      PRIORITY: critical
      AGENT_ROLE: primary-orchestrator
    volumes:
      - ./agents/agent-orchestrator:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  agentzero-coordinator:
    <<: *agent-base
    container_name: sutazai-agentzero-coordinator-phase1
    ports:
      - "11001:8080"
    environment:
      AGENT_NAME: agentzero-coordinator
      AGENT_TYPE: orchestration
      PRIORITY: critical
      AGENT_ROLE: coordination-hub
    volumes:
      - ./agents/agentzero-coordinator:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Core AI System Agents
  ai-system-architect:
    <<: *agent-base
    container_name: sutazai-ai-system-architect-phase1
    ports:
      - "11002:8080"
    environment:
      AGENT_NAME: ai-system-architect
      AGENT_TYPE: core-ai
      PRIORITY: critical
      AGENT_ROLE: system-design
    volumes:
      - ./agents/ai-system-architect:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-system-validator:
    <<: *agent-base
    container_name: sutazai-ai-system-validator-phase1
    ports:
      - "11003:8080"
    environment:
      AGENT_NAME: ai-system-validator
      AGENT_TYPE: core-ai
      PRIORITY: critical
      AGENT_ROLE: system-validation
    volumes:
      - ./agents/ai-system-validator:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Senior Development Team
  ai-senior-backend-developer:
    <<: *agent-base
    container_name: sutazai-ai-senior-backend-developer-phase1
    ports:
      - "11004:8080"
    environment:
      AGENT_NAME: ai-senior-backend-developer
      AGENT_TYPE: development
      PRIORITY: critical
      AGENT_ROLE: backend-lead
    volumes:
      - ./agents/ai-senior-backend-developer:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-senior-frontend-developer:
    <<: *agent-base
    container_name: sutazai-ai-senior-frontend-developer-phase1
    ports:
      - "11005:8080"
    environment:
      AGENT_NAME: ai-senior-frontend-developer
      AGENT_TYPE: development
      PRIORITY: critical
      AGENT_ROLE: frontend-lead
    volumes:
      - ./agents/ai-senior-frontend-developer:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-senior-full-stack-developer:
    <<: *agent-base
    container_name: sutazai-ai-senior-full-stack-developer-phase1
    ports:
      - "11006:8080"
    environment:
      AGENT_NAME: ai-senior-full-stack-developer
      AGENT_TYPE: development
      PRIORITY: critical
      AGENT_ROLE: full-stack-lead
    volumes:
      - ./agents/ai-senior-full-stack-developer:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-senior-engineer:
    <<: *agent-base
    container_name: sutazai-ai-senior-engineer-phase1
    ports:
      - "11007:8080"
    environment:
      AGENT_NAME: ai-senior-engineer
      AGENT_TYPE: development
      PRIORITY: critical
      AGENT_ROLE: engineering-lead
    volumes:
      - ./agents/ai-senior-engineer:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Management Agents
  ai-product-manager:
    <<: *agent-base
    container_name: sutazai-ai-product-manager-phase1
    ports:
      - "11008:8080"
    environment:
      AGENT_NAME: ai-product-manager
      AGENT_TYPE: management
      PRIORITY: critical
      AGENT_ROLE: product-strategy
    volumes:
      - ./agents/ai-product-manager:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-scrum-master:
    <<: *agent-base
    container_name: sutazai-ai-scrum-master-phase1
    ports:
      - "11009:8080"
    environment:
      AGENT_NAME: ai-scrum-master
      AGENT_TYPE: management
      PRIORITY: critical
      AGENT_ROLE: project-coordination
    volumes:
      - ./agents/ai-scrum-master:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # QA and Testing
  ai-qa-team-lead:
    <<: *agent-base
    container_name: sutazai-ai-qa-team-lead-phase1
    ports:
      - "11010:8080"
    environment:
      AGENT_NAME: ai-qa-team-lead
      AGENT_TYPE: testing
      PRIORITY: critical
      AGENT_ROLE: quality-assurance
    volumes:
      - ./agents/ai-qa-team-lead:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-testing-qa-validator:
    <<: *agent-base
    container_name: sutazai-ai-testing-qa-validator-phase1
    ports:
      - "11011:8080"
    environment:
      AGENT_NAME: ai-testing-qa-validator
      AGENT_TYPE: testing
      PRIORITY: critical
      AGENT_ROLE: test-validation
    volumes:
      - ./agents/ai-testing-qa-validator:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Infrastructure Critical
  cicd-pipeline-orchestrator:
    <<: *agent-base
    container_name: sutazai-cicd-pipeline-orchestrator-phase1
    ports:
      - "11012:8080"
    environment:
      AGENT_NAME: cicd-pipeline-orchestrator
      AGENT_TYPE: infrastructure
      PRIORITY: critical
      AGENT_ROLE: deployment-automation
    volumes:
      - ./agents/cicd-pipeline-orchestrator:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  deployment-automation-master:
    <<: *agent-base
    container_name: sutazai-deployment-automation-master-phase1
    ports:
      - "11013:8080"
    environment:
      AGENT_NAME: deployment-automation-master
      AGENT_TYPE: infrastructure
      PRIORITY: critical
      AGENT_ROLE: deployment-master
    volumes:
      - ./agents/deployment-automation-master:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Security Critical
  adversarial-attack-detector:
    <<: *agent-base
    container_name: sutazai-adversarial-attack-detector-phase1
    ports:
      - "11014:8080"
    environment:
      AGENT_NAME: adversarial-attack-detector
      AGENT_TYPE: security
      PRIORITY: critical
      AGENT_ROLE: threat-detection
    volumes:
      - ./agents/adversarial-attack-detector:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Agent Management
  agent-creator:
    <<: *agent-base
    container_name: sutazai-agent-creator-phase1
    ports:
      - "11015:8080"
    environment:
      AGENT_NAME: agent-creator
      AGENT_TYPE: meta-agent
      PRIORITY: critical
      AGENT_ROLE: agent-generation
    volumes:
      - ./agents/agent-creator:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  agent-debugger:
    <<: *agent-base
    container_name: sutazai-agent-debugger-phase1
    ports:
      - "11016:8080"
    environment:
      AGENT_NAME: agent-debugger
      AGENT_TYPE: meta-agent
      PRIORITY: critical
      AGENT_ROLE: agent-debugging
    volumes:
      - ./agents/agent-debugger:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Resource Management
  compute-scheduler-and-optimizer:
    <<: *agent-base
    container_name: sutazai-compute-scheduler-optimizer-phase1
    ports:
      - "11017:8080"
    environment:
      AGENT_NAME: compute-scheduler-and-optimizer
      AGENT_TYPE: resource-management
      PRIORITY: critical
      AGENT_ROLE: resource-optimization
    volumes:
      - ./agents/compute-scheduler-and-optimizer:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Emergency Response
  emergency-shutdown-coordinator:
    <<: *agent-base
    container_name: sutazai-emergency-shutdown-coordinator-phase1
    ports:
      - "11018:8080"
    environment:
      AGENT_NAME: emergency-shutdown-coordinator
      AGENT_TYPE: safety
      PRIORITY: critical
      AGENT_ROLE: emergency-management
    volumes:
      - ./agents/emergency-shutdown-coordinator:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Hardware Optimization
  cpu-only-hardware-optimizer:
    <<: *agent-base
    container_name: sutazai-cpu-hardware-optimizer-phase1
    ports:
      - "11019:8080"
    environment:
      AGENT_NAME: cpu-only-hardware-optimizer
      AGENT_TYPE: hardware-optimization
      PRIORITY: critical
      AGENT_ROLE: performance-tuning
    volumes:
      - ./agents/cpu-only-hardware-optimizer:/app
      - agent_workspaces:/workspaces
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3