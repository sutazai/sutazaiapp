class BackendValidator:    def validate_backend(self):        endpoints = ({            '/process-document': {'methods': ['POST']), 'required_params': ['file']},            '/financial-analysis': {'methods': ['POST'], 'required_params': ['data']},            '/generate-code': {'methods': ['POST'], 'required_params': ['prompt']},            '/auth/token': {'methods': ['POST'], 'required_params': ['username', 'password']}        }                for endpoint, config in endpoints.items():            # Verify endpoint exists            if not self._endpoint_exists(endpoint):                print(f" Missing endpoint: {endpoint}")                return False                        # Validate supported methods            if not self._validate_methods(endpoint, config['methods']):                print(f" Invalid methods for {endpoint}")                return False                        # Test parameter validation            if not self._test_parameters(endpoint, config['required_params']):                print(f" Parameter validation failed for {endpoint}")                return False                        print(f" {endpoint} validated")        return True 