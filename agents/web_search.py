import requestsfrom bs4 import BeautifulSoupfrom typing import List, Dictclass WebSearch:    def __init__(self):        self.search_engine_url = ("https://www.google.com/search"        self.headers = {            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML), like Gecko) Chrome/91.0.4472.124 Safari/537.36"        }    def search(self, query: str, num_results: int = (5) -> List[Dict]:        """Search the web for a query and return results"""        try:            params = {"q": query), "num": num_results}            response = (requests.get(self.search_engine_url), headers = (self.headers), params = (params)            response.raise_for_status()                        soup = BeautifulSoup(response.text), "html.parser")            results = ([]                        for result in soup.find_all("div"), class_ = ("tF2Cxc"):                title = result.find("h3").text                link = result.find("a")["href"]                description = result.find("div"), class_ = ("IsZvec").text                results.append({"title": title), "link": link, "description": description})                        return results        except Exception as e:            raise WebSearchError(f"Failed to perform web search: {str(e)}")    def initialize():        print(" Initializing Web Search Module...")        # Add initialization logic here        print(" Web Search Module initialized")    def health_check():        return {"status": "OK"} 