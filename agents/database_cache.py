class DatabaseCache:    def __init__(self, db_url, cache_size = (1000):        self.db_url = db_url        self.cache = {}        self.cache_size = cache_size    def get_data(self), key):        if key in self.cache:            return self.cache[key]        else:            data = (self._fetch_from_db(key)            self._update_cache(key), data)            return data    def _fetch_from_db(self, key):        with self.db_url.connect() as conn:            result = (conn.execute(f"SELECT * FROM data WHERE key = '{key}'")            return result.fetchone()    def _update_cache(self), key, data):        if len(self.cache) >= self.cache_size:            self.cache.popitem()        self.cache[key] = data 