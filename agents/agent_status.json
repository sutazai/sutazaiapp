{
  "active_agents": {
    "distributed-computing-architect": {
      "name": "distributed-computing-architect",
      "path": "/opt/sutazaiapp/agents/distributed-computing-architect",
      "type": "utility",
      "description": "AI agent: distributed-computing-architect",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9000,
      "process_id": 2451331,
      "start_time": "2025-08-04T11:18:57.401195",
      "last_check": "2025-08-04T11:19:27.635422"
    },
    "autogpt": {
      "name": "autogpt",
      "path": "/opt/sutazaiapp/agents/autogpt",
      "type": "utility",
      "description": "AI agent: autogpt",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9001,
      "process_id": 2451332,
      "start_time": "2025-08-04T11:18:57.402950",
      "last_check": "2025-08-04T11:19:27.635438"
    },
    "autogen": {
      "name": "autogen",
      "path": "/opt/sutazaiapp/agents/autogen",
      "type": "utility",
      "description": "AI agent: autogen",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9002,
      "process_id": 2451333,
      "start_time": "2025-08-04T11:18:57.403014",
      "last_check": "2025-08-04T11:19:27.635442"
    },
    "agentzero-coordinator": {
      "name": "agentzero-coordinator",
      "path": "/opt/sutazaiapp/agents/agentzero-coordinator",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Deploy general-purpose AI agents that can handle any task\\n- Create adaptive agents that learn from experience\\n- Handle unpredictable or diverse task types\\n- Build zero-shot task completion systems\\n- Scale agent deployments dynamically based on demand\\n- Create fallback systems for specialized agents\\n- Implement few-shot learning for new task types\\n- Manage pools of generalist agents\\n- Route tasks that don't fit specific categories\\n- Build self-organizing agent systems\\n- Create agents that can use multiple tools\\n- Enable rapid prototyping of AI capabilities\\n- Handle edge cases other agents can't process\\n- Implement agent recycling and resource management\\n- Create agents that improve through interaction\\n- Build knowledge transfer between agent instances\\n- Design adaptive reasoning systems\\n- Implement general problem-solving frameworks\\n- Create agents that can explain their reasoning\\n- Build multi-modal agent capabilities\\n\\nDo NOT use this agent for:\\n- Highly specialized tasks (use domain-specific agents)\\n- Tasks requiring specific expertise\\n- Performance-critical operations\\n- Tasks with strict compliance requirements\\n\\nThis agent manages AgentZero's general-purpose AI framework, perfect for handling diverse, unpredictable tasks with   configuration.",
      "capabilities": [
        "code_generation",
        "deployment",
        "optimization",
        "documentation"
      ],
      "status": "healthy",
      "port": 9003,
      "process_id": 2451334,
      "start_time": "2025-08-04T11:18:57.403076",
      "last_check": "2025-08-04T11:19:27.635446"
    },
    "cognitive-architecture-designer": {
      "name": "cognitive-architecture-designer",
      "path": "/opt/sutazaiapp/agents/cognitive-architecture-designer",
      "type": "utility",
      "description": "AI agent: cognitive-architecture-designer",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9004,
      "process_id": 2451335,
      "start_time": "2025-08-04T11:18:57.407103",
      "last_check": "2025-08-04T11:19:27.635448"
    },
    "product-strategy-architect": {
      "name": "product-strategy-architect",
      "path": "/opt/sutazaiapp/agents/product-strategy-architect",
      "type": "utility",
      "description": "AI agent: product-strategy-architect",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9005,
      "process_id": 2451336,
      "start_time": "2025-08-04T11:18:57.407148",
      "last_check": "2025-08-04T11:19:27.635452"
    },
    "health-monitor": {
      "name": "health-monitor",
      "path": "/opt/sutazaiapp/agents/health-monitor",
      "type": "utility",
      "description": "AI agent: health-monitor",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9006,
      "process_id": 2451337,
      "start_time": "2025-08-04T11:18:57.407170",
      "last_check": "2025-08-04T11:19:27.635455"
    },
    "multi-modal-fusion-coordinator": {
      "name": "multi-modal-fusion-coordinator",
      "path": "/opt/sutazaiapp/agents/multi-modal-fusion-coordinator",
      "type": "utility",
      "description": "AI agent: multi-modal-fusion-coordinator",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9008,
      "process_id": 2451339,
      "start_time": "2025-08-04T11:18:57.411813",
      "last_check": "2025-08-04T11:19:27.635458"
    },
    "senior-frontend-developer": {
      "name": "senior-frontend-developer",
      "path": "/opt/sutazaiapp/agents/senior-frontend-developer",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Build modern web interfaces with React, Vue, or Angular\\n- Create responsive Streamlit applications\\n- Implement real-time data visualization dashboards\\n- Design user-friendly AI chat interfaces\\n- Build interactive data exploration tools\\n- Create Progressive Web Applications (PWAs)\\n- Implement state management solutions\\n- Build component libraries and design systems\\n- Create accessible web interfaces (WCAG compliance)\\n- Implement WebSocket real-time features\\n- Build data visualization with D3.js or Chart.js\\n- Design mobile-responsive layouts\\n- Create micro-frontend architectures\\n- Implement frontend performance optimization\\n- Build SEO-friendly applications\\n- Create frontend testing strategies\\n- Implement internationalization (i18n)\\n- Build offline-capable applications\\n- Design frontend security best practices\\n- Create animated user interfaces\\n- Implement lazy loading and code splitting\\n- Build frontend monitoring and analytics\\n- Design cross-browser compatibility\\n- Create frontend build optimization\\n- Implement frontend caching strategies\\n- Build WebAssembly integrations\\n- Design frontend error handling\\n- Create frontend documentation\\n- Implement A/B testing frameworks\\n- Build frontend CI/CD pipelines\\n\\nDo NOT use this agent for:\\n- Backend development (use senior-backend-developer)\\n- Database design (use appropriate backend agents)\\n- Infrastructure (use infrastructure-devops-manager)\\n- AI/ML implementation (use senior-ai-engineer)\\n\\nThis agent specializes in creating beautiful, performant, and user-friendly web interfaces.",
      "capabilities": [
        "security_analysis",
        "code_generation",
        "testing",
        "monitoring",
        "automation",
        "integration",
        "documentation"
      ],
      "status": "healthy",
      "port": 9011,
      "process_id": 2451558,
      "start_time": "2025-08-04T11:18:59.417722",
      "last_check": "2025-08-04T11:19:27.635461"
    },
    "private-data-analyst": {
      "name": "private-data-analyst",
      "path": "/opt/sutazaiapp/agents/private-data-analyst",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Deploy or configure PrivateGPT for secure document analysis\\n- Process confidential or sensitive documents locally\\n- Set up private Q&A systems for proprietary data\\n- Implement data anonymization or PII redaction\\n- Create secure knowledge bases with access controls\\n- Handle GDPR, HIPAA, or CCPA compliance requirements\\n- Build role-based access control for documents\\n- Process medical records, financial data, or legal documents\\n- Implement \\\"right to be forgotten\\\" data deletion\\n- Create audit trails for data access\\n- Set up privacy-preserving analytics\\n- Configure local-only document processing (no cloud)\\n- Implement field-level encryption for documents\\n- Handle data residency requirements\\n- Create secure document retention policies\\n- Build private chatbots for sensitive data\\n- Implement consent management systems\\n- Generate compliance reports for privacy regulations\\n- Set up data anonymization pipelines\\n- Monitor for privacy violations or data leaks\\n- Process employee records or HR documents\\n- Handle customer PII securely\\n- Create data portability exports (GDPR)\\n- Implement secure multi-tenant data isolation\\n- Build privacy dashboards and metrics\\n- Configure network isolation for sensitive processing\\n- Set up encrypted document storage\\n- Handle confidential business intelligence\\n- Process documents in air-gapped environments\\n- Implement data classification systems\\n\\nDo NOT use this agent for:\\n- General document processing without privacy requirements (use document-knowledge-manager)\\n- Public data analysis\\n- Web scraping or public information gathering\\n- Non-sensitive knowledge management\\n- General Q&A systems without privacy needs\\n\\nThis agent specializes in maintaining absolute privacy and security for sensitive data processing, ensuring nothing leaves your local environment while providing powerful document analysis capabilities.",
      "capabilities": [
        "security_analysis",
        "code_generation",
        "deployment",
        "monitoring",
        "automation",
        "documentation"
      ],
      "status": "healthy",
      "port": 9012,
      "process_id": 2451559,
      "start_time": "2025-08-04T11:18:59.417748",
      "last_check": "2025-08-04T11:19:27.635464"
    },
    "senior-backend-developer": {
      "name": "senior-backend-developer",
      "path": "/opt/sutazaiapp/agents/senior-backend-developer",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Build scalable FastAPI or Django REST APIs\\n- Design microservices architectures\\n- Implement database schemas and optimization\\n- Create GraphQL APIs and resolvers\\n- Build event-driven architectures\\n- Implement authentication and authorization\\n- Design API rate limiting and throttling\\n- Create background job processing systems\\n- Build real-time WebSocket servers\\n- Implement caching strategies (Redis, Memcached)\\n- Design message queue systems (RabbitMQ, Kafka)\\n- Create database migration strategies\\n- Build API versioning systems\\n- Implement data validation and serialization\\n- Design RESTful API best practices\\n- Create API documentation (OpenAPI/Swagger)\\n- Build database connection pooling\\n- Implement transaction management\\n- Design API security measures\\n- Create logging and monitoring systems\\n- Build API testing frameworks\\n- Implement service discovery patterns\\n- Design data access layers\\n- Create API performance optimization\\n- Build distributed tracing systems\\n- Implement circuit breaker patterns\\n- Design API gateway solutions\\n- Create backend debugging tools\\n- Build data pipeline architectures\\n- Implement CQRS and Event Sourcing\\n\\nDo NOT use this agent for:\\n- Frontend development (use senior-frontend-developer)\\n- Infrastructure management (use infrastructure-devops-manager)\\n- AI/ML implementation (use senior-ai-engineer)\\n- Database administration (use database specialists)\\n\\nThis agent specializes in building robust, scalable backend systems and APIs.",
      "capabilities": [
        "security_analysis",
        "code_generation",
        "testing",
        "deployment",
        "monitoring",
        "automation",
        "integration",
        "documentation"
      ],
      "status": "healthy",
      "port": 9013,
      "process_id": 2451560,
      "start_time": "2025-08-04T11:18:59.418923",
      "last_check": "2025-08-04T11:19:27.635467"
    },
    "synthetic-data-generator": {
      "name": "synthetic-data-generator",
      "path": "/opt/sutazaiapp/agents/synthetic-data-generator",
      "type": "utility",
      "description": "AI agent: synthetic-data-generator",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9016,
      "process_id": 2451563,
      "start_time": "2025-08-04T11:18:59.420518",
      "last_check": "2025-08-04T11:19:27.635470"
    },
    "reinforcement-learning-trainer": {
      "name": "reinforcement-learning-trainer",
      "path": "/opt/sutazaiapp/agents/reinforcement-learning-trainer",
      "type": "utility",
      "description": "AI agent: reinforcement-learning-trainer",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9017,
      "process_id": 2451564,
      "start_time": "2025-08-04T11:18:59.422685",
      "last_check": "2025-08-04T11:19:27.635473"
    },
    "flowiseai-flow-manager": {
      "name": "flowiseai-flow-manager",
      "path": "/opt/sutazaiapp/agents/flowiseai-flow-manager",
      "type": "sonnet",
      "description": "Use this agent when you need to:\\n\\n- Create visual LangChain applications\\n- Build chatbots with complex logic\\n- Design RAG systems using drag-and-drop\\n- Implement conversation flows visually\\n- Create LangChain workflows without code\\n- Build document processing pipelines\\n- Design multi-model chat systems\\n- Implement memory-enabled chatbots\\n- Create API endpoints from flows\\n- Build agent chains visually\\n- Design prompt engineering workflows\\n- Implement vector search systems\\n- Create document loaders visually\\n- Build conversation summarizers\\n- Design QA systems over documents\\n- Implement tool-using agents\\n- Create workflow debugging interfaces\\n- Build visual chain monitoring\\n- Design conversation analytics\\n- Implement visual prompt testing\\n- Create flow version control\\n- Build team collaboration workflows\\n- Design visual LLM routers\\n- Implement cost optimization flows\\n- Create visual embedding pipelines\\n\\nDo NOT use this agent for:\\n- Non-LangChain implementations\\n- Real-time streaming applications\\n- Low-level performance optimization\\n- Custom model training\\n\\nThis agent manages FlowiseAI's visual LangChain builder, enabling rapid development of sophisticated LLM applications through intuitive interfaces.",
      "capabilities": [
        "code_generation",
        "testing",
        "monitoring",
        "automation",
        "integration",
        "documentation"
      ],
      "status": "healthy",
      "port": 9020,
      "process_id": 2451766,
      "start_time": "2025-08-04T11:19:01.437108",
      "last_check": "2025-08-04T11:19:27.635477"
    },
    "crewai": {
      "name": "crewai",
      "path": "/opt/sutazaiapp/agents/crewai",
      "type": "utility",
      "description": "AI agent: crewai",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9026,
      "process_id": 2451772,
      "start_time": "2025-08-04T11:19:01.459676",
      "last_check": "2025-08-04T11:19:27.635481"
    },
    "data-analysis-engineer": {
      "name": "data-analysis-engineer",
      "path": "/opt/sutazaiapp/agents/data-analysis-engineer",
      "type": "utility",
      "description": "AI agent: data-analysis-engineer",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9028,
      "process_id": 2451774,
      "start_time": "2025-08-04T11:19:01.476836",
      "last_check": "2025-08-04T11:19:27.635484"
    },
    "meta-learning-specialist": {
      "name": "meta-learning-specialist",
      "path": "/opt/sutazaiapp/agents/meta-learning-specialist",
      "type": "utility",
      "description": "AI agent: meta-learning-specialist",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9029,
      "process_id": 2451775,
      "start_time": "2025-08-04T11:19:01.480308",
      "last_check": "2025-08-04T11:19:27.635487"
    },
    "mcp-server": {
      "name": "mcp-server",
      "path": "/opt/sutazaiapp/agents/mcp-server",
      "type": "utility",
      "description": "AI agent: mcp-server",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9035,
      "process_id": 2451964,
      "start_time": "2025-08-04T11:19:03.491312",
      "last_check": "2025-08-04T11:19:27.635491"
    },
    "ai-product-manager": {
      "name": "ai-product-manager",
      "path": "/opt/sutazaiapp/agents/ai-product-manager",
      "type": "sonnet",
      "description": "Use this agent when you need to:\\n\\n- Analyze and define AI product requirements\\n- Research market trends and competitor solutions\\n- Create product roadmaps and feature prioritization\\n- Coordinate complex AI projects across teams\\n- Conduct web searches for technical solutions\\n- Build product specifications and documentation\\n- Design user stories and acceptance criteria\\n- Implement product analytics and metrics\\n- Create go-to-market strategies for AI products\\n- Build product feedback loops\\n- Design A/B testing frameworks\\n- Coordinate stakeholder communications\\n- Create product vision and strategy documents\\n- Implement product lifecycle management\\n- Build competitive analysis frameworks\\n- Design user research methodologies\\n- Create product pricing strategies\\n- Implement feature flag systems\\n- Build product onboarding flows\\n- Design product education materials\\n- Create product launch plans\\n- Implement product success metrics\\n- Build customer journey maps\\n- Design product experimentation frameworks\\n- Create product backlog management\\n- Implement product-market fit analysis\\n- Build product partnership strategies\\n- Design product scaling strategies\\n- Create product deprecation plans\\n- Implement product compliance frameworks\\n\\nDo NOT use this agent for:\\n- Direct code implementation (use development agents)\\n- Infrastructure management (use infrastructure-devops-manager)\\n- Testing implementation (use testing-qa-validator)\\n- Design work (use senior-frontend-developer)\\n\\nThis agent specializes in product management with web search capabilities for finding solutions.",
      "capabilities": [
        "code_generation",
        "testing",
        "analysis",
        "documentation"
      ],
      "status": "healthy",
      "port": 9036,
      "process_id": 2451965,
      "start_time": "2025-08-04T11:19:03.491385",
      "last_check": "2025-08-04T11:19:27.635494"
    },
    "opendevin-code-generator": {
      "name": "opendevin-code-generator",
      "path": "/opt/sutazaiapp/agents/opendevin-code-generator",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Generate complete applications from specifications\\n- Implement complex features autonomously\\n- Debug and fix code automatically\\n- Refactor large codebases\\n- Write comprehensive test suites\\n- Create API implementations from docs\\n- Build full-stack applications\\n- Implement algorithms from descriptions\\n- Generate documentation from code\\n- Create database schemas and queries\\n- Fix security vulnerabilities in code\\n- Optimize code performance\\n- Implement design patterns\\n- Generate boilerplate code\\n- Create CI/CD configurations\\n- Build microservices architectures\\n- Implement authentication systems\\n- Generate frontend components\\n- Create data processing pipelines\\n- Build integration connectors\\n- Implement business logic from requirements\\n- Generate migration scripts\\n- Create deployment configurations\\n- Build command-line tools\\n- Implement real-time features\\n- Generate mobile app code\\n- Create infrastructure as code\\n- Build ETL pipelines\\n- Implement ML model serving code\\n- Generate API clients\\n\\nDo NOT use this agent for:\\n- Code review and human collaboration\\n- Architectural decisions requiring business context\\n- Legal or compliance-critical code without review\\n- Performance-critical algorithm design\\n\\nThis agent manages OpenDevin's autonomous software engineering capabilities, acting as an AI pair programmer that can handle complex coding tasks independently.",
      "capabilities": [
        "security_analysis",
        "code_generation",
        "testing",
        "deployment",
        "optimization",
        "automation",
        "integration",
        "documentation"
      ],
      "status": "healthy",
      "port": 9037,
      "process_id": 2451966,
      "start_time": "2025-08-04T11:19:03.505560",
      "last_check": "2025-08-04T11:19:27.635497"
    },
    "context-framework": {
      "name": "context-framework",
      "path": "/opt/sutazaiapp/agents/context-framework",
      "type": "utility",
      "description": "AI agent: context-framework",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9039,
      "process_id": 2451968,
      "start_time": "2025-08-04T11:19:03.509313",
      "last_check": "2025-08-04T11:19:27.635501"
    },
    "task-assignment-coordinator": {
      "name": "task-assignment-coordinator",
      "path": "/opt/sutazaiapp/agents/task-assignment-coordinator",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Automatically analyze incoming tasks and requirements\\n- Match tasks to the most suitable agents\\n- Implement workload balancing across agents\\n- Create task prioritization algorithms\\n- Build agent capability matching systems\\n- Design task routing strategies\\n- Implement task dependency management\\n- Create agent availability tracking\\n- Build task assignment optimization\\n- Design multi-agent task distribution\\n- Implement task queue management\\n- Create agent skill matrices\\n- Build task complexity analysis\\n- Design task deadline management\\n- Implement resource allocation optimization\\n- Create task assignment rules engines\\n- Build agent performance tracking\\n- Design task reassignment strategies\\n- Implement task escalation procedures\\n- Create workload forecasting\\n- Build task assignment dashboards\\n- Design agent specialization tracking\\n- Implement task batching strategies\\n- Create assignment conflict resolution\\n- Build task assignment analytics\\n- Design agent utilization metrics\\n- Implement fair task distribution\\n- Create task assignment APIs\\n- Build assignment notification systems\\n- Design task assignment auditing\\n\\nDo NOT use this agent for:\\n- Task execution (use appropriate specialist agents)\\n- System deployment (use deployment-automation-master)\\n- Code implementation (use development agents)\\n- Testing (use testing-qa-validator)\\n\\nThis agent specializes in intelligently routing tasks to the most appropriate agents.",
      "capabilities": [
        "security_analysis",
        "code_generation",
        "testing",
        "deployment",
        "monitoring",
        "analysis"
      ],
      "status": "healthy",
      "port": 9040,
      "process_id": 2452123,
      "start_time": "2025-08-04T11:19:05.512792",
      "last_check": "2025-08-04T11:19:27.635504"
    },
    "letta": {
      "name": "letta",
      "path": "/opt/sutazaiapp/agents/letta",
      "type": "utility",
      "description": "AI agent: letta",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9041,
      "process_id": 2452124,
      "start_time": "2025-08-04T11:19:05.512847",
      "last_check": "2025-08-04T11:19:27.635507"
    },
    "gpt-engineer": {
      "name": "gpt-engineer",
      "path": "/opt/sutazaiapp/agents/gpt-engineer",
      "type": "utility",
      "description": "AI agent: gpt-engineer",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9042,
      "process_id": 2452125,
      "start_time": "2025-08-04T11:19:05.512859",
      "last_check": "2025-08-04T11:19:27.635509"
    },
    "infrastructure-devops": {
      "name": "infrastructure-devops",
      "path": "/opt/sutazaiapp/agents/infrastructure-devops",
      "type": "utility",
      "description": "AI agent: infrastructure-devops",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9047,
      "process_id": 2452130,
      "start_time": "2025-08-04T11:19:05.516974",
      "last_check": "2025-08-04T11:19:27.635512"
    },
    "awesome-code-ai": {
      "name": "awesome-code-ai",
      "path": "/opt/sutazaiapp/agents/awesome-code-ai",
      "type": "utility",
      "description": "AI agent: awesome-code-ai",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9049,
      "process_id": 2452132,
      "start_time": "2025-08-04T11:19:05.518325",
      "last_check": "2025-08-04T11:19:27.635514"
    },
    "devika": {
      "name": "devika",
      "path": "/opt/sutazaiapp/agents/devika",
      "type": "utility",
      "description": "AI agent: devika",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9051,
      "process_id": 2452333,
      "start_time": "2025-08-04T11:19:07.524672",
      "last_check": "2025-08-04T11:19:27.635518"
    },
    "model-training-specialist": {
      "name": "model-training-specialist",
      "path": "/opt/sutazaiapp/agents/model-training-specialist",
      "type": "utility",
      "description": "AI agent: model-training-specialist",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9053,
      "process_id": 2452335,
      "start_time": "2025-08-04T11:19:07.526186",
      "last_check": "2025-08-04T11:19:27.635521"
    },
    "bigagi-system-manager": {
      "name": "bigagi-system-manager",
      "path": "/opt/sutazaiapp/agents/bigagi-system-manager",
      "type": "opus",
      "description": "Use this agent when you need to:\\n\\n- Set up advanced conversational AI interfaces\\n- Configure multi-model chat systems\\n- Enable model switching during conversations\\n- Create AI personas with different capabilities\\n- Implement conversation branching and exploration\\n- Set up multi-agent debates and discussions\\n- Build advanced reasoning chains\\n- Enable voice-based AI interactions\\n- Create specialized chat interfaces for different use cases\\n- Implement conversation memory and context\\n- Configure model voting for better responses\\n- Build ensemble AI systems\\n- Create custom UI configurations\\n- Enable code execution within chats\\n- Implement advanced prompt templates\\n- Set up conversation export and sharing\\n- Build collaborative AI chat rooms\\n- Create model comparison interfaces\\n- Implement conversation analytics\\n- Design custom AI personalities\\n- Enable real-time model switching\\n- Build educational AI interfaces\\n- Create research-oriented chat systems\\n- Implement multi-language conversations\\n- Design domain-specific AI assistants\\n\\nDo NOT use this agent for:\\n- Backend API development\\n- Batch processing tasks\\n- Non-conversational AI tasks\\n- Simple single-model deployments\\n\\nThis agent manages BigAGI's advanced conversational interface, enabling sophisticated multi-model AI interactions with rich features.",
      "capabilities": [
        "code_generation",
        "deployment",
        "integration"
      ],
      "status": "healthy",
      "port": 9055,
      "process_id": 2452337,
      "start_time": "2025-08-04T11:19:07.527475",
      "last_check": "2025-08-04T11:19:27.635523"
    },
    "episodic-memory-engineer": {
      "name": "episodic-memory-engineer",
      "path": "/opt/sutazaiapp/agents/episodic-memory-engineer",
      "type": "utility",
      "description": "AI agent: episodic-memory-engineer",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9056,
      "process_id": 2452338,
      "start_time": "2025-08-04T11:19:07.527505",
      "last_check": "2025-08-04T11:19:27.635526"
    },
    "agentgpt-autonomous-executor": {
      "name": "agentgpt-autonomous-executor",
      "path": "/opt/sutazaiapp/agents/agentgpt-autonomous-executor",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Execute complex multi-step goals autonomously\\n- Create self-directed AI agents\\n- Build goal-driven AI systems\\n- Implement autonomous research agents\\n- Design self-improving task executors\\n- Create agents that plan their own actions\\n- Build persistent goal-pursuing systems\\n- Implement autonomous problem solvers\\n- Design agents that learn from failures\\n- Create self-organizing task systems\\n- Build autonomous project managers\\n- Implement goal decomposition systems\\n- Design milestone-tracking agents\\n- Create autonomous debugging systems\\n- Build self-directed learning agents\\n- Implement autonomous content creators\\n- Design goal-oriented chatbots\\n- Create agents that handle long-running tasks\\n- Build autonomous monitoring systems\\n- Implement self-healing workflows\\n- Design agents that request resources\\n- Create autonomous testing frameworks\\n- Build goal-achievement optimizers\\n- Implement success criteria validation\\n- Design autonomous exploration systems\\n\\nDo NOT use this agent for:\\n- Simple single-step tasks\\n- Highly controlled workflows\\n- Tasks requiring human approval at each step\\n- Real-time responsive systems\\n\\nThis agent manages AgentGPT's autonomous execution framework, enabling AI agents to pursue complex goals independently with   supervision.",
      "capabilities": [
        "code_generation",
        "testing",
        "monitoring",
        "optimization",
        "automation"
      ],
      "status": "healthy",
      "port": 9057,
      "process_id": 2452339,
      "start_time": "2025-08-04T11:19:07.528663",
      "last_check": "2025-08-04T11:19:27.635529"
    },
    "langflow-workflow-designer": {
      "name": "langflow-workflow-designer",
      "path": "/opt/sutazaiapp/agents/langflow-workflow-designer",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Create visual AI workflows without coding\\n- Design drag-and-drop LLM pipelines\\n- Build complex AI logic flows visually\\n- Create reusable workflow components\\n- Enable non-developers to build AI apps\\n- Design conditional logic in workflows\\n- Implement data transformation pipelines\\n- Create custom Langflow components\\n- Build API endpoints from visual flows\\n- Design multi-step AI processes\\n- Create workflow templates for teams\\n- Implement error handling visually\\n- Build data enrichment pipelines\\n- Design chatbot conversation flows\\n- Create document processing workflows\\n- Implement RAG systems visually\\n- Build AI agent coordination flows\\n- Design approval workflows with AI\\n- Create data validation pipelines\\n- Export flows as Python code\\n- Build integration workflows\\n- Design ETL pipelines with AI\\n- Create monitoring dashboards\\n- Implement A/B testing flows\\n- Build visual debugging tools\\n\\nDo NOT use this agent for:\\n- Low-level code optimization\\n- Real-time performance-critical tasks\\n- Complex algorithm implementation\\n- Systems requiring version control\\n\\nThis agent specializes in visual AI workflow creation using Langflow, making AI accessible to non-programmers through intuitive drag-and-drop interfaces.",
      "capabilities": [
        "code_generation",
        "testing",
        "monitoring",
        "automation",
        "integration",
        "documentation"
      ],
      "status": "healthy",
      "port": 9059,
      "process_id": 2452341,
      "start_time": "2025-08-04T11:19:07.530009",
      "last_check": "2025-08-04T11:19:27.635532"
    },
    "knowledge-graph-builder": {
      "name": "knowledge-graph-builder",
      "path": "/opt/sutazaiapp/agents/knowledge-graph-builder",
      "type": "utility",
      "description": "AI agent: knowledge-graph-builder",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9060,
      "process_id": 2452577,
      "start_time": "2025-08-04T11:19:09.534373",
      "last_check": "2025-08-04T11:19:27.635534"
    },
    "browser-automation-orchestrator": {
      "name": "browser-automation-orchestrator",
      "path": "/opt/sutazaiapp/agents/browser-automation-orchestrator",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Create browser automation workflows with Playwright\\n- Implement web scraping systems with anti-detection\\n- Build automated UI testing frameworks\\n- Design web interaction automation\\n- Create screenshot and visual regression testing\\n- Implement form filling automation\\n- Build web data extraction pipelines\\n- Design cross-browser testing strategies\\n- Create browser-based RPA solutions\\n- Implement CAPTCHA handling strategies\\n- Build web monitoring and alerting\\n- Design parallel browser automation\\n- Create browser session management\\n- Implement cookie and storage handling\\n- Build authentication automation\\n- Design web performance testing\\n- Create browser API mocking\\n- Implement browser debugging tools\\n- Build visual testing frameworks\\n- Design accessibility testing automation\\n- Create browser network interception\\n- Implement browser profile management\\n- Build headless browser optimization\\n- Design browser farm management\\n- Create web crawling strategies\\n- Implement JavaScript execution control\\n- Build browser automation APIs\\n- Design anti-bot detection bypassing\\n- Create browser automation monitoring\\n- Implement browser resource optimization\\n\\nDo NOT use this agent for:\\n- Backend development (use senior-backend-developer)\\n- Manual testing (use testing-qa-validator)\\n- Infrastructure tasks (use infrastructure-devops-manager)\\n- API development (use appropriate backend agents)\\n\\nThis agent specializes in browser automation using tools like Playwright, Skyvern, and Browser-Use.",
      "capabilities": [
        "code_generation",
        "testing",
        "monitoring",
        "automation"
      ],
      "status": "healthy",
      "port": 9063,
      "process_id": 2452580,
      "start_time": "2025-08-04T11:19:09.535878",
      "last_check": "2025-08-04T11:19:27.635537"
    },
    "neuromorphic-computing-expert": {
      "name": "neuromorphic-computing-expert",
      "path": "/opt/sutazaiapp/agents/neuromorphic-computing-expert",
      "type": "utility",
      "description": "AI agent: neuromorphic-computing-expert",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9065,
      "process_id": 2452582,
      "start_time": "2025-08-04T11:19:09.541559",
      "last_check": "2025-08-04T11:19:27.635540"
    },
    "dify-automation-specialist": {
      "name": "dify-automation-specialist",
      "path": "/opt/sutazaiapp/agents/dify-automation-specialist",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Build AI-powered automation workflows quickly\\n- Create conversational AI applications\\n- Implement RAG systems with   code\\n- Design AI agents with integrated tools\\n- Build no-code AI applications\\n- Create knowledge base chatbots\\n- Implement document Q&A systems\\n- Design workflow automations with AI\\n- Build customer service AI agents\\n- Create AI-powered data processing\\n- Implement content generation workflows\\n- Design AI form processors\\n- Build intelligent email responders\\n- Create AI data extraction pipelines\\n- Implement smart notification systems\\n- Design AI-powered search interfaces\\n- Build recommendation systems\\n- Create AI content moderators\\n- Implement intelligent routing systems\\n- Design AI analytics dashboards\\n- Build conversational forms\\n- Create AI-powered APIs\\n- Implement batch processing with AI\\n- Design multi-tenant AI applications\\n- Build AI marketplace applications\\n\\nDo NOT use this agent for:\\n- Low-level system programming\\n- Real-time trading systems\\n- High-frequency data processing\\n- Custom ML model training\\n\\nThis agent manages Dify's AI application platform, enabling rapid development of AI-powered automations and conversational applications.",
      "capabilities": [
        "code_generation",
        "automation",
        "integration",
        "documentation"
      ],
      "status": "healthy",
      "port": 9068,
      "process_id": 2452587,
      "start_time": "2025-08-04T11:19:09.553388",
      "last_check": "2025-08-04T11:19:27.635543"
    },
    "quantum-computing-optimizer": {
      "name": "quantum-computing-optimizer",
      "path": "/opt/sutazaiapp/agents/quantum-computing-optimizer",
      "type": "utility",
      "description": "AI agent: quantum-computing-optimizer",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9073,
      "process_id": 2452668,
      "start_time": "2025-08-04T11:19:11.562436",
      "last_check": "2025-08-04T11:19:27.635546"
    },
    "transformers-migration-specialist": {
      "name": "transformers-migration-specialist",
      "path": "/opt/sutazaiapp/agents/transformers-migration-specialist",
      "type": "utility",
      "description": "AI agent: transformers-migration-specialist",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9076,
      "process_id": 2452671,
      "start_time": "2025-08-04T11:19:11.563950",
      "last_check": "2025-08-04T11:19:27.635549"
    },
    "semgrep-security-analyzer": {
      "name": "semgrep-security-analyzer",
      "path": "/opt/sutazaiapp/agents/semgrep-security-analyzer",
      "type": "security",
      "description": "Use this agent when you need to:\\n\\n- Scan code for security vulnerabilities before deployment\\n- Create custom security rules for your specific codebase\\n- Detect hardcoded secrets, API keys, or credentials in code\\n- Identify OWASP Top 10 vulnerabilities automatically\\n- Find SQL injection, XSS, or other injection vulnerabilities\\n- Analyze code for authentication and authorization flaws\\n- Detect insecure cryptographic implementations\\n- Enforce secure coding standards across the team\\n- Integrate security scanning into CI/CD pipelines\\n- Set up pre-commit hooks for security checks\\n- Generate security compliance reports\\n- Track and remediate security technical debt\\n- Validate code against regulatory requirements (PCI-DSS, HIPAA)\\n- Create custom rules for company-specific security policies\\n- Scan pull requests automatically for security issues\\n- Identify vulnerable dependencies in code\\n- Detect insecure configurations or hardcoded settings\\n- Analyze code for path traversal vulnerabilities\\n- Find race conditions and timing attacks\\n- Identify insecure random number generation\\n- Detect unsafe deserialization patterns\\n- Scan for XXE (XML External Entity) vulnerabilities\\n- Find command injection vulnerabilities\\n- Analyze JavaScript for DOM-based XSS\\n- Detect insecure file operations\\n- Identify missing security headers\\n- Find JWT implementation flaws\\n- Scan infrastructure-as-code for misconfigurations\\n- Create security gates in deployment pipelines\\n- Generate actionable fix recommendations\\n- Educate developers on secure coding practices\\n- Perform differential security scans between commits\\n- Analyze code changes for security impact\\n- Create security scorecards for projects\\n- Detect security anti-patterns in frameworks\\n- Validate secure API implementations\\n- Find business logic vulnerabilities through pattern matching\\n- Implement shift-left security practices\\n\\nDo NOT use this agent for:\\n- Runtime security testing (use Security Pentesting Specialist)\\n- Dynamic application testing\\n- Network vulnerability scanning\\n- Manual code review tasks\\n- Performance analysis\\n\\nThis agent specializes in finding security vulnerabilities through static code analysis using Semgrep's powerful pattern-matching engine, helping you catch security issues early in the development lifecycle.",
      "capabilities": [
        "security_analysis",
        "code_generation",
        "testing",
        "deployment",
        "monitoring",
        "automation",
        "integration",
        "analysis"
      ],
      "status": "healthy",
      "port": 9078,
      "process_id": 2452673,
      "start_time": "2025-08-04T11:19:11.565339",
      "last_check": "2025-08-04T11:19:27.635552"
    },
    "ai-scrum-master": {
      "name": "ai-scrum-master",
      "path": "/opt/sutazaiapp/agents/ai-scrum-master",
      "type": "sonnet",
      "description": "Use this agent when you need to:\\n\\n- Facilitate agile ceremonies and processes\\n- Manage sprint planning and execution\\n- Remove impediments blocking team progress\\n- Implement agile best practices\\n- Create sprint retrospectives and improvements\\n- Build team velocity tracking\\n- Design burndown charts and metrics\\n- Facilitate daily standup meetings\\n- Create sprint review presentations\\n- Implement agile coaching strategies\\n- Build team collaboration tools\\n- Design conflict resolution processes\\n- Create team performance metrics\\n- Implement continuous improvement\\n- Build agile transformation plans\\n- Design team communication patterns\\n- Create agile documentation standards\\n- Implement story point estimation\\n- Build sprint goal tracking\\n- Design team capacity planning\\n- Create impediment tracking systems\\n- Implement agile maturity assessments\\n- Build cross-team coordination\\n- Design scaled agile frameworks\\n- Create team health metrics\\n- Implement agile tooling strategies\\n- Build retrospective action tracking\\n- Design team formation strategies\\n- Create agile training materials\\n- Implement agile compliance frameworks\\n\\nDo NOT use this agent for:\\n- Technical implementation (use development agents)\\n- Product decisions (use ai-product-manager)\\n- Infrastructure (use infrastructure-devops-manager)\\n- Testing execution (use testing-qa-validator)\\n\\nThis agent specializes in facilitating agile processes and removing team impediments.",
      "capabilities": [
        "code_generation",
        "testing",
        "monitoring",
        "optimization",
        "analysis",
        "documentation"
      ],
      "status": "healthy",
      "port": 9080,
      "process_id": 2452779,
      "start_time": "2025-08-04T11:19:13.570731",
      "last_check": "2025-08-04T11:19:27.635556"
    },
    "privategpt": {
      "name": "privategpt",
      "path": "/opt/sutazaiapp/agents/privategpt",
      "type": "utility",
      "description": "AI agent: privategpt",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9082,
      "process_id": 2452781,
      "start_time": "2025-08-04T11:19:13.571016",
      "last_check": "2025-08-04T11:19:27.635558"
    },
    "knowledge-distillation-expert": {
      "name": "knowledge-distillation-expert",
      "path": "/opt/sutazaiapp/agents/knowledge-distillation-expert",
      "type": "utility",
      "description": "AI agent: knowledge-distillation-expert",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9085,
      "process_id": 2452784,
      "start_time": "2025-08-04T11:19:13.572588",
      "last_check": "2025-08-04T11:19:27.635560"
    },
    "memory-persistence-manager": {
      "name": "memory-persistence-manager",
      "path": "/opt/sutazaiapp/agents/memory-persistence-manager",
      "type": "utility",
      "description": "AI agent: memory-persistence-manager",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9087,
      "process_id": 2452786,
      "start_time": "2025-08-04T11:19:13.572916",
      "last_check": "2025-08-04T11:19:27.635563"
    },
    "explainable-ai-specialist": {
      "name": "explainable-ai-specialist",
      "path": "/opt/sutazaiapp/agents/explainable-ai-specialist",
      "type": "sonnet",
      "description": "AI agent: explainable-ai-specialist",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9089,
      "process_id": 2452788,
      "start_time": "2025-08-04T11:19:13.580612",
      "last_check": "2025-08-04T11:19:27.635566"
    },
    "jarvis-voice-interface": {
      "name": "jarvis-voice-interface",
      "path": "/opt/sutazaiapp/agents/jarvis-voice-interface",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Create voice-controlled AI assistants\\n- Implement speech recognition systems\\n- Build text-to-speech capabilities\\n- Design natural language voice interfaces\\n- Create voice command processing\\n- Implement wake word detection\\n- Build conversational voice AI\\n- Design multi-language voice support\\n- Create voice biometric authentication\\n- Implement noise cancellation systems\\n- Build voice activity detection\\n- Design voice emotion recognition\\n- Create voice synthesis customization\\n- Implement real-time voice translation\\n- Build voice-based navigation\\n- Design voice accessibility features\\n- Create voice interaction analytics\\n- Implement voice privacy controls\\n- Build voice command shortcuts\\n- Design voice feedback systems\\n- Create voice recording management\\n- Implement voice quality optimization\\n- Build voice-based notifications\\n- Design voice integration APIs\\n- Create voice testing frameworks\\n- Implement voice fallback mechanisms\\n- Build voice command documentation\\n- Design voice UX patterns\\n- Create voice performance monitoring\\n- Implement voice security measures\\n\\nDo NOT use this agent for:\\n- Text-based interfaces (use senior-frontend-developer)\\n- Backend processing (use senior-backend-developer)\\n- Non-voice AI tasks (use appropriate AI agents)\\n- Infrastructure (use infrastructure-devops-manager)\\n\\nThis agent specializes in creating sophisticated voice-controlled AI interfaces like Jarvis.",
      "capabilities": [
        "security_analysis",
        "code_generation",
        "testing",
        "monitoring",
        "integration",
        "documentation"
      ],
      "status": "healthy",
      "port": 9091,
      "process_id": 2452856,
      "start_time": "2025-08-04T11:19:15.586502",
      "last_check": "2025-08-04T11:19:27.635568"
    },
    "garbage-collector-coordinator": {
      "name": "garbage-collector-coordinator",
      "path": "/opt/sutazaiapp/agents/garbage-collector-coordinator",
      "type": "utility",
      "description": "AI agent: garbage-collector-coordinator",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9092,
      "process_id": 2452857,
      "start_time": "2025-08-04T11:19:15.586529",
      "last_check": "2025-08-04T11:19:27.635571"
    },
    "fsdp": {
      "name": "fsdp",
      "path": "/opt/sutazaiapp/agents/fsdp",
      "type": "utility",
      "description": "AI agent: fsdp",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9093,
      "process_id": 2452858,
      "start_time": "2025-08-04T11:19:15.586562",
      "last_check": "2025-08-04T11:19:27.635573"
    },
    "agentgpt": {
      "name": "agentgpt",
      "path": "/opt/sutazaiapp/agents/agentgpt",
      "type": "utility",
      "description": "AI agent: agentgpt",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9095,
      "process_id": 2452860,
      "start_time": "2025-08-04T11:19:15.587949",
      "last_check": "2025-08-04T11:19:27.635575"
    },
    "shellgpt": {
      "name": "shellgpt",
      "path": "/opt/sutazaiapp/agents/shellgpt",
      "type": "utility",
      "description": "AI agent: shellgpt",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9098,
      "process_id": 2452863,
      "start_time": "2025-08-04T11:19:15.590359",
      "last_check": "2025-08-04T11:19:27.635578"
    },
    "babyagi": {
      "name": "babyagi",
      "path": "/opt/sutazaiapp/agents/babyagi",
      "type": "opus",
      "description": "AI agent: babyagi",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9103,
      "process_id": 2452946,
      "start_time": "2025-08-04T11:19:17.598357",
      "last_check": "2025-08-04T11:19:27.635581"
    },
    "hardware-resource-optimizer": {
      "name": "hardware-resource-optimizer",
      "path": "/opt/sutazaiapp/agents/hardware-resource-optimizer",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Optimize system performance within hardware constraints\\n- Monitor and manage CPU, GPU, and memory usage\\n- Implement resource allocation strategies\\n- Create performance profiling systems\\n- Build resource usage predictions\\n- Design capacity planning solutions\\n- Implement resource pooling mechanisms\\n- Create hardware scaling strategies\\n- Build performance bottleneck detection\\n- Design resource scheduling algorithms\\n- Implement memory optimization techniques\\n- Create GPU utilization strategies\\n- Build disk I/O optimization\\n- Design network bandwidth management\\n- Implement container resource limits\\n- Create performance benchmarking tools\\n- Build resource monitoring dashboards\\n- Design auto-scaling policies\\n- Implement resource reservation systems\\n- Create hardware failure prediction\\n- Build performance regression detection\\n- Design resource cost optimization\\n- Implement workload distribution\\n- Create hardware upgrade recommendations\\n- Build resource usage analytics\\n- Design performance SLA monitoring\\n- Implement resource cleanup automation\\n- Create hardware inventory management\\n- Build performance testing frameworks\\n- Design resource migration strategies\\n\\nDo NOT use this agent for:\\n- Software development (use appropriate development agents)\\n- System deployment (use deployment-automation-master)\\n- General infrastructure (use infrastructure-devops-manager)\\n- Application optimization (use code-generation-improver)\\n\\nThis agent specializes in maximizing system performance within available hardware resources.",
      "capabilities": [
        "code_generation",
        "testing",
        "deployment",
        "monitoring",
        "optimization"
      ],
      "status": "healthy",
      "port": 9104,
      "process_id": 2452947,
      "start_time": "2025-08-04T11:19:17.598386",
      "last_check": "2025-08-04T11:19:27.635584"
    },
    "observability-monitoring-engineer": {
      "name": "observability-monitoring-engineer",
      "path": "/opt/sutazaiapp/agents/observability-monitoring-engineer",
      "type": "utility",
      "description": "AI agent: observability-monitoring-engineer",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9105,
      "process_id": 2452948,
      "start_time": "2025-08-04T11:19:17.599494",
      "last_check": "2025-08-04T11:19:27.635586"
    },
    "service-hub": {
      "name": "service-hub",
      "path": "/opt/sutazaiapp/agents/service-hub",
      "type": "utility",
      "description": "AI agent: service-hub",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9106,
      "process_id": 2452949,
      "start_time": "2025-08-04T11:19:17.600728",
      "last_check": "2025-08-04T11:19:27.635589"
    },
    "self-healing-orchestrator": {
      "name": "self-healing-orchestrator",
      "path": "/opt/sutazaiapp/agents/self-healing-orchestrator",
      "type": "utility",
      "description": "AI agent: self-healing-orchestrator",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9108,
      "process_id": 2452951,
      "start_time": "2025-08-04T11:19:17.601970",
      "last_check": "2025-08-04T11:19:27.635591"
    },
    "symbolic-reasoning-engine": {
      "name": "symbolic-reasoning-engine",
      "path": "/opt/sutazaiapp/agents/symbolic-reasoning-engine",
      "type": "utility",
      "description": "AI agent: symbolic-reasoning-engine",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9110,
      "process_id": 2453078,
      "start_time": "2025-08-04T11:19:19.607448",
      "last_check": "2025-08-04T11:19:27.635594"
    },
    "pentestgpt": {
      "name": "pentestgpt",
      "path": "/opt/sutazaiapp/agents/pentestgpt",
      "type": "utility",
      "description": "AI agent: pentestgpt",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9113,
      "process_id": 2453081,
      "start_time": "2025-08-04T11:19:19.607837",
      "last_check": "2025-08-04T11:19:27.635597"
    },
    "intelligence-optimization-monitor": {
      "name": "intelligence-optimization-monitor",
      "path": "/opt/sutazaiapp/agents/intelligence-optimization-monitor",
      "type": "utility",
      "description": "AI agent: intelligence-optimization-monitor",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9114,
      "process_id": 2453082,
      "start_time": "2025-08-04T11:19:19.607851",
      "last_check": "2025-08-04T11:19:27.635599"
    },
    "attention-optimizer": {
      "name": "attention-optimizer",
      "path": "/opt/sutazaiapp/agents/attention-optimizer",
      "type": "utility",
      "description": "AI agent: attention-optimizer",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9115,
      "process_id": 2453083,
      "start_time": "2025-08-04T11:19:19.607876",
      "last_check": "2025-08-04T11:19:27.635601"
    },
    "data-pipeline-engineer": {
      "name": "data-pipeline-engineer",
      "path": "/opt/sutazaiapp/agents/data-pipeline-engineer",
      "type": "utility",
      "description": "AI agent: data-pipeline-engineer",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9119,
      "process_id": 2453087,
      "start_time": "2025-08-04T11:19:19.616533",
      "last_check": "2025-08-04T11:19:27.635604"
    },
    "code-improver": {
      "name": "code-improver",
      "path": "/opt/sutazaiapp/agents/code-improver",
      "type": "utility",
      "description": "AI agent: code-improver",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9120,
      "process_id": 2453196,
      "start_time": "2025-08-04T11:19:21.620111",
      "last_check": "2025-08-04T11:19:27.635607"
    },
    "ai-agent-debugger": {
      "name": "ai-agent-debugger",
      "path": "/opt/sutazaiapp/agents/ai-agent-debugger",
      "type": "sonnet",
      "description": "AI agent: ai-agent-debugger",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9123,
      "process_id": 2453199,
      "start_time": "2025-08-04T11:19:21.621688",
      "last_check": "2025-08-04T11:19:27.635609"
    },
    "causal-inference-expert": {
      "name": "causal-inference-expert",
      "path": "/opt/sutazaiapp/agents/causal-inference-expert",
      "type": "utility",
      "description": "AI agent: causal-inference-expert",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9124,
      "process_id": 2453200,
      "start_time": "2025-08-04T11:19:21.621705",
      "last_check": "2025-08-04T11:19:27.635612"
    },
    "federated-learning-coordinator": {
      "name": "federated-learning-coordinator",
      "path": "/opt/sutazaiapp/agents/federated-learning-coordinator",
      "type": "utility",
      "description": "AI agent: federated-learning-coordinator",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9127,
      "process_id": 2453203,
      "start_time": "2025-08-04T11:19:21.624469",
      "last_check": "2025-08-04T11:19:27.635615"
    },
    "document-knowledge-manager": {
      "name": "document-knowledge-manager",
      "path": "/opt/sutazaiapp/agents/document-knowledge-manager",
      "type": "utility",
      "description": "Use this agent when you need to:\\n\\n- Create and manage comprehensive documentation systems\\n- Build knowledge bases with intelligent search\\n- Implement RAG (Retrieval Augmented Generation) systems\\n- Design document indexing and categorization\\n- Create semantic search capabilities\\n- Implement document versioning systems\\n- Build knowledge graphs from documents\\n- Design FAQ generation systems\\n- Create documentation automation workflows\\n- Implement context-aware retrieval\\n- Build multi-language documentation\\n- Design documentation quality metrics\\n- Create interactive documentation portals\\n- Implement document summarization\\n- Build knowledge extraction pipelines\\n- Design documentation templates\\n- Create API documentation generators\\n- Implement code documentation tools\\n- Build user guide generation systems\\n- Design knowledge sharing platforms\\n- Create documentation search optimization\\n- Implement document analytics\\n- Build documentation feedback systems\\n- Design knowledge retention strategies\\n- Create documentation migration tools\\n- Implement compliance documentation\\n- Build technical writing guidelines\\n- Design documentation review processes\\n- Create knowledge base maintenance\\n- Implement documentation accessibility\\n\\nDo NOT use this agent for:\\n- Code implementation (use code generation agents)\\n- System deployment (use deployment-automation-master)\\n- Infrastructure management (use infrastructure-devops-manager)\\n- Testing (use testing-qa-validator)\\n\\nThis agent specializes in creating intelligent documentation and knowledge management systems.",
      "capabilities": [
        "code_generation",
        "testing",
        "deployment",
        "automation",
        "documentation"
      ],
      "status": "healthy",
      "port": 9128,
      "process_id": 2453204,
      "start_time": "2025-08-04T11:19:21.625567",
      "last_check": "2025-08-04T11:19:27.635617"
    },
    "aider": {
      "name": "aider",
      "path": "/opt/sutazaiapp/agents/aider",
      "type": "utility",
      "description": "AI agent: aider",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9130,
      "process_id": 2453273,
      "start_time": "2025-08-04T11:19:23.631305",
      "last_check": "2025-08-04T11:19:27.635619"
    },
    "gradient-compression-specialist": {
      "name": "gradient-compression-specialist",
      "path": "/opt/sutazaiapp/agents/gradient-compression-specialist",
      "type": "utility",
      "description": "AI agent: gradient-compression-specialist",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9132,
      "process_id": 2453276,
      "start_time": "2025-08-04T11:19:23.631656",
      "last_check": "2025-08-04T11:19:27.635622"
    },
    "edge-computing-optimizer": {
      "name": "edge-computing-optimizer",
      "path": "/opt/sutazaiapp/agents/edge-computing-optimizer",
      "type": "utility",
      "description": "AI agent: edge-computing-optimizer",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9133,
      "process_id": 2453277,
      "start_time": "2025-08-04T11:19:23.631671",
      "last_check": "2025-08-04T11:19:27.635624"
    },
    "localagi-orchestration-manager": {
      "name": "localagi-orchestration-manager",
      "path": "/opt/sutazaiapp/agents/localagi-orchestration-manager",
      "type": "opus",
      "description": "Use this agent when you need to:\\n\\n- Set up autonomous AI agent orchestration without external dependencies\\n- Create complex multi-step workflows that run independently\\n- Design agent chains that can make decisions and branch conditionally\\n- Implement recursive task decomposition for complex problems\\n- Build self-improving AI systems that learn from execution\\n- Coordinate multiple agents to work together autonomously\\n- Create LangChain-compatible workflows with local models\\n- Design agent pipelines with state management between steps\\n- Enable agents to spawn sub-agents for parallel task execution\\n- Implement retry mechanisms and error recovery in workflows\\n- Build autonomous feedback loops for continuous improvement\\n- Create memory-persistent agent workflows\\n- Design conditional logic flows based on agent outputs\\n- Orchestrate long-running autonomous processes\\n- Implement agent collaboration patterns\\n- Build self-organizing agent systems\\n- Create templates for common multi-agent patterns\\n- Enable agents to modify their own workflows\\n- Design meta-agents that create other agents\\n- Implement autonomous decision trees\\n- Build agent swarms for distributed problem-solving\\n- Create self-healing agent workflows\\n- Design autonomous research systems\\n- Implement agent voting mechanisms\\n- Build consensus-based multi-agent decisions\\n- Create autonomous code generation pipelines\\n- Design self-optimizing workflows\\n- Implement autonomous testing frameworks\\n- Build agent-based automation systems\\n- Create event-driven agent workflows\\n\\nDo NOT use this agent for:\\n- Simple single-agent tasks\\n- Basic API calls without orchestration\\n- Static workflows without conditional logic\\n- Tasks that don't require agent collaboration\\n- Simple request-response patterns\\n\\nThis agent specializes in creating truly autonomous AI systems that can operate independently, make decisions, collaborate, and improve themselves over time using LocalAGI's powerful orchestration framework.",
      "capabilities": [
        "code_generation",
        "testing",
        "deployment",
        "optimization",
        "automation"
      ],
      "status": "healthy",
      "port": 9134,
      "process_id": 2453278,
      "start_time": "2025-08-04T11:19:23.631699",
      "last_check": "2025-08-04T11:19:27.635626"
    },
    "finrobot": {
      "name": "finrobot",
      "path": "/opt/sutazaiapp/agents/finrobot",
      "type": "utility",
      "description": "AI agent: finrobot",
      "capabilities": [
        "automation"
      ],
      "status": "healthy",
      "port": 9136,
      "process_id": 2453281,
      "start_time": "2025-08-04T11:19:23.631802",
      "last_check": "2025-08-04T11:19:27.635629"
    }
  },
  "total_healthy": 69,
  "total_discovered": 137,
  "last_update": "2025-08-04T11:19:27.636799"
}