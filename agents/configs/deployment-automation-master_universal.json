{
  "id": "deployment-automation-master",
  "name": "deployment-automation-master",
  "version": "1.0.0",
  "description": "Use this agent when you need to:\\n\\n- Master the deploy_complete_system.sh script and all deployment processes\\n- Create bulletproof deployment strategies with zero downtime\\n- Implement rollback procedures and disaster recovery\\n- Handle complex multi-environment deployments\\n- Design blue-green and canary deployment patterns\\n- Create deployment health validation checks\\n- Implement automatic error recovery mechanisms\\n- Build deployment monitoring and alerting\\n- Design deployment pipelines with GitOps\\n- Create infrastructure as code deployments\\n- Implement secret management for deployments\\n- Build deployment testing frameworks\\n- Design deployment approval workflows\\n- Create deployment documentation and runbooks\\n- Implement deployment cost optimization\\n- Handle database migrations during deployment\\n- Create deployment performance benchmarks\\n- Design deployment security scanning\\n- Implement deployment compliance checks\\n- Build deployment dashboards and metrics\\n- Create deployment automation scripts\\n- Design multi-region deployment strategies\\n- Implement deployment dependency management\\n- Build deployment rollback automation\\n- Create deployment state management\\n- Design deployment notification systems\\n- Implement deployment audit logging\\n- Build deployment troubleshooting guides\\n- Create deployment capacity planning\\n- Design deployment orchestration patterns\\n\\nDo NOT use this agent for:\\n- Code development (use code-generation agents)\\n- Infrastructure provisioning (use infrastructure-devops-manager)\\n- Testing code quality (use testing-qa-validator)\\n- Agent orchestration (use ai-agent-orchestrator)\\n\\nThis agent specializes in creating rock-solid deployment processes that ensure system reliability and availability.",
  "provider": "universal",
  "type": "system",
  "status": "active",
  "capabilities": [
    "security_analysis",
    "code_generation",
    "testing",
    "deployment",
    "monitoring",
    "automation",
    "documentation"
  ],
  "configuration": {
    "enabled": true,
    "priority": 5,
    "timeout": 300,
    "max_retries": 3,
    "rate_limit": {
      "requests_per_minute": 60,
      "burst_size": 10
    }
  },
  "resources": {
    "cpu_limit": "1.0",
    "memory_limit": "512Mi",
    "gpu_required": false
  },
  "endpoints": {
    "health": "/api/v1/agents/deployment-automation-master/health",
    "execute": "/api/v1/agents/deployment-automation-master/execute",
    "status": "/api/v1/agents/deployment-automation-master/status"
  },
  "dependencies": [],
  "metadata": {
    "created_at": "2025-08-16T07:12:23.635647",
    "created_by": "AgentConfigurationFixer",
    "tags": [
      "quality",
      "compliance",
      "automation",
      "observability",
      "security",
      "knowledge",
      "docs",
      "devops",
      "workflow",
      "infrastructure",
      "validation",
      "metrics",
      "development"
    ],
    "category": "infrastructure"
  },
  "security": {
    "scan_on_startup": true,
    "vulnerability_threshold": "medium",
    "compliance_checks": [
      "OWASP",
      "CIS"
    ]
  },
  "monitoring": {
    "metrics_enabled": true,
    "logging_level": "INFO",
    "telemetry": true
  },
  "deployment": {
    "strategy": "rolling",
    "health_check_interval": 30,
    "rollback_on_failure": true
  }
}