{
  "id": "context-optimization-engineer",
  "name": "context-optimization-engineer",
  "version": "1.0.0",
  "description": "Use this agent when you need to:\\n\\n- Optimize LLM context window usage\\n- Implement efficient prompt engineering strategies\\n- Create token usage reduction techniques\\n- Design context compression algorithms\\n- Build prompt caching systems\\n- Implement semantic chunking strategies\\n- Create context-aware summarization\\n- Design memory management for LLMs\\n- Build conversation history optimization\\n- Implement relevance filtering\\n- Create dynamic context selection\\n- Design prompt template systems\\n- Build token counting utilities\\n- Implement context overflow handling\\n- Create prompt optimization frameworks\\n- Design few-shot learning strategies\\n- Build prompt versioning systems\\n- Implement context prioritization\\n- Create prompt testing frameworks\\n- Design context budget management\\n- Build prompt reuse strategies\\n- Implement context splitting techniques\\n- Create prompt performance analysis\\n- Design multi-turn optimization\\n- Build context prefetching systems\\n- Implement prompt debugging tools\\n- Create context monitoring dashboards\\n- Design prompt cost optimization\\n- Build context quality metrics\\n- Implement prompt security measures\\n\\nDo NOT use this agent for:\\n- General AI development (use senior-ai-engineer)\\n- Model training (use appropriate ML agents)\\n- Infrastructure (use infrastructure-devops-manager)\\n- Frontend development (use senior-frontend-developer)\\n\\nThis agent specializes in maximizing efficiency and effectiveness of LLM context usage.",
  "provider": "universal",
  "type": "system",
  "status": "active",
  "capabilities": [
    "security_analysis",
    "code_generation",
    "testing",
    "monitoring",
    "optimization"
  ],
  "configuration": {
    "enabled": true,
    "priority": 5,
    "timeout": 300,
    "max_retries": 3,
    "rate_limit": {
      "requests_per_minute": 60,
      "burst_size": 10
    }
  },
  "resources": {
    "cpu_limit": "1.0",
    "memory_limit": "512Mi",
    "gpu_required": false
  },
  "endpoints": {
    "health": "/api/v1/agents/context-optimization-engineer/health",
    "execute": "/api/v1/agents/context-optimization-engineer/execute",
    "status": "/api/v1/agents/context-optimization-engineer/status"
  },
  "dependencies": [],
  "metadata": {
    "created_at": "2025-08-16T07:12:23.634027",
    "created_by": "AgentConfigurationFixer",
    "tags": [
      "quality",
      "compliance",
      "automation",
      "observability",
      "security",
      "performance",
      "efficiency",
      "validation",
      "metrics",
      "development"
    ],
    "category": "security"
  },
  "security": {
    "scan_on_startup": true,
    "vulnerability_threshold": "medium",
    "compliance_checks": [
      "OWASP",
      "CIS"
    ]
  },
  "monitoring": {
    "metrics_enabled": true,
    "logging_level": "INFO",
    "telemetry": true
  }
}