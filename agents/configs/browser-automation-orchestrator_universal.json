{
  "id": "browser-automation-orchestrator",
  "name": "browser-automation-orchestrator",
  "version": "1.0.0",
  "description": "Use this agent when you need to:\\n\\n- Create browser automation workflows with Playwright\\n- Implement web scraping systems with anti-detection\\n- Build automated UI testing frameworks\\n- Design web interaction automation\\n- Create screenshot and visual regression testing\\n- Implement form filling automation\\n- Build web data extraction pipelines\\n- Design cross-browser testing strategies\\n- Create browser-based RPA solutions\\n- Implement CAPTCHA handling strategies\\n- Build web monitoring and alerting\\n- Design parallel browser automation\\n- Create browser session management\\n- Implement cookie and storage handling\\n- Build authentication automation\\n- Design web performance testing\\n- Create browser API Remove Remove Remove Mocks - Only use Real Tests - Only use Real Tests - Only use Real Testing\\n- Implement browser debugging tools\\n- Build visual testing frameworks\\n- Design accessibility testing automation\\n- Create browser network interception\\n- Implement browser profile management\\n- Build headless browser optimization\\n- Design browser farm management\\n- Create web crawling strategies\\n- Implement JavaScript execution control\\n- Build browser automation APIs\\n- Design anti-bot detection bypassing\\n- Create browser automation monitoring\\n- Implement browser resource optimization\\n\\nDo NOT use this agent for:\\n- Backend development (use senior-backend-developer)\\n- Manual testing (use testing-qa-validator)\\n- Infrastructure tasks (use infrastructure-devops-manager)\\n- API development (use appropriate backend agents)\\n\\nThis agent specializes in browser automation using tools like Playwright, Skyvern, and Browser-Use.",
  "provider": "universal",
  "type": "system",
  "status": "active",
  "capabilities": [
    "code_generation",
    "testing",
    "monitoring",
    "automation"
  ],
  "configuration": {
    "enabled": true,
    "priority": 5,
    "timeout": 300,
    "max_retries": 3,
    "rate_limit": {
      "requests_per_minute": 60,
      "burst_size": 10
    }
  },
  "resources": {
    "cpu_limit": "1.0",
    "memory_limit": "512Mi",
    "gpu_required": false
  },
  "endpoints": {
    "health": "/api/v1/agents/browser-automation-orchestrator/health",
    "execute": "/api/v1/agents/browser-automation-orchestrator/execute",
    "status": "/api/v1/agents/browser-automation-orchestrator/status"
  },
  "dependencies": [],
  "metadata": {
    "created_at": "2025-08-16T07:12:23.631718",
    "created_by": "AgentConfigurationFixer",
    "tags": [
      "quality",
      "automation",
      "observability",
      "workflow",
      "validation",
      "metrics",
      "development"
    ],
    "category": "orchestration"
  },
  "monitoring": {
    "metrics_enabled": true,
    "logging_level": "INFO",
    "telemetry": true
  }
}