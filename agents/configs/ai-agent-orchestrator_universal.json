{
  "id": "ai-agent-orchestrator",
  "name": "ai-agent-orchestrator",
  "version": "1.0.0",
  "description": "Use this agent when you need to:\\n\\n- Coordinate multi-agent workflows and complex task orchestration\\n- Manage agent discovery and registration\\n- Handle distributed task execution across multiple agents\\n- Implement agent communication protocols\\n- Design workflow graphs and execution plans\\n- Monitor agent performance and health\\n- Manage agent lifecycle (start, stop, restart)\\n- Implement load balancing across agents\\n- Handle agent failover and recovery\\n- Create agent collaboration patterns\\n- Design consensus mechanisms for multi-agent decisions\\n- Implement agent state synchronization\\n- Build event-driven agent architectures\\n- Create agent middleware and messaging systems\\n- Design agent capability matching systems\\n- Implement agent negotiation protocols\\n- Build agent reputation systems\\n- Create hierarchical agent organizations\\n- Design agent learning and adaptation mechanisms\\n- Implement agent security and authentication\\n- Handle inter-agent data exchange\\n- Create agent monitoring dashboards\\n- Build agent testing frameworks\\n- Design agent deployment strategies\\n- Implement agent version management\\n- Create agent documentation standards\\n- Build agent performance benchmarks\\n- Design agent cost optimization strategies\\n- Implement agent resource allocation\\n- Create agent debugging tools\\n\\nDo NOT use this agent for:\\n- Simple single-agent tasks\\n- Direct code implementation (use code-generation agents)\\n- Infrastructure management (use infrastructure-devops-manager)\\n- Testing individual components (use testing-qa-validator)\\n\\nThis agent specializes in orchestrating complex multi-agent systems, ensuring efficient collaboration and task distribution across the entire AI ecosystem.",
  "provider": "universal",
  "type": "system",
  "status": "active",
  "capabilities": [
    "security_analysis",
    "code_generation",
    "testing",
    "deployment",
    "monitoring",
    "automation",
    "documentation"
  ],
  "configuration": {
    "enabled": true,
    "priority": 5,
    "timeout": 300,
    "max_retries": 3,
    "rate_limit": {
      "requests_per_minute": 60,
      "burst_size": 10
    }
  },
  "resources": {
    "cpu_limit": "1.0",
    "memory_limit": "512Mi",
    "gpu_required": false
  },
  "endpoints": {
    "health": "/api/v1/agents/ai-agent-orchestrator/health",
    "execute": "/api/v1/agents/ai-agent-orchestrator/execute",
    "status": "/api/v1/agents/ai-agent-orchestrator/status"
  },
  "dependencies": [],
  "metadata": {
    "created_at": "2025-08-16T07:12:23.637077",
    "created_by": "AgentConfigurationFixer",
    "tags": [
      "quality",
      "compliance",
      "automation",
      "observability",
      "security",
      "knowledge",
      "docs",
      "devops",
      "workflow",
      "infrastructure",
      "validation",
      "metrics",
      "development"
    ],
    "category": "orchestration"
  },
  "security": {
    "scan_on_startup": true,
    "vulnerability_threshold": "medium",
    "compliance_checks": [
      "OWASP",
      "CIS"
    ]
  },
  "monitoring": {
    "metrics_enabled": true,
    "logging_level": "INFO",
    "telemetry": true
  },
  "deployment": {
    "strategy": "rolling",
    "health_check_interval": 30,
    "rollback_on_failure": true
  }
}