# SutazAI Minimal Deployment for Quick Testing
# Only core services needed for basic functionality
version: '3.8'

x-common-variables: &common-vars
  TZ: ${TZ:-UTC}
  SUTAZAI_ENV: ${SUTAZAI_ENV:-development}

networks:
  sutazai-minimal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  postgres_data_minimal:
  redis_data_minimal:
  chromadb_data_minimal:

services:
  # Core Database
  postgres:
    image: postgres:16.3-alpine
    container_name: sutazai-postgres-minimal
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sutazai}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sutazai123}
      POSTGRES_DB: ${POSTGRES_DB:-sutazai}
    volumes:
      - postgres_data_minimal:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sutazai}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - sutazai-minimal

  # Core Cache
  redis:
    image: redis:7.2-alpine
    container_name: sutazai-redis-minimal
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data_minimal:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD:-redis123} ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - sutazai-minimal

  # Vector Database (ChromaDB only for minimal setup)
  chromadb:
    image: chromadb/chroma:0.5.0
    container_name: sutazai-chromadb-minimal
    restart: unless-stopped
    volumes:
      - chromadb_data_minimal:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sutazai-minimal

  # Backend Service (using minimal requirements)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
      args:
        REQUIREMENTS_FILE: requirements-minimal.txt
    container_name: sutazai-backend-minimal
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - ./data:/data
      - ./logs:/logs
    environment:
      <<: *common-vars
      DATABASE_URL: postgresql://${POSTGRES_USER:-sutazai}:${POSTGRES_PASSWORD:-sutazai123}@postgres:5432/${POSTGRES_DB:-sutazai}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      CHROMADB_URL: http://chromadb:8000
      SECRET_KEY: ${SECRET_KEY:-minimal-dev-secret-key-not-for-production}
      API_V1_STR: /api/v1
      BACKEND_CORS_ORIGINS: '["http://localhost:8501", "http://127.0.0.1:8501"]'
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    networks:
      - sutazai-minimal
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: sutazai-frontend-minimal
    restart: unless-stopped
    volumes:
      - ./frontend:/app
    environment:
      <<: *common-vars
      BACKEND_URL: http://backend:8000
      STREAMLIT_SERVER_PORT: 8501
      STREAMLIT_SERVER_ADDRESS: 0.0.0.0
    ports:
      - "8501:8501"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - sutazai-minimal
    command: streamlit run app.py --server.port 8501 --server.address 0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s