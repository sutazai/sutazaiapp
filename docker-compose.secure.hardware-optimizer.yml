# Secure Hardware Resource Optimizer Configuration
# Use this configuration for production deployment

version: '3.8'

services:
  hardware-resource-optimizer:
    build:
      context: ./agents/hardware-resource-optimizer
      dockerfile: Dockerfile
    container_name: sutazai-hardware-resource-optimizer-secure
    user: "1001:1001"  # Non-root user explicitly set
    read_only: true    # Read-only filesystem for security
    tmpfs:
      - /tmp:noexec,nosuid,size=256m  # Secure tmp with restrictions
    security_opt:
      - no-new-privileges:true        # Prevent privilege escalation
      - apparmor:docker-default      # Enable AppArmor protection
    cap_drop:
      - ALL                          # Drop all capabilities
    cap_add:
      - NET_BIND_SERVICE            # Only allow network binding
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    environment:
      AGENT_TYPE: hardware-resource-optimizer
      API_ENDPOINT: http://backend:8000
      DATABASE_URL: postgresql://${POSTGRES_USER:-sutazai}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-sutazai}
      LOG_LEVEL: INFO
      OLLAMA_API_KEY: local
      OLLAMA_BASE_URL: http://ollama:11434
      OLLAMA_HOST: 0.0.0.0
      OLLAMA_MODEL: tinyllama:latest
      OLLAMA_ORIGINS: '*'
      PORT: 8080
      RABBITMQ_URL: amqp://${RABBITMQ_DEFAULT_USER:-sutazai}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      REDIS_URL: redis://sutazai-redis:6379/0
      SUTAZAI_ENV: ${SUTAZAI_ENV:-production}
      TZ: ${TZ:-UTC}
    healthcheck:
      interval: 30s           # More frequent checks
      retries: 3              # Faster failure detection
      start_period: 60s       # Reduced startup time
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      timeout: 10s            # Shorter timeout
    networks:
    - sutazai-network
    ports:
    - 11110:8080
    restart: unless-stopped
    volumes:
      # SECURE VOLUME MOUNTS - Read-only and  access
      - ./agents/core:/app/agents/core:ro
      - ./data:/app/data:rw,noexec          # Data access without execution
      - ./configs:/app/configs:ro           # Read-only configs
      - ./logs:/app/logs:rw,noexec          # Log writing without execution
      # REMOVED DANGEROUS MOUNTS:
      # - /proc:/host/proc:ro               # Host process access - REMOVED
      # - /sys:/host/sys:ro                 # Host system access - REMOVED  
      # - /var/run/docker.sock              # Docker daemon access - REMOVED
      # - /tmp:/host/tmp                    # Host temp access - REMOVED
    # REMOVED DANGEROUS SETTINGS:
    # pid: host                             # Host PID namespace - REMOVED
    # privileged: true                      # Privileged access - REMOVED

networks:
  sutazai-network:
    external: true
    name: sutazai-network