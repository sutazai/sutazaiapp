# Optimized Python Agent Dockerfile
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Install common Python dependencies
RUN pip install --no-cache-dir \
    fastapi==0.104.1 \
    uvicorn==0.24.0 \
    httpx==0.25.2 \
    redis==5.0.1 \
    pydantic==2.5.0 \
    prometheus-client==0.19.0 \
    psutil==5.9.6 \
    structlog==23.2.0 \
    aiofiles==23.2.1 \
    python-multipart==0.0.6

# Create startup script
RUN echo '#!/bin/bash' > /app/startup.sh && \
    echo 'set -e' >> /app/startup.sh && \
    echo '' >> /app/startup.sh && \
    echo '# Install any additional requirements if they exist' >> /app/startup.sh && \
    echo 'if [ -f /app/requirements.txt ]; then' >> /app/startup.sh && \
    echo '    echo "Installing additional requirements..."' >> /app/startup.sh && \
    echo '    pip install --no-cache-dir -r /app/requirements.txt' >> /app/startup.sh && \
    echo 'fi' >> /app/startup.sh && \
    echo '' >> /app/startup.sh && \
    echo '# Detect which Python file to run' >> /app/startup.sh && \
    echo 'if [ -f /app/main.py ]; then' >> /app/startup.sh && \
    echo '    echo "Starting with main.py..."' >> /app/startup.sh && \
    echo '    exec python -m uvicorn main:app --host 0.0.0.0 --port 8080' >> /app/startup.sh && \
    echo 'elif [ -f /app/app.py ]; then' >> /app/startup.sh && \
    echo '    echo "Starting with app.py..."' >> /app/startup.sh && \
    echo '    exec python -m uvicorn app:app --host 0.0.0.0 --port 8080' >> /app/startup.sh && \
    echo 'elif [ -f /app/container_startup.py ]; then' >> /app/startup.sh && \
    echo '    echo "Starting with container_startup.py..."' >> /app/startup.sh && \
    echo '    exec python container_startup.py' >> /app/startup.sh && \
    echo 'else' >> /app/startup.sh && \
    echo '    echo "No startup file found!"' >> /app/startup.sh && \
    echo '    exit 1' >> /app/startup.sh && \
    echo 'fi' >> /app/startup.sh && \
    chmod +x /app/startup.sh

# Default environment variables
ENV PYTHONUNBUFFERED=1
ENV LOG_LEVEL=INFO
ENV PORT=8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command
CMD ["/app/startup.sh"]