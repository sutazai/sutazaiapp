version: '3.8'
services:
  postgres:
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    environment:
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB
      POSTGRES_WORK_MEM: 4MB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
      POSTGRES_MAX_CONNECTIONS: '200'
    command: 'postgres -c shared_preload_libraries=''pg_stat_statements'' -c pg_stat_statements.track=all
      -c log_statement=''ddl'' -c log_duration=off -c log_min_duration_statement=100

      '
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -U ${POSTGRES_USER:-postgres}
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s
  redis:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
    - ./config/redis-optimized.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test:
      - CMD-SHELL
      - redis-cli ping
      interval: 30s
      timeout: 5s
      retries: 5
  backend:
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    environment:
      WORKERS: 4
      WORKER_CLASS: uvicorn.workers.UvicornWorker
      WORKER_CONNECTIONS: 1000
      WORKER_KEEPALIVE: 5
      GRACEFUL_TIMEOUT: 120
      TIMEOUT: 120
      ACCESS_LOG: '-'
      ERROR_LOG: '-'
      LOG_LEVEL: info
      ENABLE_CACHE_WARMING: 'true'
      CACHE_TTL_DEFAULT: '300'
      CACHE_TTL_STATIC: '3600'
      DB_POOL_SIZE: '20'
      DB_POOL_MAX_OVERFLOW: '10'
      REDIS_MAX_CONNECTIONS: '50'
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8000/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
  frontend:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    environment:
      STREAMLIT_SERVER_MAX_UPLOAD_SIZE: 200
      STREAMLIT_SERVER_ENABLE_CORS: 'false'
      STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION: 'true'
      STREAMLIT_BROWSER_GATHER_USAGE_STATS: 'false'
  ollama:
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G
        reservations:
          cpus: '2.0'
          memory: 2G
    environment:
      OLLAMA_NUM_PARALLEL: 2
      OLLAMA_MAX_LOADED_MODELS: 1
      OLLAMA_KEEP_ALIVE: 5m
      OLLAMA_DEBUG: 'false'
  hardware-resource-optimizer:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
  ai-agent-orchestrator:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    environment:
      RABBITMQ_CONNECTION_ATTEMPTS: 5
      RABBITMQ_RETRY_DELAY: 2
  ollama-integration:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
  resource-arbitration-agent:
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
  task-assignment-coordinator:
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
  prometheus:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --storage.tsdb.retention.time=15d
    - --storage.tsdb.retention.size=2GB
    - --web.console.libraries=/usr/share/prometheus/console_libraries
    - --web.console.templates=/usr/share/prometheus/consoles
    - --web.enable-lifecycle
  grafana:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    environment:
      GF_PERFORMANCE_ENABLED: 'true'
      GF_DATABASE_WAL: 'true'
      GF_DATABASE_CACHE_MODE: shared
  loki:
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
  qdrant:
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__STORAGE__STORAGE_PATH: /qdrant/storage
      QDRANT__STORAGE__SNAPSHOTS_PATH: /qdrant/snapshots
      QDRANT__STORAGE__ON_DISK_PAYLOAD: 'true'
      QDRANT__STORAGE__PERFORMANCE__OPTIMIZERS__MEMMAP_THRESHOLD: 20000
  chromadb:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    environment:
      CHROMA_SERVER_AUTH_PROVIDER: token
      CHROMA_SERVER_AUTH_CREDENTIALS: ${CHROMA_AUTH_TOKEN:-test-token}
      ANONYMIZED_TELEMETRY: 'false'
  faiss-vector:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
  rabbitmq:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    environment:
      RABBITMQ_VM_MEMORY_HIGH_WATERMARK: '0.6'
      RABBITMQ_DISK_FREE_LIMIT: 1GB
  kong:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    environment:
      KONG_DATABASE: 'off'
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_STATUS_LISTEN: 0.0.0.0:8100
      KONG_NGINX_WORKER_PROCESSES: '2'
  consul:
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
networks:
  sutazai-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
