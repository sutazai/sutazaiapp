# Docker Security Hardening Configuration
# Rule 11 Compliance: Comprehensive Docker security standards
# Generated: 2025-08-15 UTC

version: '3.8'

# Security-hardened service overrides
services:
  # Base security hardening for all services
  x-security-defaults: &security-defaults
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
    read_only: false  # Set to true for truly read-only containers
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/tmp:noexec,nosuid,size=50m
    ulimits:
      nofile:
        soft: 1024
        hard: 2048
      nproc:
        soft: 64
        hard: 128

  # PostgreSQL Security Hardening
  postgres:
    <<: *security-defaults
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
    environment:
      # Security configurations
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_SSL=on
      - POSTGRES_SSL_CERT_FILE=/var/lib/postgresql/server.crt
      - POSTGRES_SSL_KEY_FILE=/var/lib/postgresql/server.key
      # Performance and security tuning
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
      - POSTGRES_WORK_MEM=4MB
      - POSTGRES_MAINTENANCE_WORK_MEM=64MB
      - POSTGRES_CHECKPOINT_COMPLETION_TARGET=0.9
      - POSTGRES_WAL_BUFFERS=16MB
      - POSTGRES_DEFAULT_STATISTICS_TARGET=100
      - POSTGRES_RANDOM_PAGE_COST=1.1
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_LOG_STATEMENT=all
      - POSTGRES_LOG_MIN_DURATION_STATEMENT=1000
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
      - ./docker/security/postgres/:/docker-entrypoint-initdb.d/:ro
    ulimits:
      nofile:
        soft: 2048
        hard: 4096

  # Redis Security Hardening
  redis:
    <<: *security-defaults
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --appendfsync everysec
      --auto-aof-rewrite-percentage 100
      --auto-aof-rewrite-min-size 64mb
      --maxmemory-policy allkeys-lru
      --timeout 300
      --tcp-keepalive 300
      --save 900 1
      --save 300 10
      --save 60 10000
      --stop-writes-on-bgsave-error yes
      --rdbcompression yes
      --rdbchecksum yes
      --rename-command FLUSHDB ""
      --rename-command FLUSHALL ""
      --rename-command CONFIG ""
      --rename-command DEBUG ""
      --rename-command SHUTDOWN SHUTDOWN_SutazAI
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ulimits:
      nofile:
        soft: 10240
        hard: 20480

  # Neo4j Security Hardening
  neo4j:
    <<: *security-defaults
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4J_server_memory_heap_max__size=512m
      - NEO4J_server_memory_heap_initial__size=256m
      - NEO4J_server_memory_pagecache_size=256m
      - NEO4J_db_checkpoint_interval_time=30s
      - NEO4J_db_transaction_timeout=30s
      - NEO4J_db_logs_query_enabled=OFF
      - NEO4J_server_config_strict__validation_enabled=true
      - NEO4J_server_bolt_enabled=true
      - NEO4J_server_bolt_tls_level=OPTIONAL
      - NEO4J_server_https_enabled=true
      - NEO4J_server_http_enabled=false
    ulimits:
      nofile:
        soft: 4096
        hard: 8192

  # Backend Security Hardening
  backend:
    <<: *security-defaults
    environment:
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONHASHSEED=random
      - PYTHONOPTIMIZE=1
      - WORKERS=4
      - WORKER_CLASS=uvicorn.workers.UvicornWorker
      - MAX_REQUESTS=1000
      - MAX_REQUESTS_JITTER=100
      - TIMEOUT=120
      - KEEPALIVE=5
      - PRELOAD_APP=true
      - ACCESS_LOG_FORMAT='%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" %(D)s'
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=200m
      - /var/tmp:noexec,nosuid,size=100m
      - /app/tmp:noexec,nosuid,size=100m

  # Frontend Security Hardening
  frontend:
    <<: *security-defaults
    environment:
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=true
      - STREAMLIT_SERVER_MAX_UPLOAD_SIZE=10
      - STREAMLIT_SERVER_MAX_MESSAGE_SIZE=10
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - STREAMLIT_GLOBAL_DEVELOPMENT_MODE=false
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Ollama Security Hardening
  ollama:
    <<: *security-defaults
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
      - SYS_NICE  # For GPU access
    devices:
      - /dev/nvidia0:/dev/nvidia0  # NVIDIA GPU access (if available)
      - /dev/nvidiactl:/dev/nvidiactl
      - /dev/nvidia-modeset:/dev/nvidia-modeset
      - /dev/nvidia-uvm:/dev/nvidia-uvm
      - /dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=http://localhost:10010,http://localhost:10011
      - OLLAMA_MAX_LOADED_MODELS=3
      - OLLAMA_MAX_QUEUE=512
      - OLLAMA_NUM_PARALLEL=4
      - OLLAMA_FLASH_ATTENTION=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 8192
        hard: 16384

  # ChromaDB Security Hardening
  chromadb:
    <<: *security-defaults
    environment:
      - CHROMA_SERVER_AUTHN_CREDENTIALS=${CHROMADB_TOKEN}
      - CHROMA_SERVER_AUTHN_PROVIDER=chromadb.auth.token.TokenAuthenticationServerProvider
      - CHROMA_SERVER_AUTHZ_PROVIDER=chromadb.auth.simple.SimpleAuthorizationProvider
      - CHROMA_SERVER_AUTHZ_CONFIG_PATH=/chroma/config/authz.yaml
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=8000
      - CHROMA_SERVER_HTTP_PORT=8000
    read_only: false

  # Qdrant Security Hardening
  qdrant:
    <<: *security-defaults
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY}
      - QDRANT__SERVICE__READ_ONLY=false
      - QDRANT__SERVICE__ENABLE_CORS=false
      - QDRANT__STORAGE__PERFORMANCE__MAX_SEARCH_THREADS=4
      - QDRANT__STORAGE__PERFORMANCE__MAX_INDEXING_THREADS=2
    read_only: false

  # Monitoring Services Security
  prometheus:
    <<: *security-defaults
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=15d'
      - '--storage.tsdb.retention.size=5GB'
      - '--web.external-url=http://localhost:10200'
      - '--web.route-prefix=/'
      - '--query.timeout=120s'
      - '--query.max-concurrency=20'
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  grafana:
    <<: *security-defaults
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY}
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_SECURITY_COOKIE_SAMESITE=strict
      - GF_SECURITY_STRICT_TRANSPORT_SECURITY=true
      - GF_SECURITY_CONTENT_TYPE_PROTECTION=true
      - GF_SECURITY_X_CONTENT_TYPE_OPTIONS=nosniff
      - GF_SECURITY_X_XSS_PROTECTION=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_LOG_MODE=console file
      - GF_LOG_LEVEL=warn
      - GF_SESSION_LIFE_TIME=86400
      - GF_SESSION_COOKIE_NAME=grafana_sess
      - GF_SESSION_COOKIE_SECURE=true
    read_only: false

# Network security configurations
networks:
  sutazai-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "false"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.driver.mtu: "1500"
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# Volume security configurations
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/redis
  neo4j_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/neo4j
  chromadb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/chromadb
  qdrant_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/qdrant
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/prometheus
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/grafana