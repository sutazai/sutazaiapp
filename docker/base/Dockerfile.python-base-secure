# Base Python Image with Security Hardening
# Rule 11 Compliant: Pinned version, non-root user, health check
FROM python:3.11.9-alpine3.19

# Labels for metadata
LABEL maintainer="sutazai-team"
LABEL version="1.0.0"
LABEL description="Secure Python base image for SutazAI services"

# Security: Create non-root user and group
RUN addgroup -g 1000 -S appgroup && \
    adduser -u 1000 -S appuser -G appgroup -h /home/appuser -s /bin/sh

# Install security updates and essential packages
RUN apk update && \
    apk upgrade && \
    apk add --no-cache \
        ca-certificates \
        curl \
        tini && \
    rm -rf /var/cache/apk/*

# Create app directory with proper permissions
RUN mkdir -p /app && \
    chown -R appuser:appgroup /app

WORKDIR /app

# Copy base requirements if they exist
COPY --chown=appuser:appgroup base-requirements-minimal-alpine.txt* ./

# Install base Python packages as non-root
USER appuser

# Create virtual environment in user space
RUN python -m venv /home/appuser/venv && \
    /home/appuser/venv/bin/pip install --upgrade pip setuptools wheel

# Install base requirements if file exists
RUN if [ -f base-requirements-minimal-alpine.txt ]; then \
        /home/appuser/venv/bin/pip install --no-cache-dir -r base-requirements-minimal-alpine.txt; \
    fi

# Set Python path to use virtual environment
ENV PATH="/home/appuser/venv/bin:$PATH"
ENV PYTHONPATH="/app:$PYTHONPATH"

# Security: Set resource limits
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Health check endpoint (to be overridden by child images)
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD python -c "print('OK')" || exit 1

# Use tini as init system to handle signals properly
ENTRYPOINT ["/sbin/tini", "--"]

# Default command (to be overridden)
CMD ["python", "--version"]