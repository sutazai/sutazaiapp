# Multi-stage build for optimized Python agent
# Stage 1: Builder stage
FROM python:3.11.9-alpine3.20 AS builder

# Install build dependencies
RUN apk add --no-cache \
    build-base \
    gcc \
    musl-dev \
    libffi-dev \
    openssl-dev \
    python3-dev

# Set working directory
WORKDIR /build

# Copy requirements and install Python dependencies
COPY requirements.txt* ./
RUN pip install --no-cache-dir --user -r requirements.txt || \
    pip install --no-cache-dir --user fastapi uvicorn requests pydantic

# Stage 2: Runtime stage
FROM python:3.11.9-alpine3.20

# Labels for compliance and tracking
LABEL maintainer="SutazAI Team"
LABEL version="1.0.0"
LABEL security.scan="required"

# Security: Create non-root user
RUN addgroup -g 1001 appgroup && \
    adduser -D -u 1001 -G appgroup appuser

# Install runtime dependencies only
RUN apk add --no-cache \
    curl \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /root/.local /home/appuser/.local

# Copy application code
COPY --chown=appuser:appgroup . .

# Ensure Python packages are in PATH
ENV PATH=/home/appuser/.local/bin:$PATH
ENV PYTHONPATH=/home/appuser/.local/lib/python3.11/site-packages:$PYTHONPATH

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

# Resource limits (can be overridden in docker-compose)
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Default command
CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]
