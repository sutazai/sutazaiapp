# MCP Network Infrastructure Configuration
# Provides proper network integration for MCP services with load balancing and isolation

version: '3.8'

networks:
  sutazai-network:
    external: true
  mcp-internal:
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.20.0.0/24

services:
  # MCP Service Registry and Discovery
  mcp-consul-agent:
    image: consul:1.17.1
    container_name: sutazai-mcp-consul
    networks:
      - sutazai-network
      - mcp-internal
    ports:
      - "11090:8500"  # MCP Consul UI
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_INTERFACE=eth0
      - CONSUL_DATACENTER=mcp-cluster
    command: >
      consul agent
      -server
      -bootstrap-expect=1
      -ui
      -client=0.0.0.0
      -bind=0.0.0.0
      -data-dir=/consul/data
      -config-dir=/consul/config
    volumes:
      - mcp-consul-data:/consul/data
      - ./config/consul/mcp:/consul/config
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # MCP Load Balancer (HAProxy for multi-client support)
  mcp-load-balancer:
    image: haproxy:2.8-alpine
    container_name: sutazai-mcp-haproxy
    networks:
      - sutazai-network
      - mcp-internal
    ports:
      - "11099:8080"  # HAProxy stats
      - "11100-11199:11100-11199"  # MCP service port range
    volumes:
      - ./config/haproxy/mcp-haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - mcp-consul-agent
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8080"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: haproxy -f /usr/local/etc/haproxy/haproxy.cfg

  # MCP Network Monitor
  mcp-network-monitor:
    image: nicolaka/netshoot
    container_name: sutazai-mcp-monitor
    networks:
      - sutazai-network
      - mcp-internal
    ports:
      - "11091:8080"  # Network monitoring dashboard
    volumes:
      - ./scripts/network/monitor:/app
    working_dir: /app
    command: >
      sh -c "
        apk add --no-cache python3 py3-pip &&
        pip3 install fastapi uvicorn requests &&
        python3 monitor.py
      "
    depends_on:
      - mcp-consul-agent
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL MCP Service
  mcp-postgres:
    build:
      context: ./mcp-services/postgres
      dockerfile: Dockerfile
    container_name: sutazai-mcp-postgres
    networks:
      - sutazai-network
      - mcp-internal
    ports:
      - "11100:11100"
    environment:
      - MCP_SERVICE_NAME=postgres
      - MCP_SERVICE_PORT=11100
      - DATABASE_URL=postgresql://sutazai:sutazai@sutazai-postgres:5432/sutazai
      - CONSUL_AGENT=mcp-consul-agent:8500
    volumes:
      - ./scripts/mcp/wrappers:/opt/mcp/wrappers:ro
    depends_on:
      - mcp-consul-agent
      - sutazai-postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Files MCP Service
  mcp-files:
    build:
      context: ./mcp-services/files
      dockerfile: Dockerfile
    container_name: sutazai-mcp-files
    networks:
      - sutazai-network
      - mcp-internal
    ports:
      - "11101:11101"
    environment:
      - MCP_SERVICE_NAME=files
      - MCP_SERVICE_PORT=11101
      - MCP_ROOT_PATH=/opt/sutazaiapp
      - CONSUL_AGENT=mcp-consul-agent:8500
    volumes:
      - /opt/sutazaiapp:/opt/sutazaiapp:rw
      - ./scripts/mcp/wrappers:/opt/mcp/wrappers:ro
    depends_on:
      - mcp-consul-agent
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11101/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # HTTP Fetch MCP Service
  mcp-http:
    build:
      context: ./mcp-services/http
      dockerfile: Dockerfile
    container_name: sutazai-mcp-http
    networks:
      - sutazai-network
      - mcp-internal
    ports:
      - "11102:11102"
    environment:
      - MCP_SERVICE_NAME=http
      - MCP_SERVICE_PORT=11102
      - CONSUL_AGENT=mcp-consul-agent:8500
    volumes:
      - ./scripts/mcp/wrappers:/opt/mcp/wrappers:ro
    depends_on:
      - mcp-consul-agent
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11102/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # DuckDuckGo Search MCP Service
  mcp-ddg:
    build:
      context: ./mcp-services/ddg
      dockerfile: Dockerfile
    container_name: sutazai-mcp-ddg
    networks:
      - sutazai-network
      - mcp-internal
    ports:
      - "11103:11103"
    environment:
      - MCP_SERVICE_NAME=ddg
      - MCP_SERVICE_PORT=11103
      - CONSUL_AGENT=mcp-consul-agent:8500
    volumes:
      - ./scripts/mcp/wrappers:/opt/mcp/wrappers:ro
    depends_on:
      - mcp-consul-agent
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11103/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # GitHub MCP Service
  mcp-github:
    build:
      context: ./mcp-services/github
      dockerfile: Dockerfile
    container_name: sutazai-mcp-github
    networks:
      - sutazai-network
      - mcp-internal
    ports:
      - "11104:11104"
    environment:
      - MCP_SERVICE_NAME=github
      - MCP_SERVICE_PORT=11104
      - CONSUL_AGENT=mcp-consul-agent:8500
    volumes:
      - ./scripts/mcp/wrappers:/opt/mcp/wrappers:ro
    depends_on:
      - mcp-consul-agent
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11104/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Extended Memory MCP Service
  mcp-memory:
    build:
      context: ./mcp-services/memory
      dockerfile: Dockerfile
    container_name: sutazai-mcp-memory
    networks:
      - sutazai-network
      - mcp-internal
    ports:
      - "11105:11105"
    environment:
      - MCP_SERVICE_NAME=memory
      - MCP_SERVICE_PORT=11105
      - CHROMADB_URL=http://sutazai-chromadb:8000
      - CONSUL_AGENT=mcp-consul-agent:8500
    volumes:
      - ./scripts/mcp/wrappers:/opt/mcp/wrappers:ro
    depends_on:
      - mcp-consul-agent
      - sutazai-chromadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11105/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mcp-consul-data:
    driver: local