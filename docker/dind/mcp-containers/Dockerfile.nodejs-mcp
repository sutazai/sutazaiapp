# Base Dockerfile for Node.js-based MCP servers
# Supports: claude-flow, ruv-swarm, files, context7, http_fetch, etc.

FROM node:20-alpine

# Install essential tools and dependencies
RUN apk add --no-cache \
    bash \
    curl \
    git \
    openssh-client \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Create MCP user and directories
RUN addgroup -g 1001 mcp && \
    adduser -D -u 1001 -G mcp mcp

# Set up working directory
WORKDIR /opt/mcp

# Install global npm packages required by various MCP servers
# Note: Some packages may not exist, install available ones
RUN npm install -g \
    playwright \
    puppeteer || true

# Try to install MCP packages that exist
RUN npm install -g @modelcontextprotocol/server-filesystem@latest || true
RUN npm install -g claude-flow@alpha || true  
RUN npm install -g ruv-swarm@latest || true

# Copy wrapper scripts
COPY --chown=mcp:mcp scripts/mcp/wrappers/ /opt/mcp/wrappers/
COPY --chown=mcp:mcp scripts/mcp/_common.sh /opt/mcp/

# Make scripts executable
RUN chmod +x /opt/mcp/wrappers/*.sh /opt/mcp/_common.sh

# Create logs directory
RUN mkdir -p /var/log/mcp && chown mcp:mcp /var/log/mcp

# Switch to non-root user
USER mcp

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD /opt/mcp/wrappers/${MCP_SERVICE}.sh health || exit 1

# Default entrypoint - expects MCP_SERVICE environment variable
ENTRYPOINT ["/bin/bash", "-c", "exec /opt/mcp/wrappers/${MCP_SERVICE}.sh start"]