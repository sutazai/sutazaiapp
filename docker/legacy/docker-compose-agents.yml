# AI Agents Configuration for SutazAI
# This file contains all AI agent containers

services:
  # AutoGPT - Autonomous task execution
  autogpt:
    image: significantgravitas/auto-gpt:latest
    container_name: sutazai-autogpt
    restart: unless-stopped
    environment:
      - MEMORY_BACKEND=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - VECTOR_STORE=qdrant
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - OLLAMA_BASE_URL=http://ollama:11434
    volumes:
      - autogpt_workspace:/app/autogpt/workspace
      - ./agents/autogpt/config:/app/config
    depends_on:
      - redis
      - qdrant
      - ollama
    networks:
      - sutazai-network

  # CrewAI - Multi-agent collaboration
  crewai:
    build:
      context: ./docker/crewai
      dockerfile: Dockerfile
    container_name: sutazai-crewai
    restart: unless-stopped
    environment:
      - OPENAI_API_BASE=http://ollama:11434/v1
      - OPENAI_API_KEY=local
      - REDIS_URL=redis://redis:6379
    volumes:
      - crewai_workspace:/app/workspace
    depends_on:
      - redis
      - ollama
    ports:
      - "8102:8080"
    networks:
      - sutazai-network

  # GPT-Engineer - Code generation
  gpt-engineer:
    image: gpt-engineer:latest
    build:
      context: ./docker/gpt-engineer
      dockerfile: Dockerfile
    container_name: sutazai-gpt-engineer
    restart: unless-stopped
    environment:
      - OPENAI_API_BASE=http://ollama:11434/v1
      - OPENAI_API_KEY=local
    volumes:
      - gpt_engineer_projects:/app/projects
      - ./agents/gpt-engineer/config:/app/config
    depends_on:
      - ollama
    networks:
      - sutazai-network

  # Aider - AI pair programming
  aider:
    image: aider-chat:latest
    build:
      context: ./docker/aider
      dockerfile: Dockerfile
    container_name: sutazai-aider
    restart: unless-stopped
    environment:
      - OPENAI_API_BASE=http://ollama:11434/v1
      - OPENAI_API_KEY=local
    volumes:
      - aider_workspace:/app/workspace
      - ./agents/aider/config:/app/config
    depends_on:
      - ollama
    networks:
      - sutazai-network

  # AgentZero - Core reasoning agent
  agentzero:
    image: agentzero:latest
    build:
      context: ./docker/agentzero
      dockerfile: Dockerfile
    container_name: sutazai-agentzero
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - VECTOR_DB_HOST=qdrant
      - VECTOR_DB_PORT=6333
    volumes:
      - agentzero_data:/app/data
    depends_on:
      - ollama
      - qdrant
    networks:
      - sutazai-network

  # PrivateGPT - Document processing
  privategpt:
    build:
      context: ./docker/privategpt
      dockerfile: Dockerfile
    container_name: sutazai-privategpt
    restart: unless-stopped
    environment:
      - PGPT_PROFILES=ollama
      - OLLAMA_BASE_URL=http://ollama:11434
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
    volumes:
      - privategpt_data:/app/data
      - ./agents/privategpt/config:/app/config
    depends_on:
      - ollama
      - chromadb
    ports:
      - "8103:8001"
    networks:
      - sutazai-network

  # Langflow - Visual workflow builder
  langflow:
    image: langflowai/langflow:latest
    container_name: sutazai-langflow
    restart: unless-stopped
    environment:
      - LANGFLOW_DATABASE_URL=postgresql://sutazai:sutazai_password@postgres:5432/langflow
      - LANGFLOW_REDIS_URL=redis://redis:6379
    volumes:
      - langflow_data:/app/data
    depends_on:
      - postgres
      - redis
    ports:
      - "7860:7860"
    networks:
      - sutazai-network

  # Dify - LLM app development platform
  dify:
    image: langgenius/dify:latest
    container_name: sutazai-dify
    restart: unless-stopped
    environment:
      - DB_USERNAME=sutazai
      - DB_PASSWORD=sutazai_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=dify
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password
      - STORAGE_TYPE=local
    volumes:
      - dify_data:/app/data
    depends_on:
      - postgres
      - redis
    ports:
      - "8104:5000"
    networks:
      - sutazai-network

  # FlowiseAI - Build LLM apps
  flowise:
    image: flowiseai/flowise:latest
    container_name: sutazai-flowise
    restart: unless-stopped
    environment:
      - DATABASE_TYPE=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=sutazai
      - DATABASE_PASSWORD=sutazai_password
      - DATABASE_NAME=flowise
      - FLOWISE_USERNAME=admin
      - FLOWISE_PASSWORD=sutazai123
    volumes:
      - flowise_data:/app/data
    depends_on:
      - postgres
    ports:
      - "8105:3000"
    networks:
      - sutazai-network

  # BigAGI - Advanced chat interface
  bigagi:
    image: bigagi:latest
    build:
      context: ./docker/bigagi
      dockerfile: Dockerfile
    container_name: sutazai-bigagi
    restart: unless-stopped
    environment:
      - OPENAI_API_HOST=http://ollama:11434
      - OPENAI_API_KEY=local
    depends_on:
      - ollama
    ports:
      - "8106:3000"
    networks:
      - sutazai-network

  # Skyvern - Browser automation
  skyvern:
    image: skyvern:latest
    build:
      context: ./docker/skyvern
      dockerfile: Dockerfile
    container_name: sutazai-skyvern
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://sutazai:sutazai_password@postgres:5432/skyvern
      - REDIS_URL=redis://redis:6379
      - OLLAMA_HOST=http://ollama:11434
    volumes:
      - skyvern_data:/app/data
    depends_on:
      - postgres
      - redis
      - ollama
    networks:
      - sutazai-network

  # Browser Use - Web interaction agent
  browser-use:
    image: browser-use:latest
    build:
      context: ./docker/browser-use
      dockerfile: Dockerfile
    container_name: sutazai-browser-use
    restart: unless-stopped
    environment:
      - OPENAI_API_BASE=http://ollama:11434/v1
      - OPENAI_API_KEY=local
    volumes:
      - browser_data:/app/data
    depends_on:
      - ollama
    networks:
      - sutazai-network

  # Letta (formerly MemGPT) - Memory-enhanced agent
  letta:
    image: letta:latest
    build:
      context: ./docker/letta
      dockerfile: Dockerfile
    container_name: sutazai-letta
    restart: unless-stopped
    environment:
      - OPENAI_API_BASE=http://ollama:11434/v1
      - OPENAI_API_KEY=local
      - POSTGRES_URI=postgresql://sutazai:sutazai_password@postgres:5432/letta
    volumes:
      - letta_data:/app/data
    depends_on:
      - postgres
      - ollama
    ports:
      - "8107:8080"
    networks:
      - sutazai-network

  # LocalAGI - Local AGI orchestration
  localagi:
    image: mudler/localagi:latest
    container_name: sutazai-localagi
    restart: unless-stopped
    environment:
      - OPENAI_API_KEY=local
      - OPENAI_API_BASE=http://ollama:11434/v1
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
    volumes:
      - localagi_data:/app/data
    depends_on:
      - ollama
      - chromadb
    ports:
      - "8108:8080"
    networks:
      - sutazai-network

volumes:
  autogpt_workspace:
  crewai_workspace:
  gpt_engineer_projects:
  aider_workspace:
  agentzero_data:
  privategpt_data:
  langflow_data:
  dify_data:
  flowise_data:
  skyvern_data:
  browser_data:
  letta_data:
  localagi_data:

networks:
  sutazai-network:
    external: true
    name: sutazaiapp_sutazai-network