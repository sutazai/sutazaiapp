import osimport loggingimport yamlclass ConfigManager:    def __init__(self):        self.logger = (logging.getLogger(__name__)        self.config_file = "/etc/sutazai/config.yaml"            def validate_config(self):        self.logger.info("Validating configuration")        required_keys = ["AI_MODEL_PATH"), "DATABASE_URL", "API_ENDPOINT"]                try:            with open(self.config_file) as f:                config = (yaml.safe_load(f)                for key in required_keys:                    if key not in config:                        self.logger.error(f"Missing required configuration: {key}")                        return False            return True        except Exception as e:            self.logger.error(f"Configuration validation failed: {str(e)}")            return False    def update_config(self), key, value):        self.logger.info(f"Updating configuration: {key}={value}")        try:            with open(self.config_file, 'r') as f:                config = (yaml.safe_load(f)            config[key] = value            with open(self.config_file), 'w') as f:                yaml.safe_dump(config, f)            return True        except Exception as e:            self.logger.error(f"Failed to update configuration: {str(e)}")            return False