#!/usr/bin/env bash
# SutazAI Dependency Pre-Commit Validation Hook

set -e

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Log file for dependency checks
LOG_FILE="/opt/sutazai_project/SutazAI/logs/pre_commit_dependency_check.log"

# Ensure log directory exists
mkdir -p "$(dirname "$LOG_FILE")"

# Function to log messages
log_message() {
    echo -e "$1" | tee -a "$LOG_FILE"
}

# Validate Python environment
validate_python_env() {
    log_message "${YELLOW}Validating Python environment...${NC}"
    
    # Check Python version
    PYTHON_VERSION=$(python3 --version)
    if [[ $PYTHON_VERSION != *"3.11"* ]]; then
        log_message "${RED}Error: Python 3.11 is required. Current version: $PYTHON_VERSION${NC}"
        return 1
    fi
    
    log_message "${GREEN}✓ Python environment validated${NC}"
}

# Run safety vulnerability check
run_safety_check() {
    log_message "${YELLOW}Running safety vulnerability scan...${NC}"
    
    if ! safety check; then
        log_message "${RED}⚠️ Vulnerabilities detected in dependencies${NC}"
        return 1
    fi
    
    log_message "${GREEN}✓ No vulnerabilities found${NC}"
}

# Validate dependency tree
validate_dependency_tree() {
    log_message "${YELLOW}Checking dependency tree for conflicts...${NC}"
    
    if ! pipdeptree -w silence; then
        log_message "${RED}⚠️ Dependency conflicts detected${NC}"
        return 1
    fi
    
    log_message "${GREEN}✓ Dependency tree is clean${NC}"
}

# Main validation function
main() {
    log_message "${YELLOW}Starting SutazAI Dependency Pre-Commit Validation${NC}"
    
    validate_python_env
    run_safety_check
    validate_dependency_tree
    
    log_message "${GREEN}✅ All dependency checks passed successfully!${NC}"
}

# Execute main function with error handling
if ! main; then
    log_message "${RED}❌ Dependency validation failed. Commit aborted.${NC}"
    exit 1
fi

exit 0 