{
  "start_time": "2025-08-09T06:13:17.696126",
  "environment": "local",
  "python_version": "3.12.3 (main, Jun 18 2025, 17:59:45) [GCC 13.3.0]",
  "tests_executed": [
    {
      "test_type": "syntax_validation",
      "passed": 0,
      "failed": 0,
      "errors": []
    },
    {
      "test_type": "import_tests",
      "passed": 7,
      "failed": 0,
      "details": [
        "\u2705 Standard JSON library: json",
        "\u2705 Standard OS library: os",
        "\u2705 Standard system library: sys",
        "\u2705 Path manipulation: pathlib",
        "\u2705 Date/time utilities: datetime",
        "\u2705 Process management: subprocess",
        "\u2705 Logging framework: logging"
      ]
    },
    {
      "test_type": "configuration_validation",
      "passed": 0,
      "failed": 5,
      "details": [
        "\u274c Main Docker Compose configuration: docker-compose.yml (missing)",
        "\u274c Backend application entry point: backend/app/main.py (missing)",
        "\u274c Test configuration: pytest.ini (missing)",
        "\u274c Security environment template: .env.secure.template (missing)",
        "\u274c Master deployment script: scripts/deployment/deploy.sh (missing)"
      ]
    },
    {
      "test_type": "file_structure_validation",
      "passed": 0,
      "failed": 9,
      "details": [
        "\u274c Directory missing: backend/app",
        "\u274c Directory missing: backend/tests",
        "\u274c Directory missing: agents",
        "\u274c Directory missing: tests",
        "\u274c Directory missing: scripts/deployment",
        "\u274c Directory missing: scripts/monitoring",
        "\u274c Directory missing: scripts/devops",
        "\u274c Directory missing: frontend",
        "\u274c Directory missing: docs"
      ]
    },
    {
      "test_type": "script_organization_validation",
      "passed": 0,
      "failed": 5,
      "details": [
        "\u274c Master deployment script missing",
        "\u274c Missing script directory: scripts/deployment",
        "\u274c Missing script directory: scripts/monitoring",
        "\u274c Missing script directory: scripts/devops",
        "\u274c Missing script directory: scripts/automation"
      ]
    },
    {
      "test_type": "security_scan",
      "passed": 820,
      "failed": 0,
      "warnings": []
    },
    {
      "test_type": "health_checks",
      "passed": 0,
      "failed": 5,
      "details": [
        "\u274c Backend API (port 10010): Service not running (expected in non-Docker environment)",
        "\u274c Ollama (port 10104): Service not running (expected in non-Docker environment)",
        "\u274c PostgreSQL (port 10000): Service not running (expected in non-Docker environment)",
        "\u274c Redis (port 10001): Service not running (expected in non-Docker environment)",
        "\u274c Neo4j (port 10002): Service not running (expected in non-Docker environment)"
      ]
    },
    {
      "test_type": "pytest_tests",
      "passed": 0,
      "failed": 0,
      "skipped": 1,
      "details": [
        "\u26a0\ufe0f Pytest not available - skipping pytest tests"
      ]
    }
  ],
  "total_passed": 827,
  "total_failed": 24,
  "total_skipped": 1,
  "end_time": "2025-08-09T06:13:17.768771",
  "final_result": {
    "test_type": "comprehensive_suite",
    "passed": 827,
    "failed": 24,
    "skipped": 1,
    "sub_results": [
      {
        "test_type": "syntax_validation",
        "passed": 0,
        "failed": 0,
        "errors": []
      },
      {
        "test_type": "import_tests",
        "passed": 7,
        "failed": 0,
        "details": [
          "\u2705 Standard JSON library: json",
          "\u2705 Standard OS library: os",
          "\u2705 Standard system library: sys",
          "\u2705 Path manipulation: pathlib",
          "\u2705 Date/time utilities: datetime",
          "\u2705 Process management: subprocess",
          "\u2705 Logging framework: logging"
        ]
      },
      {
        "test_type": "configuration_validation",
        "passed": 0,
        "failed": 5,
        "details": [
          "\u274c Main Docker Compose configuration: docker-compose.yml (missing)",
          "\u274c Backend application entry point: backend/app/main.py (missing)",
          "\u274c Test configuration: pytest.ini (missing)",
          "\u274c Security environment template: .env.secure.template (missing)",
          "\u274c Master deployment script: scripts/deployment/deploy.sh (missing)"
        ]
      },
      {
        "test_type": "file_structure_validation",
        "passed": 0,
        "failed": 9,
        "details": [
          "\u274c Directory missing: backend/app",
          "\u274c Directory missing: backend/tests",
          "\u274c Directory missing: agents",
          "\u274c Directory missing: tests",
          "\u274c Directory missing: scripts/deployment",
          "\u274c Directory missing: scripts/monitoring",
          "\u274c Directory missing: scripts/devops",
          "\u274c Directory missing: frontend",
          "\u274c Directory missing: docs"
        ]
      },
      {
        "test_type": "script_organization_validation",
        "passed": 0,
        "failed": 5,
        "details": [
          "\u274c Master deployment script missing",
          "\u274c Missing script directory: scripts/deployment",
          "\u274c Missing script directory: scripts/monitoring",
          "\u274c Missing script directory: scripts/devops",
          "\u274c Missing script directory: scripts/automation"
        ]
      },
      {
        "test_type": "security_scan",
        "passed": 820,
        "failed": 0,
        "warnings": []
      },
      {
        "test_type": "health_checks",
        "passed": 0,
        "failed": 5,
        "details": [
          "\u274c Backend API (port 10010): Service not running (expected in non-Docker environment)",
          "\u274c Ollama (port 10104): Service not running (expected in non-Docker environment)",
          "\u274c PostgreSQL (port 10000): Service not running (expected in non-Docker environment)",
          "\u274c Redis (port 10001): Service not running (expected in non-Docker environment)",
          "\u274c Neo4j (port 10002): Service not running (expected in non-Docker environment)"
        ]
      },
      {
        "test_type": "pytest_tests",
        "passed": 0,
        "failed": 0,
        "skipped": 1,
        "details": [
          "\u26a0\ufe0f Pytest not available - skipping pytest tests"
        ]
      }
    ]
  }
}