# Multi-stage build for security-hardened frontend
# Stage 1: Build stage
FROM python:3.12.8-slim AS builder

# Security: Create non-root user for build
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Install minimal build dependencies with security updates
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    curl \
    ca-certificates \
    && apt-get upgrade -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /var/cache/apt/archives/*

WORKDIR /app

# Copy and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Copy application files
COPY app.py .
COPY static/ static/ 2>/dev/null || true
COPY templates/ templates/ 2>/dev/null || true

# Stage 2: Runtime stage
FROM python:3.12.8-slim AS runtime

# Security: Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser -d /app -s /sbin/nologin appuser

# Install minimal runtime dependencies and security updates
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    && apt-get upgrade -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /var/cache/apt/archives/* \
    && rm -rf /tmp/* \
    && rm -rf /var/tmp/*

# Security: Remove unnecessary packages
RUN apt-get autoremove -y && apt-get autoclean

WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /root/.local /home/appuser/.local

# Copy application with proper ownership
COPY --from=builder --chown=appuser:appuser /app .

# Security: Set proper permissions
RUN chmod -R 755 /app \
    && find /app -type f -name "*.py" -exec chmod 644 {} \; \
    && mkdir -p /app/logs /app/data \
    && chown -R appuser:appuser /app/logs /app/data

# Security: Create writable directories for non-root user
RUN mkdir -p /tmp /var/tmp \
    && chown appuser:appuser /tmp /var/tmp \
    && chmod 1777 /tmp /var/tmp

# Security environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/home/appuser/.local/bin:$PATH" \
    PYTHONPATH="/app" \
    STREAMLIT_SERVER_ADDRESS=0.0.0.0 \
    STREAMLIT_SERVER_PORT=8501 \
    STREAMLIT_SERVER_HEADLESS=true \
    STREAMLIT_BROWSER_GATHER_USAGE_STATS=false

# Security: Switch to non-root user
USER appuser

# Expose port (non-privileged)
EXPOSE 8501

# Security: Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8501/healthz || exit 1

# Security: Use exec form to avoid shell injection
CMD ["streamlit", "run", "app.py", "--server.port", "8501", "--server.address", "0.0.0.0"]