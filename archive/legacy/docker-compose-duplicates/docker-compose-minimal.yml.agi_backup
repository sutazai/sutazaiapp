version: '3.8'

networks:
  sutazai-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  chroma-data:
  qdrant-data:
  ollama-data:

services:
  # Core Infrastructure
  postgres:
    image: postgres:15
    container_name: sutazai-postgres
    environment:
      POSTGRES_DB: sutazai
      POSTGRES_USER: sutazai
      POSTGRES_PASSWORD: sutazai_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sutazai"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: sutazai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Vector Databases
  qdrant:
    image: qdrant/qdrant:latest
    container_name: sutazai-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  chromadb:
    image: chromadb/chroma:latest
    container_name: sutazai-chromadb
    ports:
      - "8001:8000"
    volumes:
      - chroma-data:/chroma/chroma
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Model Management
  ollama:
    image: ollama/ollama:latest
    container_name: sutazai-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # New v8 Services
  faiss:
    build:
      context: ./docker/faiss
      dockerfile: Dockerfile
    container_name: sutazai-faiss
    ports:
      - "8096:8088"
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  awesome-code-ai:
    build:
      context: ./docker/awesome-code-ai
      dockerfile: Dockerfile
    container_name: sutazai-awesome-code-ai
    ports:
      - "8097:8089"
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8089/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  enhanced-model-manager:
    build:
      context: ./docker/enhanced-model-manager
      dockerfile: Dockerfile
    container_name: sutazai-enhanced-model-manager
    ports:
      - "8098:8090"
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Core Backend
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: sutazai-backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - chromadb
      - qdrant
      - ollama
      - faiss
      - awesome-code-ai
      - enhanced-model-manager
    networks:
      - sutazai-network
    environment:
      - DATABASE_URL=postgresql://sutazai:sutazai_password@postgres:5432/sutazai
      - REDIS_URL=redis://redis:6379
      - CHROMADB_URL=http://chromadb:8000
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_URL=http://ollama:11434
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend
  streamlit:
    build:
      context: .
      dockerfile: docker/streamlit/Dockerfile
    container_name: sutazai-streamlit
    ports:
      - "8501:8501"
    depends_on:
      - backend
    networks:
      - sutazai-network
    environment:
      - BACKEND_URL=http://backend:8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5