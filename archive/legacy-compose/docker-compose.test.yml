version: '3.8'

# Test environment for CI/CD pipeline
services:
  # Test database
  postgres-test:
    image: postgres:15-alpine
    container_name: sutazai-postgres-test
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: sutazai_test
    ports:
      - "5433:5432"
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d sutazai_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test Redis
  redis-test:
    image: redis:7-alpine
    container_name: sutazai-redis-test
    command: redis-server --appendonly yes
    ports:
      - "6380:6379"
    volumes:
      - redis-test-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test ChromaDB
  chromadb-test:
    image: chromadb/chroma:latest
    container_name: sutazai-chromadb-test
    environment:
      CHROMA_SERVER_CORS_ALLOW_ORIGINS: ["*"]
      ANONYMIZED_TELEMETRY: "false"
    ports:
      - "8001:8000"
    volumes:
      - chromadb-test-data:/chroma/chroma
    networks:
      - test-network

  # Test Backend
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: test
    container_name: sutazai-backend-test
    environment:
      ENVIRONMENT: test
      DATABASE_URL: postgresql://test:test@postgres-test:5432/sutazai_test
      REDIS_URL: redis://redis-test:6379/0
      CHROMADB_URL: http://chromadb-test:8000
      JWT_SECRET_KEY: test-secret-key-for-testing-only
      PYTHONPATH: /app
      LOG_LEVEL: DEBUG
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
      chromadb-test:
        condition: service_started
    volumes:
      - ./backend:/app
      - test-results:/app/test-results
    command: >
      sh -c "
        echo 'Waiting for services...' &&
        sleep 10 &&
        echo 'Running migrations...' &&
        alembic upgrade head &&
        echo 'Running tests...' &&
        pytest -v --cov=app --cov-report=xml:/app/test-results/coverage.xml --junitxml=/app/test-results/junit.xml
      "
    networks:
      - test-network

  # Test Runner (for integration tests)
  test-runner:
    build:
      context: ./tests
      dockerfile: Dockerfile
    container_name: sutazai-test-runner
    depends_on:
      - backend-test
    environment:
      BASE_URL: http://backend-test:8000
      TEST_ENV: docker
    volumes:
      - ./tests:/tests
      - test-results:/results
    command: >
      sh -c "
        echo 'Waiting for backend...' &&
        sleep 30 &&
        echo 'Running integration tests...' &&
        pytest /tests/integration -v --junitxml=/results/integration-junit.xml
      "
    networks:
      - test-network

  # Performance test runner
  k6-runner:
    image: grafana/k6:latest
    container_name: sutazai-k6-runner
    depends_on:
      - backend-test
    environment:
      BASE_URL: http://backend-test:8000
    volumes:
      - ./tests/performance:/scripts
      - test-results:/results
    command: run -e BASE_URL=http://backend-test:8000 --out json=/results/k6-results.json /scripts/load_test.js
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  postgres-test-data:
  redis-test-data:
  chromadb-test-data:
  test-results: