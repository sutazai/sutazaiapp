networks:
  sutazai-network:
    external: true

volumes:
  postgres_data:
  neo4j_data:
  redis_data:
  ollama_data:

services:
  # Critical PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: sutazai-postgres
    restart: unless-stopped
    networks:
      - sutazai-network
    ports:
      - "10010:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-sutazai}
      POSTGRES_USER: ${POSTGRES_USER:-sutazai}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sutazai} -d ${POSTGRES_DB:-sutazai}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Critical Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sutazai-redis
    restart: unless-stopped
    networks:
      - sutazai-network
    ports:
      - "10011:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    command: redis-server --requirepass "${REDIS_PASSWORD}" --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD-SHELL", "redis-cli --no-auth-warning -a ${REDIS_PASSWORD} ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  # Critical Neo4j Graph Database
  neo4j:
    image: neo4j:5.13-community
    container_name: sutazai-neo4j
    restart: unless-stopped
    networks:
      - sutazai-network
    ports:
      - "10002:7474"
      - "10003:7687"
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD}
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_memory_heap_max__size: 2G
      NEO4J_dbms_memory_pagecache_size: 1G
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_connector_bolt_listen__address: 0.0.0.0:7687
      NEO4J_dbms_connector_http_listen__address: 0.0.0.0:7474
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p ${NEO4J_PASSWORD} 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  # Critical Ollama AI Service
  ollama:
    image: ollama/ollama:latest
    container_name: sutazai-ollama
    restart: unless-stopped
    networks:
      - sutazai-network
    ports:
      - "10104:11434"  # Standard Ollama port
      - "11270:11434"  # Legacy port mapping for existing services
    environment:
      OLLAMA_HOST: 0.0.0.0
      OLLAMA_ORIGINS: '*'
      OLLAMA_DEBUG: false
      OLLAMA_FLASH_ATTENTION: 1
      OLLAMA_KEEP_ALIVE: 10m
      OLLAMA_MAX_LOADED_MODELS: 3
      OLLAMA_NUM_PARALLEL: 50
      OLLAMA_NUM_THREADS: 10
      OLLAMA_RUNNERS_DIR: /tmp
      OLLAMA_TMPDIR: /tmp
    volumes:
      - ollama_data:/root/.ollama
      - /opt/sutazaiapp/CLAUDE.md:/app/CLAUDE.md:ro
    healthcheck:
      test: ["CMD-SHELL", "ollama list > /dev/null 2>&1 || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 120s
    sysctls:
      - net.core.somaxconn=65535
    ulimits:
      nofile:
        soft: 65536
        hard: 65536