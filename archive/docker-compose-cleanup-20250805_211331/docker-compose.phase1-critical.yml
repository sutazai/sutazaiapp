networks:
  sutazai-network:
    external: true
services:
  adversarial-attack-detector:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-adversarial-attack-detector-phase1
    deploy: &id001
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    environment:
      AGENT_NAME: adversarial-attack-detector
      AGENT_ROLE: threat-detection
      AGENT_TYPE: security
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: &id002
    - sutazai-network
    ports:
    - 11014:8080
    restart: unless-stopped
    volumes:
    - ./agents/adversarial-attack-detector:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  agent-creator:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-agent-creator-phase1
    deploy: *id001
    environment:
      AGENT_NAME: agent-creator
      AGENT_ROLE: agent-generation
      AGENT_TYPE: meta-agent
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11015:8080
    restart: unless-stopped
    volumes:
    - ./agents/agent-creator:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  agent-debugger:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-agent-debugger-phase1
    deploy: *id001
    environment:
      AGENT_NAME: agent-debugger
      AGENT_ROLE: agent-debugging
      AGENT_TYPE: meta-agent
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11016:8080
    restart: unless-stopped
    volumes:
    - ./agents/agent-debugger:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  agent-orchestrator:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-agent-orchestrator-phase1
    deploy: *id001
    environment:
      AGENT_NAME: agent-orchestrator
      AGENT_ROLE: primary-orchestrator
      AGENT_TYPE: orchestration
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11000:8080
    restart: unless-stopped
    volumes:
    - ./agents/agent-orchestrator:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  agentzero-coordinator:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-agentzero-coordinator-phase1
    deploy: *id001
    environment:
      AGENT_NAME: agentzero-coordinator
      AGENT_ROLE: coordination-hub
      AGENT_TYPE: orchestration
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11001:8080
    restart: unless-stopped
    volumes:
    - ./agents/agentzero-coordinator:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  ai-product-manager:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-ai-product-manager-phase1
    deploy: *id001
    environment:
      AGENT_NAME: ai-product-manager
      AGENT_ROLE: product-strategy
      AGENT_TYPE: management
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11008:8080
    restart: unless-stopped
    volumes:
    - ./agents/ai-product-manager:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  ai-qa-team-lead:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-ai-qa-team-lead-phase1
    deploy: *id001
    environment:
      AGENT_NAME: ai-qa-team-lead
      AGENT_ROLE: quality-assurance
      AGENT_TYPE: testing
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11010:8080
    restart: unless-stopped
    volumes:
    - ./agents/ai-qa-team-lead:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  ai-scrum-master:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-ai-scrum-master-phase1
    deploy: *id001
    environment:
      AGENT_NAME: ai-scrum-master
      AGENT_ROLE: project-coordination
      AGENT_TYPE: management
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11009:8080
    restart: unless-stopped
    volumes:
    - ./agents/ai-scrum-master:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  ai-senior-backend-developer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-ai-senior-backend-developer-phase1
    deploy: *id001
    environment:
      AGENT_NAME: ai-senior-backend-developer
      AGENT_ROLE: backend-lead
      AGENT_TYPE: development
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11004:8080
    restart: unless-stopped
    volumes:
    - ./agents/ai-senior-backend-developer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  ai-senior-engineer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-ai-senior-engineer-phase1
    deploy: *id001
    environment:
      AGENT_NAME: ai-senior-engineer
      AGENT_ROLE: engineering-lead
      AGENT_TYPE: development
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11007:8080
    restart: unless-stopped
    volumes:
    - ./agents/ai-senior-engineer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  ai-senior-frontend-developer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-ai-senior-frontend-developer-phase1
    deploy: *id001
    environment:
      AGENT_NAME: ai-senior-frontend-developer
      AGENT_ROLE: frontend-lead
      AGENT_TYPE: development
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11005:8080
    restart: unless-stopped
    volumes:
    - ./agents/ai-senior-frontend-developer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  ai-senior-full-stack-developer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-ai-senior-full-stack-developer-phase1
    deploy: *id001
    environment:
      AGENT_NAME: ai-senior-full-stack-developer
      AGENT_ROLE: full-stack-lead
      AGENT_TYPE: development
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11006:8080
    restart: unless-stopped
    volumes:
    - ./agents/ai-senior-full-stack-developer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  ai-system-architect:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-ai-system-architect-phase1
    deploy: *id001
    environment:
      AGENT_NAME: ai-system-architect
      AGENT_ROLE: system-design
      AGENT_TYPE: core-ai
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11002:8080
    restart: unless-stopped
    volumes:
    - ./agents/ai-system-architect:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  ai-system-validator:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-ai-system-validator-phase1
    deploy: *id001
    environment:
      AGENT_NAME: ai-system-validator
      AGENT_ROLE: system-validation
      AGENT_TYPE: core-ai
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11003:8080
    restart: unless-stopped
    volumes:
    - ./agents/ai-system-validator:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  ai-testing-qa-validator:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-ai-testing-qa-validator-phase1
    deploy: *id001
    environment:
      AGENT_NAME: ai-testing-qa-validator
      AGENT_ROLE: test-validation
      AGENT_TYPE: testing
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11011:8080
    restart: unless-stopped
    volumes:
    - ./agents/ai-testing-qa-validator:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  cicd-pipeline-orchestrator:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-cicd-pipeline-orchestrator-phase1
    deploy: *id001
    environment:
      AGENT_NAME: cicd-pipeline-orchestrator
      AGENT_ROLE: deployment-automation
      AGENT_TYPE: infrastructure
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11012:8080
    restart: unless-stopped
    volumes:
    - ./agents/cicd-pipeline-orchestrator:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  compute-scheduler-and-optimizer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-compute-scheduler-optimizer-phase1
    deploy: *id001
    environment:
      AGENT_NAME: compute-scheduler-and-optimizer
      AGENT_ROLE: resource-optimization
      AGENT_TYPE: resource-management
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11017:8080
    restart: unless-stopped
    volumes:
    - ./agents/compute-scheduler-and-optimizer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  cpu-only-hardware-optimizer:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-cpu-hardware-optimizer-phase1
    deploy: *id001
    environment:
      AGENT_NAME: cpu-only-hardware-optimizer
      AGENT_ROLE: performance-tuning
      AGENT_TYPE: hardware-optimization
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11019:8080
    restart: unless-stopped
    volumes:
    - ./agents/cpu-only-hardware-optimizer:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  deployment-automation-master:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-deployment-automation-master-phase1
    deploy: *id001
    environment:
      AGENT_NAME: deployment-automation-master
      AGENT_ROLE: deployment-master
      AGENT_TYPE: infrastructure
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11013:8080
    restart: unless-stopped
    volumes:
    - ./agents/deployment-automation-master:/app
    - agent_workspaces:/workspaces
    working_dir: /app
  emergency-shutdown-coordinator:
    command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
      \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
      \"\n"
    container_name: sutazai-emergency-shutdown-coordinator-phase1
    deploy: *id001
    environment:
      AGENT_NAME: emergency-shutdown-coordinator
      AGENT_ROLE: emergency-management
      AGENT_TYPE: safety
      PRIORITY: critical
    healthcheck:
      interval: 60s
      retries: 5
      test:
      - CMD
      - python3
      - -c
      - import socket; s=socket.socket(); s.settimeout(3); exit(0 if s.connect_ex(('localhost',
        8080))==0 else 1)
      timeout: 30s
    image: python:3.11-slim
    networks: *id002
    ports:
    - 11018:8080
    restart: unless-stopped
    volumes:
    - ./agents/emergency-shutdown-coordinator:/app
    - agent_workspaces:/workspaces
    working_dir: /app
version: '3.8'
volumes:
  agent_workspaces:
    external: true
x-agent-base:
  command: "sh -c \"\n  pip install --no-cache-dir fastapi uvicorn httpx redis pydantic\
    \ prometheus-client &&\n  python -m uvicorn app:app --host 0.0.0.0 --port 8080\n\
    \"\n"
  deploy: *id001
  environment:
    AGENT_POOL: python
    CONSUL_URL: http://consul:8500
    DEPLOYMENT_PHASE: '1'
    LOG_LEVEL: INFO
    OLLAMA_BASE_URL: http://ollama:11434
    PHASE_PRIORITY: critical
    RABBITMQ_URL: amqp://sutazai:sutazai_rmq@rabbitmq:5672/sutazai
    REDIS_URL: redis://redis:6379/0
  image: python:3.11-slim
  networks: *id002
  restart: unless-stopped
  working_dir: /app
