version: '3.8'

services:
  # Multi-Modal Fusion Coordinator Service
  fusion-coordinator:
    build:
      context: .
      dockerfile: docker/Dockerfile.fusion-coordinator
    container_name: sutazai-fusion-coordinator
    restart: unless-stopped
    depends_on:
      - ollama
      - chromadb
      - qdrant
      - neo4j
      - redis
    environment:
      - FUSION_CONFIG_PATH=/app/config/fusion_config.yaml
      - OLLAMA_URL=http://ollama:11434
      - CHROMADB_URL=http://chromadb:8000
      - QDRANT_URL=http://qdrant:6333
      - NEO4J_URL=bolt://neo4j:7687
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    ports:
      - "11030:11030"  # Fusion API port
    volumes:
      - ./fusion:/app/fusion
      - ./config:/app/config
      - ./logs:/app/logs
      - fusion-data:/app/data
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8766/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '2.0'

  # Real-Time Fusion Pipeline Service
  fusion-pipeline:
    build:
      context: .
      dockerfile: docker/Dockerfile.fusion-pipeline
    container_name: sutazai-fusion-pipeline
    restart: unless-stopped
    depends_on:
      - fusion-coordinator
      - ollama
    environment:
      - PIPELINE_CONFIG_PATH=/app/config/fusion_config.yaml
      - FUSION_COORDINATOR_URL=http://fusion-coordinator:8766
      - WEBSOCKET_PORT=8765
      - MAX_WORKERS=12
      - MAX_PROCESSES=6
      - ENABLE_AUTO_SCALING=true
      - LOG_LEVEL=INFO
    ports:
      - "8765:8765"  # WebSocket port for real-time monitoring
      - "8767:8767"  # Pipeline API port
    volumes:
      - ./fusion:/app/fusion
      - ./config:/app/config
      - ./logs:/app/logs
      - fusion-cache:/app/cache
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8767/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 6G
          cpus: '8.0'
        reservations:
          memory: 3G
          cpus: '4.0'

  # Cross-Modal Learning Service
  fusion-learning:
    build:
      context: .
      dockerfile: docker/Dockerfile.fusion-learning
    container_name: sutazai-fusion-learning
    restart: unless-stopped
    depends_on:
      - fusion-coordinator
      - postgres
    environment:
      - LEARNING_CONFIG_PATH=/app/config/fusion_config.yaml
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/sutazai
      - ENABLE_CONTRASTIVE_LEARNING=true
      - ENABLE_ATTENTION_LEARNING=true
      - ENABLE_TRANSFER_LEARNING=true
      - BATCH_SIZE=32
      - LEARNING_RATE=0.001
      - LOG_LEVEL=INFO
    ports:
      - "8768:8768"  # Learning API port
    volumes:
      - ./fusion:/app/fusion
      - ./config:/app/config
      - ./logs:/app/logs
      - fusion-models:/app/models
      - fusion-checkpoints:/app/checkpoints
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8768/health"]
      interval: 60s
      timeout: 15s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '6.0'
        reservations:
          memory: 4G
          cpus: '3.0'

  # Fusion Visualization Dashboard
  fusion-dashboard:
    build:
      context: .
      dockerfile: docker/Dockerfile.fusion-dashboard
    container_name: sutazai-fusion-dashboard
    restart: unless-stopped
    depends_on:
      - fusion-pipeline
      - fusion-coordinator
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - FUSION_WEBSOCKET_URL=ws://fusion-pipeline:8765
      - FUSION_API_URL=http://fusion-coordinator:8766
      - DATABASE_PATH=/app/data/visualization.db
      - EXPORT_DIRECTORY=/app/exports
      - LOG_LEVEL=INFO
    ports:
      - "8501:8501"  # Streamlit dashboard port
    volumes:
      - ./fusion:/app/fusion
      - ./config:/app/config
      - fusion-viz-data:/app/data
      - fusion-exports:/app/exports
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'

  # Fusion API Gateway (Load Balancer)
  fusion-gateway:
    image: nginx:alpine
    container_name: sutazai-fusion-gateway
    restart: unless-stopped
    depends_on:
      - fusion-coordinator
      - fusion-pipeline
      - fusion-learning
      - fusion-dashboard
    ports:
      - "8760:80"  # Main fusion gateway port
    volumes:
      - ./docker/nginx/fusion-gateway.conf:/etc/nginx/nginx.conf:ro
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Redis for Fusion System Caching
  fusion-redis:
    image: redis:7-alpine
    container_name: sutazai-fusion-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6379"  # Alternative Redis port for fusion
    volumes:
      - fusion-redis-data:/data
    networks:
      - sutazai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

  # Fusion Metrics Collector
  fusion-metrics:
    build:
      context: .
      dockerfile: docker/Dockerfile.fusion-metrics
    container_name: sutazai-fusion-metrics
    restart: unless-stopped
    depends_on:
      - fusion-pipeline
      - prometheus
    environment:
      - METRICS_PORT=9090
      - FUSION_PIPELINE_URL=http://fusion-pipeline:8767
      - PROMETHEUS_GATEWAY=http://prometheus:9090
      - COLLECTION_INTERVAL=10
      - LOG_LEVEL=INFO
    ports:
      - "9091:9090"  # Metrics port
    volumes:
      - ./fusion:/app/fusion
      - ./config:/app/config
      - fusion-metrics-data:/app/data
    networks:
      - sutazai-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

volumes:
  fusion-data:
    driver: local
  fusion-cache:
    driver: local
  fusion-models:
    driver: local
  fusion-checkpoints:
    driver: local
  fusion-viz-data:
    driver: local
  fusion-exports:
    driver: local
  fusion-redis-data:
    driver: local
  fusion-metrics-data:
    driver: local

networks:
  sutazai-network:
    external: true
    name: sutazai-network