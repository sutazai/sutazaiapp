# SutazAI Ultra-Optimized Docker Compose Configuration
# Edge Computing Optimized with 50%+ size reduction
# Author: Edge Computing Optimization Specialist
# Date: August 10, 2025

networks:
  sutazai-network:
    external: true
    name: sutazai-network

services:
  # Database services (already optimized Alpine)
  postgres:
    container_name: sutazai-postgres-optimized
    deploy:
      resources:
        limits:
          cpus: '1.5'  # Reduced from 2
          memory: 1.5G  # Reduced from 2G
        reservations:
          cpus: '0.25'  # Reduced from 0.5
          memory: 256M  # Reduced from 512M
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-sutazai}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER:-sutazai}
    healthcheck:
      interval: 30s  # Increased from 10s
      retries: 3  # Reduced from 5
      start_period: 45s  # Reduced from 60s
      test:
      - CMD-SHELL
      - pg_isready -U ${POSTGRES_USER:-sutazai}
      timeout: 5s
    image: sutazai-postgres-secure:latest
    networks:
    - sutazai-network
    ports:
    - 10000:5432
    restart: unless-stopped
    volumes:
    - postgres_data:/var/lib/postgresql/data
    - ./IMPORTANT/init_db.sql:/docker-entrypoint-initdb.d/init.sql:ro

  redis:
    command: redis-server --save "" --appendonly no --maxmemory 256mb --maxmemory-policy allkeys-lru
    container_name: sutazai-redis-optimized
    deploy:
      resources:
        limits:
          cpus: '0.25'  # Reduced from 0.5
          memory: 256M  # Reduced from 512M
        reservations:
          cpus: '0.1'
          memory: 64M  # Reduced from 128M
    healthcheck:
      interval: 30s  # Increased from 10s
      retries: 3  # Reduced from 5
      test:
      - CMD-SHELL
      - redis-cli ping
      timeout: 5s
    image: sutazai-redis-secure:latest
    networks:
    - sutazai-network
    ports:
    - 10001:6379
    restart: unless-stopped
    volumes:
    - redis_data:/data

  # Core application services - Ultra-optimized
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.optimized
    container_name: sutazai-backend-optimized
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2'  # Reduced from 4
          memory: 2G  # Reduced from 4G
        reservations:
          cpus: '0.5'  # Reduced from 1
          memory: 512M  # Reduced from 1G
    environment:
      API_V1_STR: /api/v1
      BACKEND_CORS_ORIGINS: '["http://localhost:10011", "http://172.31.77.193:10011"]'
      DATABASE_URL: postgresql://${POSTGRES_USER:-sutazai}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-sutazai}
      JWT_SECRET: ${JWT_SECRET}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      REDIS_URL: redis://sutazai-redis-optimized:6379/0
      SECRET_KEY: ${SECRET_KEY}
      SUTAZAI_ENV: ${SUTAZAI_ENV:-production}
      TZ: ${TZ:-UTC}
      # Edge optimization settings
      WORKERS: 1
      MAX_REQUESTS: 1000
      MAX_REQUESTS_JITTER: 100
    healthcheck:
      interval: 60s
      retries: 3  # Reduced from 5
      start_period: 60s  # Reduced from 120s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8000/health
      timeout: 15s  # Reduced from 30s
    networks:
    - sutazai-network
    ports:
    - 10010:8000
    restart: unless-stopped
    volumes:
    - ./data:/data
    - ./logs:/logs

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.optimized
    container_name: sutazai-frontend-optimized
    depends_on:
      backend:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1'  # Reduced from 2
          memory: 1G  # Reduced from 2G
        reservations:
          cpus: '0.25'  # Reduced from 0.5
          memory: 256M  # Reduced from 512M
    environment:
      BACKEND_URL: http://backend:8000
      STREAMLIT_SERVER_ADDRESS: 0.0.0.0
      STREAMLIT_SERVER_PORT: 8501
      SUTAZAI_ENV: ${SUTAZAI_ENV:-production}
      TZ: ${TZ:-UTC}
      # Edge optimization settings
      STREAMLIT_BROWSER_GATHER_USAGE_STATS: false
      STREAMLIT_THEME_PRIMARY_COLOR: "#1f77b4"
      STREAMLIT_SERVER_ENABLE_CORS: false
    healthcheck:
      interval: 60s
      retries: 3  # Reduced from 5
      start_period: 60s  # Reduced from 120s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8501/health
      timeout: 15s  # Reduced from 30s
    networks:
    - sutazai-network
    ports:
    - 10011:8501
    restart: unless-stopped
    volumes:
    - ./data:/data

volumes:
  postgres_data: null
  redis_data: null
  prometheus_data: null