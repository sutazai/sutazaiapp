version: '3.8'

services:
  # LangFlow - Visual workflow builder
  langflow:
    container_name: sutazai-langflow
    image: langflowai/langflow:latest
    ports:
      - "7860:7860"
    environment:
      - LANGFLOW_DATABASE_URL=postgresql://sutazai:sutazai_password@postgres:5432/langflow
      - LANGFLOW_CONFIG_DIR=/app/langflow
      - LANGFLOW_LOG_LEVEL=INFO
    volumes:
      - ./data/langflow:/app/langflow
      - ./data/shared:/app/shared
    networks:
      - sutazai-network

  # FlowiseAI - Drag & drop AI workflow builder
  flowise:
    container_name: sutazai-flowise
    image: flowiseai/flowise:latest
    ports:
      - "3030:3000"
    environment:
      - DATABASE_TYPE=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=sutazai
      - DATABASE_PASSWORD=sutazai_password
      - DATABASE_NAME=flowise
      - FLOWISE_USERNAME=admin
      - FLOWISE_PASSWORD=sutazai_flowise
      - LOG_LEVEL=info
      - EXECUTION_MODE=main
    volumes:
      - ./data/flowise:/root/.flowise
    networks:
      - sutazai-network
  # Dify - AI application development platform
  dify-api:
    container_name: sutazai-dify-api
    image: langgenius/dify-api:0.6.13
    ports:
      - "5001:5001"
    environment:
      - MODE=api
      - LOG_LEVEL=INFO
      - SECRET_KEY=sk-dify-sutazai-secret-key
      - CONSOLE_WEB_URL=http://localhost:3031
      - INIT_PASSWORD=sutazai_dify
      - CONSOLE_API_URL=http://localhost:5001
      - SERVICE_API_URL=http://localhost:5001
      - APP_WEB_URL=http://localhost:3031
      - FILES_URL=http://localhost:5001
      - MIGRATION_ENABLED=true
      - DB_USERNAME=sutazai
      - DB_PASSWORD=sutazai_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=dify
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password
      - REDIS_USE_SSL=false
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://:redis_password@redis:6379/1
      - BROKER_USE_SSL=false
      - STORAGE_TYPE=local
      - STORAGE_LOCAL_PATH=storage
      - VECTOR_STORE=qdrant
      - QDRANT_URL=http://qdrant:6333
    volumes:
      - ./data/dify/storage:/app/api/storage
    networks:
      - sutazai-network
    restart: unless-stopped

  dify-worker:
    container_name: sutazai-dify-worker
    image: langgenius/dify-api:0.6.13
    environment:
      - MODE=worker
      - LOG_LEVEL=INFO
      - SECRET_KEY=sk-dify-sutazai-secret-key
      - DB_USERNAME=sutazai
      - DB_PASSWORD=sutazai_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=dify
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password
      - REDIS_USE_SSL=false
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://:redis_password@redis:6379/1
      - BROKER_USE_SSL=false
      - STORAGE_TYPE=local
      - STORAGE_LOCAL_PATH=storage
      - VECTOR_STORE=qdrant
      - QDRANT_URL=http://qdrant:6333
    volumes:
      - ./data/dify/storage:/app/api/storage
    networks:
      - sutazai-network
    restart: unless-stopped

  dify-web:
    container_name: sutazai-dify-web
    image: langgenius/dify-web:0.6.13
    ports:
      - "3031:3000"
    environment:
      - CONSOLE_API_URL=http://dify-api:5001
      - APP_API_URL=http://dify-api:5001
      - SENTRY_DSN=
    networks:
      - sutazai-network
  # LlamaIndex service
  llamaindex:
    container_name: sutazai-llamaindex
    build:
      context: ./services/llamaindex
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    environment:
      - PYTHONUNBUFFERED=1
      - OLLAMA_BASE_URL=http://ollama:11434
      - VECTOR_DB_URL=http://chromadb:8000
      - LOG_LEVEL=INFO
    volumes:
      - ./data/llamaindex:/app/data
    networks:
      - sutazai-network

  # ComfyUI for visual AI workflows
  comfyui:
    container_name: sutazai-comfyui
    image: pytorch/pytorch:2.1.0-cuda12.1-cudnn8-runtime
    ports:
      - "8188:8188"
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./data/comfyui:/app/ComfyUI
      - ./data/models:/app/models
    networks:
      - sutazai-network
    command: >
      bash -c "
        apt-get update && apt-get install -y git &&
        cd /app &&
        if [ ! -d 'ComfyUI' ]; then
          git clone https://github.com/comfyanonymous/ComfyUI.git
        fi &&
        cd ComfyUI &&
        pip install -r requirements.txt &&
        python main.py --listen 0.0.0.0 --port 8188
      "
    restart: unless-stopped

  # Chainlit for conversational AI apps
  chainlit:
    container_name: sutazai-chainlit
    build:
      context: ./services/chainlit
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - CHAINLIT_AUTH_SECRET=sutazai-chainlit-secret
      - CHAINLIT_DB_URL=postgresql://sutazai:sutazai_password@postgres:5432/chainlit
    volumes:
      - ./data/chainlit:/app/data
    networks:
      - sutazai-network
  # ML/DL Framework Services
  pytorch:
    container_name: sutazai-pytorch
    image: pytorch/pytorch:2.1.0-cuda12.1-cudnn8-runtime
    ports:
      - "8091:8091"
    environment:
      - PYTHONUNBUFFERED=1
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - ./data/pytorch:/workspace
      - ./data/models:/models
    networks:
      - sutazai-network
    command: >
      bash -c "
        pip install fastapi uvicorn transformers accelerate &&
        python -m uvicorn app:app --host 0.0.0.0 --port 8091
      "
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  tensorflow:
    container_name: sutazai-tensorflow
    image: tensorflow/tensorflow:2.14.0-gpu
    ports:
      - "8092:8092"
    environment:
      - PYTHONUNBUFFERED=1
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - ./data/tensorflow:/workspace
      - ./data/models:/models
    networks:
      - sutazai-network
    command: >
      bash -c "
        pip install fastapi uvicorn &&
        python -m uvicorn app:app --host 0.0.0.0 --port 8092
      "
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Jupyter for ML experimentation
  jupyter:
    container_name: sutazai-jupyter
    image: jupyter/datascience-notebook:latest
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=sutazai-jupyter-token
    volumes:
      - ./data/jupyter:/home/jovyan/work
      - ./data/models:/home/jovyan/models
    networks:
      - sutazai-network
    restart: unless-stopped

  # Ray for distributed computing
  ray-head:
    container_name: sutazai-ray-head
    image: rayproject/ray:2.9.0-py311
    ports:
      - "8265:8265"  # Ray dashboard
      - "10001:10001"  # Ray client
    environment:
      - RAY_SCHEDULER_EVENTS=0
    volumes:
      - ./data/ray:/tmp/ray
    networks:
      - sutazai-network
    command: ray start --head --dashboard-host=0.0.0.0
    restart: unless-stopped

networks:
  sutazai-network:
    name: sutazaiapp_sutazai-network
    external: true