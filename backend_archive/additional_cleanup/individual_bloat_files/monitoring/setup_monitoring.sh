#!/bin/bash
# SutazAI Monitoring System Setup Script
# This script installs the necessary dependencies for the monitoring system

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

echo "==== Setting up SutazAI Monitoring System ===="

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "Docker is not installed. Installing Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    echo "Docker installed. You may need to log out and back in for group changes to take effect."
else
    echo "Docker is already installed."
fi

# Check if Docker Compose is installed
if ! command -v docker-compose &> /dev/null; then
    echo "Docker Compose is not installed. Installing Docker Compose..."
    sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    echo "Docker Compose installed."
else
    echo "Docker Compose is already installed."
fi

# Set up Python virtual environment and dependencies
echo "Setting up Python environment for monitoring utilities..."
python3 -m venv ./venv || { echo "Failed to create virtual environment. Make sure python3-venv is installed."; exit 1; }
./venv/bin/pip install -U pip

cat > ./requirements.txt << EOF
prometheus-client>=0.14.1
structlog>=22.1.0
psutil>=5.9.4
sentry-sdk>=1.14.0
elasticsearch>=7.16.3,<8.0.0
elasticsearch-dsl>=7.4.0
python-dotenv>=0.21.0
requests>=2.28.1
FastAPI>=0.95.0
uvicorn>=0.21.1
EOF

./venv/bin/pip install -r requirements.txt

# Create directories
echo "Creating directory structure..."
mkdir -p ./prometheus/data
mkdir -p ./grafana/data
mkdir -p ./grafana/dashboards
mkdir -p ./elk/logstash/pipeline
mkdir -p ./elk/logstash/config
mkdir -p ./elk/filebeat
mkdir -p ./elk/metricbeat
mkdir -p ./sentry/data
mkdir -p ../logs

# Set permissions
echo "Setting permissions..."
chmod -R 755 .
chmod +x ./start_monitoring.sh

# Create configuration files if they don't exist
if [ ! -f ./prometheus/prometheus.yml ]; then
    echo "Creating default Prometheus configuration..."
    mkdir -p ./prometheus
    # Configuration will be generated by the start script
fi

if [ ! -f ./elk/logstash/config/logstash.yml ]; then
    echo "Creating default logstash.yml"
    mkdir -p ./elk/logstash/config
    cat > ./elk/logstash/config/logstash.yml << EOF
http.host: "0.0.0.0"
xpack.monitoring.elasticsearch.hosts: [ "http://elasticsearch:9200" ]
EOF
fi

if [ ! -f ./sentry/.env ]; then
    echo "Creating Sentry environment file template..."
    mkdir -p ./sentry
    cat > ./sentry/.env.example << EOF
# Sentry configuration
SENTRY_SECRET_KEY=changeme
SENTRY_POSTGRES_HOST=postgres
SENTRY_DB_USER=sentry
SENTRY_DB_PASSWORD=sentry
SENTRY_REDIS_HOST=redis
SENTRY_URL_PREFIX=http://localhost:9000
SENTRY_ADMIN_EMAIL=admin@example.com
EOF
    echo "Rename .env.example to .env and update the values to enable Sentry."
fi

echo "Creating default .env file for monitoring configuration..."
cat > ./.env << EOF
# SutazAI Monitoring Configuration
ENVIRONMENT=development
LOG_LEVEL=INFO
PUSH_GATEWAY_URL=http://localhost:9091
SENTRY_DSN=

# Elasticsearch credentials
ELASTIC_USERNAME=elastic
ELASTIC_PASSWORD=sutazaisecure

# Grafana credentials
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=sutazai
EOF

echo ""
echo "==== SutazAI Monitoring System Setup Complete ===="
echo "You can now start the monitoring system with:"
echo "  ./start_monitoring.sh"
echo ""
echo "Make sure to update .env with your configuration settings."
echo "" 