filebeat.config:
  modules:
    path: ${path.config}/modules.d/*.yml
    reload.enabled: true

filebeat.inputs:
# SutazAI application logs - regular format
- type: log
  enabled: true
  paths:
    - /opt/sutazaiapp/logs/*.log
  exclude_files: ['\.json\.log$']
  tags: ["sutazai", "application"]
  fields:
    app: sutazai
    environment: ${ENVIRONMENT:production}
    log_type: application
  fields_under_root: true

# SutazAI application logs - JSON format
- type: log
  enabled: true
  paths:
    - /opt/sutazaiapp/logs/*.json.log
  tags: ["sutazai", "application", "json"]
  json.keys_under_root: true
  json.add_error_key: true
  fields:
    app: sutazai
    environment: ${ENVIRONMENT:production}
    log_type: application_json
  fields_under_root: true

# SutazAI model logs
- type: log
  enabled: true
  paths:
    - /logs/model.log
    - /logs/model.json.log
  tags: ["sutazai", "model"]
  fields:
    app: sutazai
    component: model
    environment: ${ENVIRONMENT:production}
  fields_under_root: true

# SutazAI agent logs
- type: log
  enabled: true
  paths:
    - /logs/agent.log
    - /logs/agent.json.log
  tags: ["sutazai", "agent"]
  fields:
    app: sutazai
    component: agent
    environment: ${ENVIRONMENT:production}
  fields_under_root: true

# SutazAI API logs
- type: log
  enabled: true
  paths:
    - /logs/api.log
    - /logs/api.json.log
  tags: ["sutazai", "api"]
  fields:
    app: sutazai
    component: api
    environment: ${ENVIRONMENT:production}
  fields_under_root: true

# SutazAI metrics logs
- type: log
  enabled: true
  paths:
    - /logs/metrics.log
    - /logs/metrics.json.log
  tags: ["sutazai", "metrics"]
  fields:
    app: sutazai
    component: metrics
    environment: ${ENVIRONMENT:production}
  fields_under_root: true

# SutazAI security logs
- type: log
  enabled: true
  paths:
    - /logs/security.log
    - /logs/security.json.log
  tags: ["sutazai", "security"]
  fields:
    app: sutazai
    component: security
    environment: ${ENVIRONMENT:production}
  fields_under_root: true

# Docker logs
- type: container
  enabled: true
  paths:
    - /var/lib/docker/containers/*/*.log
  tags: ["sutazai", "docker"]
  json.keys_under_root: true
  json.message_key: log
  json.add_error_key: true
  fields:
    app: sutazai
    component: container
    environment: ${ENVIRONMENT:production}
    log_type: docker
  fields_under_root: true

# Nginx access logs
- type: log
  enabled: true
  paths:
    - /var/log/nginx/access.log
  fields:
    log_type: nginx_access
  fields_under_root: true

# Nginx error logs
- type: log
  enabled: true
  paths:
    - /var/log/nginx/error.log
  fields:
    log_type: nginx_error
  fields_under_root: true

processors:
  - add_host_metadata:
      when.not.contains.tags: forwarded
  - add_cloud_metadata: ~
  - add_docker_metadata: ~
  - add_kubernetes_metadata: ~
  - add_fields:
      target: ''
      fields:
        environment: ${ENVIRONMENT:development}
        service: sutazai
  - drop_fields:
      fields: ["agent.ephemeral_id", "agent.hostname", "agent.id", "agent.version", "ecs.version"]
  - rename:
      fields:
        - from: "host"
          to: "server"
        - from: "@timestamp"
          to: "timestamp"
      ignore_missing: true
      fail_on_error: false
  - drop_event:
      when:
        regexp:
          message: "^\\s*$"  # Drop events with empty messages

output.elasticsearch:
  hosts: ${ELASTICSEARCH_HOSTS}
  username: ${ELASTICSEARCH_USERNAME}
  password: ${ELASTICSEARCH_PASSWORD}
  indices:
    - index: "sutazai-logs-%{+yyyy.MM.dd}"
      when.contains.tags: application
    - index: "sutazai-model-%{+yyyy.MM.dd}"
      when.contains.tags: model
    - index: "sutazai-agent-%{+yyyy.MM.dd}"
      when.contains.tags: agent
    - index: "sutazai-api-%{+yyyy.MM.dd}"
      when.contains.tags: api
    - index: "sutazai-metrics-%{+yyyy.MM.dd}"
      when.contains.tags: metrics
    - index: "sutazai-security-%{+yyyy.MM.dd}"
      when.contains.tags: security
    - index: "sutazai-docker-%{+yyyy.MM.dd}"
      when.contains.tags: docker

# Sends monitoring data to Elasticsearch
monitoring.enabled: true
monitoring.elasticsearch:
  hosts: ${ELASTICSEARCH_HOSTS}
  username: ${ELASTICSEARCH_USERNAME}
  password: ${ELASTICSEARCH_PASSWORD}

setup.ilm.enabled: true
setup.ilm.rollover_alias: "sutazai"
setup.ilm.pattern: "{now/d}-000001"
setup.template.enabled: true

setup.kibana:
  host: ${KIBANA_HOST}
  username: ${ELASTICSEARCH_USERNAME}
  password: ${ELASTICSEARCH_PASSWORD}

logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/filebeat
  name: filebeat
  keepfiles: 7
  permissions: 0644

# HTTP endpoint for health checking
http.enabled: true
http.port: 5066
